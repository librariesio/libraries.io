<h1>GitHub Public Timeline feed</h1>

<div class="row">
  <div class="col-sm-8">
    <div id='timeline'></div>
  </div>
  <div class="col-sm-4">
    <h3>What is this?</h3>
    <p>
      This page is showing the real time public feed of activity on GitHub.
    </p>
    <p>
      See the code that powers it here: <a href="https://libraries.io/github/librariesio/github-firehose">https://libraries.io/github/librariesio/github-firehose</a>
    </p>
  </div>
</div>

<script type="text/javascript">
  var evtSource = new EventSource('http://github-firehose.libraries.io/events');
  var events = []

  var actionDescription = function(obj){
    switch (obj.type) {
      case 'PushEvent':
        return ' pushed to '
        break;
      case 'CommitCommentEvent':
        return ' commented on a commit in '
        break;
      case 'CreateEvent':
        return ' created a ' + obj.payload.ref_type + ' '
        break;
      case 'DeleteEvent':
        return ' deleted a ' + obj.payload.ref_type + ' on '
        break;
      case 'ForkEvent':
        return ' forked '
        break;
      case 'GollumEvent':
        return ' updated the wiki on '
        break;
      case 'IssueCommentEvent':
        return ' commented on a issue in '
        break;
      case 'IssuesEvent':
        return ' ' + obj.payload.action + ' an issue in '
        break;
      case 'MemberEvent':
        return ' added ' + obj.member.login + ' to '
        break;
      case 'PublicEvent':
        return ' open sourced '
        break;
      case 'PullRequestEvent':
        return ' ' + obj.payload.action + ' a pull request in '
        break;
      case 'PullRequestReviewCommentEvent':
        return ' commented on a pull request diff in '
        break;
      case 'ReleaseEvent':
        return ' published a new release of '
        break;
      case 'WatchEvent':
        return ' starred '
        break;
      default:
        return obj.type.toString()
    }
  }

  evtSource.addEventListener('event', function(evt) {
    data = JSON.parse(evt.data);
    events.push(data)
    trimmed = events.slice(Math.max(events.length - 30, 1))
    html = trimmed.reverse().map(function(obj){
      return '<a href="https://github.com/'+obj.actor.login+'"><img src="' + obj.actor.avatar_url + '" width="40" height="40"/></a> ' + '<a href="https://github.com/'+obj.actor.login+'">' + obj.actor.login + '</a>' + actionDescription(obj) + '<a href="https://github.com/'+obj.repo.name+'">' + obj.repo.name + '</a><br />'
    }).join('')
    $('#timeline')[0].innerHTML = html
  }, false);

</script>
