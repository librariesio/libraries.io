---
http_interactions:
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!rob!fig/cron/v3/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '937512496385445422'
      X-Datadog-Parent-Id:
      - '4397184599103296902'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '187'
      Content-Type:
      - application/json
      Date:
      - Thu, 11 Apr 2024 18:13:17 GMT
      Expires:
      - Thu, 11 Apr 2024 18:14:17 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.1","Time":"2020-01-04T01:05:08Z","Origin":{"VCS":"git","URL":"https://github.com/RobFig/cron","Ref":"refs/tags/v3.0.1","Hash":"ccba498c397bb90a9c84945bbb0f7af2d72b6309"}}'
  recorded_at: Thu, 11 Apr 2024 18:13:17 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!rob!fig/cron/v3/@v/v3.0.1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2990387839144516934'
      X-Datadog-Parent-Id:
      - '3008574381344662127'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '42'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 11 Apr 2024 18:11:21 GMT
      Expires:
      - Thu, 11 Apr 2024 21:11:21 GMT
      Cache-Control:
      - public, max-age=10800
      Last-Modified:
      - Thu, 11 Apr 2024 18:11:21 GMT
      Etag:
      - '"f895601ed42554966d2979f56420f655966b079254d92205b53828422298244f"'
      Content-Type:
      - text/plain; charset=UTF-8
      Age:
      - '116'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        module github.com/robfig/cron/v3

        go 1.12
  recorded_at: Thu, 11 Apr 2024 18:13:17 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3213606681789594508'
      X-Datadog-Parent-Id:
      - '75386255924751564'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs='' ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w=''
        ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q='' ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 11 Apr 2024 18:13:18 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 11 Apr 2024 18:13:18 GMT
recorded_with: VCR 6.2.0
