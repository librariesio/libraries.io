---
http_interactions:
- request:
    method: get
    uri: https://nuget.org/packages/Newtonsoft.Json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '442684980702164192'
      X-Datadog-Parent-Id:
      - '3424784956075254661'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Length:
      - '169'
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 28 Sep 2023 19:27:32 GMT
      Server:
      - Microsoft-IIS/10.0
      Location:
      - https://www.nuget.org/packages/Newtonsoft.Json
      Set-Cookie:
      - ARRAffinity=975e68d7348238685e42012d3f6cbc00234a5b18d5298412155d1333efcc22de;Path=/;HttpOnly;Secure;Domain=nuget.org
      - ARRAffinitySameSite=975e68d7348238685e42012d3f6cbc00234a5b18d5298412155d1333efcc22de;Path=/;HttpOnly;SameSite=None;Secure;Domain=nuget.org
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Content-Security-Policy:
      - frame-ancestors 'none'
      X-Frame-Options:
      - DENY
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
    body:
      encoding: ASCII-8BIT
      string: |-
        <head><title>Document Moved</title></head>
        <body><h1>Object Moved</h1>This document may be found <a HREF="https://www.nuget.org/packages/Newtonsoft.Json">here</a></body>
  recorded_at: Thu, 28 Sep 2023 19:27:32 GMT
- request:
    method: get
    uri: https://www.nuget.org/packages/Newtonsoft.Json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '506883723959706191'
      X-Datadog-Parent-Id:
      - '1962701536027065863'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Access-Control-Expose-Headers:
      - Request-Context
      Set-Cookie:
      - ARRAffinity=0632ca9db79921cff52d39e8281a50ff464d1c11d97e789130cd466b9287fce9;Path=/;HttpOnly;Secure;Domain=www.nuget.org
      - ARRAffinitySameSite=0632ca9db79921cff52d39e8281a50ff464d1c11d97e789130cd466b9287fce9;Path=/;HttpOnly;SameSite=None;Secure;Domain=www.nuget.org
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Request-Context:
      - appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b
      Content-Security-Policy:
      - frame-ancestors 'none'
      X-Frame-Options:
      - DENY
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Date:
      - Thu, 28 Sep 2023 19:27:31 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    adapter_metadata:
      vcr_decompressed: gzip
  recorded_at: Thu, 28 Sep 2023 19:27:32 GMT
recorded_with: VCR 6.2.0
