---
http_interactions:
- request:
    method: get
    uri: https://pkg.go.dev/google.golang.org/grpc/examples/route_guide/routeguide
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3646777288177769133'
      X-Datadog-Parent-Id:
      - '799090737131064117'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Tue, 16 Jan 2024 23:18:25 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 16 Jan 2024 23:18:26 GMT
recorded_with: VCR 6.2.0
