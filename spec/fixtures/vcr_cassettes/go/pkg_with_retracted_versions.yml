---
http_interactions:
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2802962247357530983'
      X-Datadog-Parent-Id:
      - '1204990073466697534'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '42'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Thu, 12 Oct 2023 15:52:44 GMT
      Expires:
      - Thu, 12 Oct 2023 15:53:44 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        v3.1.0
        v3.0.1
        v3.0.4
        v3.0.0
        v3.0.2
        v3.0.5
  recorded_at: Thu, 12 Oct 2023 15:52:44 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1404302773839497179'
      X-Datadog-Parent-Id:
      - '1488283682735176402'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '188'
      Content-Type:
      - application/json
      Date:
      - Thu, 12 Oct 2023 15:52:44 GMT
      Expires:
      - Thu, 12 Oct 2023 15:53:44 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.1.0","Time":"2022-10-18T18:02:56Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.1.0","Hash":"2db0f5e22596df067c3d4edf9b2f3e0727cc31ca"}}'
  recorded_at: Thu, 12 Oct 2023 15:52:44 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '846841639699228248'
      X-Datadog-Parent-Id:
      - '4271740125585272982'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '188'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 12 Oct 2023 15:52:44 GMT
      Expires:
      - Thu, 12 Oct 2023 15:53:44 GMT
      Cache-Control:
      - public, max-age=60
      Content-Type:
      - application/json
      Age:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.1.0","Time":"2022-10-18T18:02:56Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.1.0","Hash":"2db0f5e22596df067c3d4edf9b2f3e0727cc31ca"}}'
  recorded_at: Thu, 12 Oct 2023 15:52:44 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.1.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '4087352838378887168'
      X-Datadog-Parent-Id:
      - '1898412639684192991'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '1007'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 12 Oct 2023 15:44:31 GMT
      Expires:
      - Thu, 12 Oct 2023 18:44:31 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '493'
      Last-Modified:
      - Thu, 20 Oct 2022 05:14:33 GMT
      Etag:
      - '"09d7fa857da909b65b0866a746a176b718a77f7cda5204b217a2ed715ae8654b"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: "module github.com/go-gorp/gorp/v3\n\ngo 1.18\n\nretract (\n\t// Versions
        prior to 3.0.4 had a vulnerability in the dependency graph.  While we don't\n\t//
        directly use yaml, I'm not comfortable encouraging people to use versions
        with a\n\t// CVE - so prior versions are retracted.\n\t//\n\t// See CVE-2019-11254\n\t[v3.0.0,
        v3.0.3]\n)\n\nrequire (\n\tgithub.com/go-sql-driver/mysql v1.6.0\n\tgithub.com/lib/pq
        v1.10.7\n\tgithub.com/mattn/go-sqlite3 v1.14.15\n\tgithub.com/poy/onpar v1.1.2\n\tgithub.com/stretchr/testify
        v1.8.0\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/fatih/color
        v1.13.0 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/mattn/go-colorable
        v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.16 // indirect\n\tgithub.com/nelsam/hel/v2
        v2.3.3 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgolang.org/x/sys
        v0.0.0-20221013171732-95e765b1cc43 // indirect\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c
        // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
  recorded_at: Thu, 12 Oct 2023 15:52:45 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.1.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2756687664395010002'
      X-Datadog-Parent-Id:
      - '1585162572000127544'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '188'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 12 Oct 2023 14:01:31 GMT
      Expires:
      - Thu, 12 Oct 2023 17:01:31 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '6673'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.1.0","Time":"2022-10-18T18:02:56Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.1.0","Hash":"2db0f5e22596df067c3d4edf9b2f3e0727cc31ca"}}'
  recorded_at: Thu, 12 Oct 2023 15:52:45 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2440927166173049508'
      X-Datadog-Parent-Id:
      - '455404204680292548'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 12 Oct 2023 15:52:45 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 12 Oct 2023 15:52:45 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.4.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '85188171684059113'
      X-Datadog-Parent-Id:
      - '135787693452847956'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '188'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 12 Oct 2023 14:10:49 GMT
      Expires:
      - Thu, 12 Oct 2023 17:10:49 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '6116'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.4","Time":"2022-10-18T17:42:17Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.0.4","Hash":"09414b8e8b1bde64ca06c147258924e39a3b469a"}}'
  recorded_at: Thu, 12 Oct 2023 15:52:45 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1675023468964861633'
      X-Datadog-Parent-Id:
      - '1102943612873717864'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 12 Oct 2023 15:52:45 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 12 Oct 2023 15:52:45 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.5.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '4281110104181058968'
      X-Datadog-Parent-Id:
      - '4545854804513943358'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '188'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 12 Oct 2023 14:38:47 GMT
      Expires:
      - Thu, 12 Oct 2023 17:38:47 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '4438'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.5","Time":"2022-10-18T17:59:22Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.0.5","Hash":"f7ee81ce258e18e2feeb9a646217184b7b6833a4"}}'
  recorded_at: Thu, 12 Oct 2023 15:52:45 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.6
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1340173932974295902'
      X-Datadog-Parent-Id:
      - '866454551533350419'
      X-Datadog-Sampling-Priority:
      - '1'
      X-Datadog-Tags:
      - _dd.p.dm=-0
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 12 Oct 2023 15:52:46 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 12 Oct 2023 15:52:46 GMT
recorded_with: VCR 6.2.0
