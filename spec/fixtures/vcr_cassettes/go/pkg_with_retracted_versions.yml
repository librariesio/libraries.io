---
http_interactions:
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '365920288259705273'
      X-Datadog-Parent-Id:
      - '2437698352145110684'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '42'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Mon, 17 Jul 2023 21:26:46 GMT
      Expires:
      - Mon, 17 Jul 2023 21:27:46 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        v3.1.0
        v3.0.1
        v3.0.4
        v3.0.0
        v3.0.2
        v3.0.5
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:46 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.1.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3738531066359961030'
      X-Datadog-Parent-Id:
      - '4577316132240846591'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '188'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Mon, 17 Jul 2023 20:32:00 GMT
      Expires:
      - Mon, 17 Jul 2023 23:32:00 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '3286'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.1.0","Time":"2022-10-18T18:02:56Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.1.0","Hash":"2db0f5e22596df067c3d4edf9b2f3e0727cc31ca"}}'
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:46 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '474372265640781583'
      X-Datadog-Parent-Id:
      - '1079637800857560117'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 17 Jul 2023 21:26:46 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:46 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.1.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3606973580275737657'
      X-Datadog-Parent-Id:
      - '1167766034054356141'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Mon, 17 Jul 2023 21:26:46 GMT
      Expires:
      - Tue, 18 Jul 2023 00:26:46 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.1","Time":"2019-11-27T02:53:47Z"}'
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:46 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3482393497143488258'
      X-Datadog-Parent-Id:
      - '2927934134538649130'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 17 Jul 2023 21:26:46 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:46 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.4.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1139137050132066919'
      X-Datadog-Parent-Id:
      - '3157072905764948676'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '188'
      Content-Type:
      - application/json
      Date:
      - Mon, 17 Jul 2023 21:26:46 GMT
      Expires:
      - Tue, 18 Jul 2023 00:26:46 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.4","Time":"2022-10-18T17:42:17Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.0.4","Hash":"09414b8e8b1bde64ca06c147258924e39a3b469a"}}'
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:46 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2922924531191930011'
      X-Datadog-Parent-Id:
      - '2391867684926862850'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 17 Jul 2023 21:26:47 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iIGRhdGEtbGF5b3V0PSJyZXNwb25zaXZlIiBkYXRhLWxvY2FsPSIiPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB3aW5kb3cuX19lcnI9ZnVuY3Rpb24gZihlKXtmLnA9Zi5wfHxbXTtmLnAucHVzaChlKX0pOwogICAgPC9zY3JpcHQ+CiAgICA8c2NyaXB0PgogICAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgY29uc3QgdGhlbWUgPSBkb2N1bWVudC5jb29raWUubWF0Y2goL3ByZWZlcnMtY29sb3Itc2NoZW1lPShsaWdodHxkYXJrfGF1dG8pLyk/LlsxXQogICAgICAgIGlmICh0aGVtZSkgewogICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpLnNldEF0dHJpYnV0ZSgnZGF0YS10aGVtZScsIHRoZW1lKTsKICAgICAgICB9CiAgICAgIH0oKSkKICAgIDwvc2NyaXB0PgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDxtZXRhIG5hbWU9IkRlc2NyaXB0aW9uIiBjb250ZW50PSJQYWNrYWdlIGdvcnAgcHJvdmlkZXMgYSBzaW1wbGUgd2F5IHRvIG1hcnNoYWwgR28gc3RydWN0cyB0byBhbmQgZnJvbSBTUUwgZGF0YWJhc2VzLiI+CiAgICAKICAgIDxtZXRhIGNsYXNzPSJqcy1ndG1JRCIgZGF0YS1ndG1pZD0iR1RNLVc4TVZRWEciPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvc3RhdGljL3NoYXJlZC9pY29uL2Zhdmljb24uaWNvIj4KICAgIAogIAogICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyI+CiAgCgogICAgPGxpbmsgaHJlZj0iL3N0YXRpYy9mcm9udGVuZC9mcm9udGVuZC5taW4uY3NzP3ZlcnNpb249cHJvZC1mcm9udGVuZC0wMDA3OS1wZXgiIHJlbD0ic3R5bGVzaGVldCI+CiAgICAKICA8dGl0bGU+Z29ycCBwYWNrYWdlIC0gZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjMgLSBHbyBQYWNrYWdlczwvdGl0bGU+CgogICAgCiAgPGxpbmsgaHJlZj0iL3N0YXRpYy9mcm9udGVuZC91bml0L3VuaXQubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNzktcGV4IiByZWw9InN0eWxlc2hlZXQiPgogIAogIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvdW5pdC9tYWluL21haW4ubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNzktcGV4IiByZWw9InN0eWxlc2hlZXQiPgoKCiAgPC9oZWFkPgogIDxib2R5PgogICAgCiAgICA8c2NyaXB0PgogICAgICBmdW5jdGlvbiBsb2FkU2NyaXB0KHNyYywgbW9kID0gdHJ1ZSkgewogICAgICAgIGxldCBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICAgICAgcy5zcmMgPSBzcmM7CiAgICAgICAgaWYgKG1vZCkgewogICAgICAgICAgcy50eXBlID0gJ21vZHVsZSc7CiAgICAgICAgICBzLmFzeW5jID0gdHJ1ZTsKICAgICAgICAgIHMuZGVmZXIgPSB0cnVlCiAgICAgICAgfQogICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocyk7CiAgICAgIH0KICAgICAgbG9hZFNjcmlwdCgiL3RoaXJkX3BhcnR5L2RpYWxvZy1wb2x5ZmlsbC9kaWFsb2ctcG9seWZpbGwuanMiLCBmYWxzZSkKICAgICAgbG9hZFNjcmlwdCgiL3N0YXRpYy9mcm9udGVuZC9mcm9udGVuZC5qcyIpOwogICAgPC9zY3JpcHQ+CiAgICAKICA8aGVhZGVyIGNsYXNzPSJnby1IZWFkZXIgZ28tSGVhZGVyLS1mdWxsIGpzLXNpdGVIZWFkZXIiPgogICAgPGRpdiBjbGFzcz0iZ28tSGVhZGVyLWlubmVyIGdvLUhlYWRlci1pbm5lci0tZGFyayI+CiAgICAgIDxuYXYgY2xhc3M9ImdvLUhlYWRlci1uYXYiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgY2xhc3M9ImpzLWhlYWRlckxvZ28iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiCiAgICAgICAgICAgIGRhdGEtdGVzdC1pZD0iZ28taGVhZGVyLWxvZ28tbGluayI+CiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1IZWFkZXItbG9nbyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLXdoaXRlLnN2ZyIgYWx0PSJHbyI+CiAgICAgICAgPC9hPgogICAgICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1yaWdodENvbnRlbnQiPgogICAgICAgICAgCjxkaXYgY2xhc3M9ImdvLVNlYXJjaEZvcm0ganMtc2VhcmNoRm9ybSI+CiAgPGZvcm0KICAgIGNsYXNzPSJnby1JbnB1dEdyb3VwIGdvLVNob3J0Y3V0S2V5IGdvLVNlYXJjaEZvcm0tZm9ybSIKICAgIGFjdGlvbj0iL3NlYXJjaCIKICAgIGRhdGEtc2hvcnRjdXQ9Ii8iCiAgICBkYXRhLXNob3J0Y3V0LWFsdD0ic2VhcmNoIgogICAgZGF0YS1ndG1jPSJzZWFyY2ggZm9ybSIKICAgIGFyaWEtbGFiZWw9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIgogICAgcm9sZT0ic2VhcmNoIgogID4KICAgIDxpbnB1dCBuYW1lPSJxIiBjbGFzcz0iZ28tSW5wdXQganMtc2VhcmNoRm9jdXMiIGFyaWEtbGFiZWw9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIiB0eXBlPSJzZWFyY2giCiAgICAgICAgYXV0b2NhcGl0YWxpemU9Im9mZiIgYXV0b2NvbXBsZXRlPSJvZmYiIGF1dG9jb3JyZWN0PSJvZmYiIHNwZWxsY2hlY2s9ImZhbHNlIgogICAgICAgIHBsYWNlaG9sZGVyPSJTZWFyY2ggcGFja2FnZXMgb3Igc3ltYm9scyIKICAgICAgICB2YWx1ZT0iIiAvPgogICAgPGlucHV0IG5hbWU9Im0iIHZhbHVlPSIiIGhpZGRlbj4KICAgIDxidXR0b24gY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWludmVydGVkIiBhcmlhLWxhYmVsPSJTdWJtaXQgc2VhcmNoIj4KICAgICAgPGltZwogICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgIGhlaWdodD0iMjQiCiAgICAgICAgd2lkdGg9IjI0IgogICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9zZWFyY2hfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICBhbHQ9IiIKICAgICAgLz4KICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KICA8YnV0dG9uIGNsYXNzPSJnby1TZWFyY2hGb3JtLWV4cGFuZFNlYXJjaCBqcy1leHBhbmRTZWFyY2giIGRhdGEtZ3RtYz0ibmF2IGJ1dHRvbiIKICAgICAgYXJpYS1sYWJlbD0iT3BlbiBzZWFyY2giIGRhdGEtdGVzdC1pZD0iZXhwYW5kLXNlYXJjaCI+CiAgICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL3NlYXJjaF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CgogIDwvYnV0dG9uPgo8L2Rpdj4KCiAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1tZW51Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1kZXNrdG9wLW1lbnUtaG92ZXIiIGhyZWY9IiMiIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPgogICAgICAgICAgICAgICAgV2h5IEdvCiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9hcnJvd19kcm9wX2Rvd25fZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJzdWJtZW51IGRyb3Bkb3duIGljb24iPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51IGdvLUhlYWRlci1zdWJtZW51LS13aHkganMtZGVza3RvcC1zdWJtZW51LWhvdmVyIiBhcmlhLWxhYmVsPSJzdWJtZW51Ij4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjY2FzZS1zdHVkaWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPkNhc2UgU3R1ZGllczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8cD5Db21tb24gcHJvYmxlbXMgY29tcGFuaWVzIHNvbHZlIHdpdGggR288L3A+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI3VzZS1jYXNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5Vc2UgQ2FzZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHA+U3RvcmllcyBhYm91dCBob3cgYW5kIHdoeSBjb21wYW5pZXMgdXNlIEdvPC9wPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NlY3VyaXR5L3BvbGljeS8iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+U2VjdXJpdHkgUG9saWN5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwPkhvdyBHbyBjYW4gaGVscCBrZWVwIHlvdSBzZWN1cmUgYnkgZGVmYXVsdDwvcD4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIiBkYXRhLWd0bWM9Im5hdiBsaW5rIj5MZWFybjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1kZXNrdG9wLW1lbnUtaG92ZXIiIGhyZWY9IiMiIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPgogICAgICAgICAgICAgICAgRG9jcwogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYXJyb3dfZHJvcF9kb3duX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0ic3VibWVudSBkcm9wZG93biBpY29uIj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPHVsIGNsYXNzPSJnby1IZWFkZXItc3VibWVudSBnby1IZWFkZXItc3VibWVudS0tZG9jcyBqcy1kZXNrdG9wLXN1Ym1lbnUtaG92ZXIiIGFyaWEtbGFiZWw9InN1Ym1lbnUiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2RvYy9lZmZlY3RpdmVfZ28iPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RWZmZWN0aXZlIEdvPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxwPlRpcHMgZm9yIHdyaXRpbmcgY2xlYXIsIHBlcmZvcm1hbnQsIGFuZCBpZGlvbWF0aWMgR28gY29kZTwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jLyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5HbyBVc2VyIE1hbnVhbDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5BIGNvbXBsZXRlIGludHJvZHVjdGlvbiB0byBidWlsZGluZyBzb2Z0d2FyZSB3aXRoIEdvPC9wPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYvc3RkIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlN0YW5kYXJkIGxpYnJhcnk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHA+UmVmZXJlbmNlIGRvY3VtZW50YXRpb24gZm9yIEdvJ3Mgc3RhbmRhcmQgbGlicmFyeTwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jL2RldmVsL3JlbGVhc2UiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UmVsZWFzZSBOb3Rlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5MZWFybiB3aGF0J3MgbmV3IGluIGVhY2ggR28gcmVsZWFzZTwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0gZ28tSGVhZGVyLW1lbnVJdGVtLS1hY3RpdmUiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPlBhY2thZ2VzPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWRlc2t0b3AtbWVudS1ob3ZlciIgaHJlZj0iIyIgZGF0YS1ndG1jPSJuYXYgbGluayI+CiAgICAgICAgICAgICAgICBDb21tdW5pdHkKICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2Fycm93X2Ryb3BfZG93bl9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9InN1Ym1lbnUgZHJvcGRvd24gaWNvbiI+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnUgZ28tSGVhZGVyLXN1Ym1lbnUtLWNvbW11bml0eSBqcy1kZXNrdG9wLXN1Ym1lbnUtaG92ZXIiIGFyaWEtbGFiZWw9InN1Ym1lbnUiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3RhbGtzLyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5SZWNvcmRlZCBUYWxrczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5WaWRlb3MgZnJvbSBwcmlvciBldmVudHM8L3A+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1lZXR1cC5jb20vcHJvL2dvIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk1lZXR1cHM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbGF1bmNoX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5NZWV0IG90aGVyIGxvY2FsIEdvIGRldmVsb3BlcnM8L3A+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmcvZ28vd2lraS9Db25mZXJlbmNlcyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Db25mZXJlbmNlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9sYXVuY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxwPkxlYXJuIGFuZCBuZXR3b3JrIHdpdGggR28gZGV2ZWxvcGVycyBmcm9tIGFyb3VuZCB0aGUgd29ybGQ8L3A+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Jsb2ciPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+R28gYmxvZzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5UaGUgR28gcHJvamVjdCdzIG9mZmljaWFsIGJsb2cuPC9wPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9oZWxwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkdvIHByb2plY3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHA+R2V0IGhlbHAgYW5kIHN0YXkgaW5mb3JtZWQgZnJvbSBHbzwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgR2V0IGNvbm5lY3RlZAogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHA+PC9wPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbnMiPgogICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2cvZ29sYW5nLW51dHMiPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC9nb29nbGUtZ3JvdXBzLnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC9naXRodWIuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbiIgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9nb2xhbmciPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC90d2l0dGVyLnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vd3d3LnJlZGRpdC5jb20vci9nb2xhbmcvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvcmVkZGl0LnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvc2xhY2suc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbiIgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9jb2xsZWN0aXZlcy9nbyI+PGltZyBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vc29jaWFsL3N0YWNrLW92ZXJmbG93LnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICAgIDxidXR0b24gY2xhc3M9ImdvLUhlYWRlci1uYXZPcGVuIGpzLWhlYWRlck1lbnVCdXR0b24gZ28tSGVhZGVyLW5hdk9wZW4tLXdoaXRlIiBkYXRhLWd0bWM9Im5hdiBidXR0b24iIGFyaWEtbGFiZWw9Ik9wZW4gbmF2aWdhdGlvbiI+CiAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9uYXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KICA8YXNpZGUgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXIganMtaGVhZGVyIj4KICAgIDxuYXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1oZWFkZXIiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyI+CiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxvZ28iIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby1ibHVlLnN2ZyIgYWx0PSJHby4iPgogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDx1bCBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSBqcy1tb2JpbGUtc3VibmF2LXRyaWdnZXIgZ28tTmF2aWdhdGlvbkRyYXdlci1oYXNTdWJuYXYiPgogICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICA8c3Bhbj5XaHkgR288L3NwYW4+CiAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL25hdmlnYXRlX25leHRfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlciBnby1OYXZpZ2F0aW9uRHJhd2VyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLW5hdiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWhlYWRlciI+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9uYXZpZ2F0ZV9iZWZvcmVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgICAgV2h5IEdvCiAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3QiPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyNjYXNlLXN0dWRpZXMiPgogICAgICAgICAgICAgICAgICAgICAgQ2FzZSBTdHVkaWVzCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyN1c2UtY2FzZXMiPgogICAgICAgICAgICAgICAgICAgICAgVXNlIENhc2VzCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NlY3VyaXR5L3BvbGljeS8iPgogICAgICAgICAgICAgICAgICAgICAgU2VjdXJpdHkgUG9saWN5CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIj5MZWFybjwvYT4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0ganMtbW9iaWxlLXN1Ym5hdi10cmlnZ2VyIGdvLU5hdmlnYXRpb25EcmF3ZXItaGFzU3VibmF2Ij4KICAgICAgICAgICAgPGEgaHJlZj0iIyI+CiAgICAgICAgICAgICAgPHNwYW4+RG9jczwvc3Bhbj4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPgogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IgogICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbmF2aWdhdGVfbmV4dF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICA8L2E+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyIGdvLU5hdmlnYXRpb25EcmF3ZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+PGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbmF2aWdhdGVfYmVmb3JlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICA8L2k+CiAgICAgICAgICAgICAgICAgICAgRG9jcwogICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9kb2MvZWZmZWN0aXZlX2dvIj4KICAgICAgICAgICAgICAgICAgICAgIEVmZmVjdGl2ZSBHbwogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9kb2MvIj4KICAgICAgICAgICAgICAgICAgICAgIEdvIFVzZXIgTWFudWFsCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9zdGQiPgogICAgICAgICAgICAgICAgICAgICAgU3RhbmRhcmQgbGlicmFyeQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9kb2MvZGV2ZWwvcmVsZWFzZSI+CiAgICAgICAgICAgICAgICAgICAgICBSZWxlYXNlIE5vdGVzCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIGdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0tLWFjdGl2ZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iPlBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSBqcy1tb2JpbGUtc3VibmF2LXRyaWdnZXIgZ28tTmF2aWdhdGlvbkRyYXdlci1oYXNTdWJuYXYiPgogICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICA8c3Bhbj5Db21tdW5pdHk8L3NwYW4+CiAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL25hdmlnYXRlX25leHRfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyIGdvLU5hdmlnYXRpb25EcmF3ZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL25hdmlnYXRlX2JlZm9yZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgIENvbW11bml0eQogICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi90YWxrcy8iPgogICAgICAgICAgICAgICAgICAgICAgUmVjb3JkZWQgVGFsa3MKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iPgogICAgICAgICAgICAgICAgICAgICAgTWVldHVwcwogICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbGF1bmNoX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby93aWtpL0NvbmZlcmVuY2VzIj4KICAgICAgICAgICAgICAgICAgICAgIENvbmZlcmVuY2VzCiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9sYXVuY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9ibG9nIj4KICAgICAgICAgICAgICAgICAgICAgIEdvIGJsb2cKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvaGVscCI+CiAgICAgICAgICAgICAgICAgICAgICBHbyBwcm9qZWN0CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxkaXY+R2V0IGNvbm5lY3RlZDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbiIgaHJlZj0iaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9nL2dvbGFuZy1udXRzIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvZ29vZ2xlLWdyb3Vwcy5zdmciIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC9naXRodWIuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2dvbGFuZyI+PGltZyBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vc29jaWFsL3R3aXR0ZXIuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL3d3dy5yZWRkaXQuY29tL3IvZ29sYW5nLyI+PGltZyBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vc29jaWFsL3JlZGRpdC5zdmciIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvc2xhY2suc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2NvbGxlY3RpdmVzL2dvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvc3RhY2stb3ZlcmZsb3cuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgIDwvbmF2PgogIDwvYXNpZGU+CiAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1zY3JpbSBqcy1zY3JpbSIgcm9sZT0icHJlc2VudGF0aW9uIj48L2Rpdj4KCiAgICAKICA8bWFpbiBjbGFzcz0iZ28tTWFpbiI+CiAgICA8ZGl2IGNsYXNzPSJnby1NYWluLWJhbm5lciIgcm9sZT0iYWxlcnQiPjwvZGl2PgogICAgPGhlYWRlciBjbGFzcz0iZ28tTWFpbi1oZWFkZXIganMtbWFpbkhlYWRlciI+CiAgCiAgCiAgPG5hdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJCcmVhZGNydW1iIGdvLUJyZWFkY3J1bWIiIGFyaWEtbGFiZWw9IkJyZWFkY3J1bWIiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iIj4KICAgIDxvbD4KICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGkgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyIgZGF0YS1ndG1jPSJicmVhZGNydW1iIGxpbmsiPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICA8YSBocmVmPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjNAdjMuMS4wIiBkYXRhLWd0bWM9ImJyZWFkY3J1bWIgbGluayIgYXJpYS1jdXJyZW50PSJsb2NhdGlvbiIKICAgICAgICAgICAgICBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItYnJlYWRjcnVtYkN1cnJlbnQiPgogICAgICAgICAgICBnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MwogICAgICAgICAgPC9hPgogICAgICAgICAgCiAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICAgICAgdGl0bGU9IkNvcHkgcGF0aCB0byBjbGlwYm9hcmQuJiMxMDsmIzEwO2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzIgogICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICAgICAgZGF0YS10by1jb3B5PSJnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIKICAgICAgICAgICAgICBkYXRhLWd0bWM9ImJyZWFkY3J1bWJzIGJ1dHRvbiIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkIgogICAgICAgICAgICAgICAgaGVpZ2h0PSIyNCIKICAgICAgICAgICAgICAgIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb250ZW50X2NvcHlfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgICAgIGFsdD0iIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAKICAgICAgICAKICAgICAgPC9saT4KICAgIDwvb2w+CiAgPC9uYXY+CgogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyQ29udGVudCI+CiAgICAKICA8ZGl2IGNsYXNzPSJnby1NYWluLWhlYWRlclRpdGxlIGpzLXN0aWNreUhlYWRlciI+CiAgICA8YSBjbGFzcz0iZ28tTWFpbi1oZWFkZXJMb2dvIiBocmVmPSJodHRwczovL2dvLmRldi8iIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiIGFyaWEtbGFiZWw9IkxpbmsgdG8gR28gSG9tZXBhZ2UiPgogICAgICA8aW1nIGhlaWdodD0iNzgiIHdpZHRoPSIyMDciIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby1ibHVlLnN2ZyIgYWx0PSJHbyI+CiAgICA8L2E+CiAgICA8aDEgY2xhc3M9IlVuaXRIZWFkZXItdGl0bGVIZWFkaW5nIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItdGl0bGUiPmdvcnA8L2gxPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5wYWNrYWdlPC9zcGFuPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5tb2R1bGU8L3NwYW4+CiAgICAKICAgIAogICAgICAKICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICB0aXRsZT0iQ29weSBwYXRoIHRvIGNsaXBib2FyZC4mIzEwOyYjMTA7Z2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjMiCiAgICAgICAgICBhcmlhLWxhYmVsPSJDb3B5IFBhdGggdG8gQ2xpcGJvYXJkIgogICAgICAgICAgZGF0YS10by1jb3B5PSJnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIKICAgICAgICAgIGRhdGEtZ3RtYz0idGl0bGUgYnV0dG9uIgogICAgICAgICAgdGFiaW5kZXg9Ii0xIgogICAgICAgID4KICAgICAgICAgIDxpbWcKICAgICAgICAgICAgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0tYWNjZW50ZWQiCiAgICAgICAgICAgIGhlaWdodD0iMjQiCiAgICAgICAgICAgIHdpZHRoPSIyNCIKICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2NvbnRlbnRfY29weV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIAogICAgCiAgPC9kaXY+CgogICAgCiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxzIj4KICAgIAogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItdmVyc2lvbiI+CiAgICA8YSBocmVmPSI/dGFiPXZlcnNpb25zIiBhcmlhLWxhYmVsPSJHbyB0byBWZXJzaW9ucyIgZGF0YS1ndG1jPSJoZWFkZXIgbGluayI+PHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPlZlcnNpb246IDwvc3Bhbj52My4xLjA8L2E+CiAgICAKICAgIDxzcGFuIGNsYXNzPSJEZXRhaWxzSGVhZGVyLWJhZGdlLS1sYXRlc3QiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1taW5vclZlcnNpb25CYW5uZXIiPgogICAgICA8c3BhbiBjbGFzcz0iZ28tQ2hpcCBEZXRhaWxzSGVhZGVyLXNwYW4tLWxhdGVzdCI+TGF0ZXN0PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iZ28tQ2hpcCBEZXRhaWxzSGVhZGVyLXNwYW4tLW5vdEF0TGF0ZXN0Ij4KICAgICAgICBMYXRlc3QKICAgICAgICAKICA8ZGV0YWlscyBjbGFzcz0iZ28tVG9vbHRpcCBqcy10b29sdGlwIiBkYXRhLWd0bWM9InRvb2x0aXAiPgogICAgPHN1bW1hcnk+CiAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2FsZXJ0X2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iV2FybmluZyI+CiAgICA8L3N1bW1hcnk+CiAgICA8cD5UaGlzIHBhY2thZ2UgaXMgbm90IGluIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBpdHMgbW9kdWxlLjwvcD4KICA8L2RldGFpbHM+CgogICAgICA8L3NwYW4+CiAgICAgIDxhIGhyZWY9Ii9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIgYXJpYS1sYWJlbD0iR28gdG8gTGF0ZXN0IFZlcnNpb24iIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWFsZXJ0IERldGFpbHNIZWFkZXItc3Bhbi0tZ29Ub0xhdGVzdCI+R28gdG8gbGF0ZXN0PC9zcGFuPgogICAgICA8L2E+CiAgICA8L3NwYW4+CiAgPC9zcGFuPgoKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWNvbW1pdFRpbWUiPgogICAgUHVibGlzaGVkOiBPY3QgMTgsIDIwMjIKICA8L3NwYW4+CgogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZXMiPgogICAgTGljZW5zZTogPGEgaHJlZj0iL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzP3RhYj1saWNlbnNlcyIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWxpY2Vuc2UiCiAgICAgICAgICAgIGFyaWEtbGFiZWw9IkdvIHRvIExpY2Vuc2VzIiBkYXRhLWd0bWM9ImhlYWRlciBsaW5rIj5NSVQ8L2E+CiAgICAgIAogICAgCiAgPC9zcGFuPgoKICAgICAgCiAgICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWltcG9ydHMiPgogICAgPGEgaHJlZj0iL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzP3RhYj1pbXBvcnRzIiBhcmlhLWxhYmVsPSJHbyB0byBJbXBvcnRzIgogICAgICAgIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICA8c3BhbiBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+SW1wb3J0czogPC9zcGFuPjEzCiAgICA8L2E+CiAgPC9zcGFuPgoKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0ZWRieSI+CiAgICA8YSBocmVmPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjM/dGFiPWltcG9ydGVkYnkiIGFyaWEtbGFiZWw9IkdvIHRvIEltcG9ydGVkIEJ5IgogICAgICAgIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgPHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPkltcG9ydGVkIGJ5OiA8L3NwYW4+MTkKICAgIDwvYT4KICA8L3NwYW4+CgogICAgICAKICAgIAogIDwvZGl2PgogIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dDb250YWluZXIiPgogICAgPHN2ZyBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd0ltYWdlIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgd2lkdGg9IjI0Ij4KICAgICAgPHBhdGggZD0iTTAgMGgyNHYyNEgweiIgZmlsbD0ibm9uZSIvPgogICAgICA8cGF0aCBkPSJNMTIgOGMxLjEgMCAyLS45IDItMnMtLjktMi0yLTItMiAuOS0yIDIgLjkgMiAyIDJ6bTAgMmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTAgNmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6Ii8+CiAgICA8L3N2Zz4KICAgIDxzZWxlY3QgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dTZWxlY3QganMtc2VsZWN0TmF2IiB0YWJpbmRleD0iLTEiPgogICAgICA8b3B0aW9uIHZhbHVlPSIvIj5NYWluPC9vcHRpb24+CiAgICAgIDxvcHRpb24gdmFsdWU9Ii9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92Mz90YWI9dmVyc2lvbnMiPgogICAgICAgIFZlcnNpb25zCiAgICAgIDwvb3B0aW9uPgogICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjM/dGFiPWxpY2Vuc2VzIj4KICAgICAgICBMaWNlbnNlcwogICAgICA8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzP3RhYj1pbXBvcnRzIj4KICAgICAgICAgIEltcG9ydHMKICAgICAgICA8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjM/dGFiPWltcG9ydGVkYnkiPgogICAgICAgICAgSW1wb3J0ZWQgQnkKICAgICAgICA8L29wdGlvbj4KICAgICAgCiAgICA8L3NlbGVjdD4KICA8L2Rpdj4KCgogIDwvZGl2PgoKPC9oZWFkZXI+CiAgICA8YXNpZGUgY2xhc3M9ImdvLU1haW4tYXNpZGUgIGpzLW1haW5Bc2lkZSI+CiAgCiAgPGRpdiBjbGFzcz0iVW5pdE1ldGEiPgogICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPkRldGFpbHM8L2gyPgogICAgCiAgPHVsIGNsYXNzPSJVbml0TWV0YS1kZXRhaWxzIj4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVmFsaWQgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC90cmVlL3YzLjEuMC9nby5tb2QiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj5nby5tb2Q8L2E+IGZpbGUKICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD4KICAgICAgICAgIFRoZSBHbyBtb2R1bGUgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkIGluIEdvIDEuMTEgYW5kIGlzIHRoZSBvZmZpY2lhbCBkZXBlbmRlbmN5IG1hbmFnZW1lbnQKICAgICAgICAgIHNvbHV0aW9uIGZvciBHby4KICAgICAgICA8L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1hY2NlbnRlZCJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2hlY2tfY2lyY2xlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vaGVscF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgICAgICA8L3N1bW1hcnk+CiAgICAgICAgPHA+CiAgICAgICAgICBSZWRpc3RyaWJ1dGFibGUgbGljZW5zZXMgcGxhY2UgbWluaW1hbCByZXN0cmljdGlvbnMgb24gaG93IHNvZnR3YXJlIGNhbiBiZSB1c2VkLAogICAgICAgICAgbW9kaWZpZWQsIGFuZCByZWRpc3RyaWJ1dGVkLgogICAgICAgIDwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5Nb2R1bGVzIHdpdGggdGFnZ2VkIHZlcnNpb25zIGdpdmUgaW1wb3J0ZXJzIG1vcmUgcHJlZGljdGFibGUgYnVpbGRzLjwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgU3RhYmxlIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5XaGVuIGEgcHJvamVjdCByZWFjaGVzIG1ham9yIHZlcnNpb24gdjEgaXQgaXMgY29uc2lkZXJlZCBzdGFibGUuPC9wPgogICAgICA8L2RldGFpbHM+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJVbml0TWV0YS1kZXRhaWxzTGVhcm4iPgogICAgICA8YSBocmVmPSIvYWJvdXQjYmVzdC1wcmFjdGljZXMtaDIiIGRhdGEtZ3RtYz0ibWV0YSBsaW5rIj5MZWFybiBtb3JlPC9hPgogICAgPC9saT4KICA8L3VsPgoKICAgIDxoMiBjbGFzcz0iZ28tdGV4dExhYmVsIj5SZXBvc2l0b3J5PC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRNZXRhLXJlcG8iPgogICAgICAKICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPgogICAgICAgICAgZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAKICAgICAgICA8L2E+CiAgICAgIAogICAgPC9kaXY+CiAgICAKICAgICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPkxpbmtzPC9oMj4KICAgICAgPHVsIGNsYXNzPSJVbml0TWV0YS1saW5rcyI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGVwcy5kZXYvZ28vZ2l0aHViLmNvbSUyRmdvLWdvcnAlMkZnb3JwJTJGdjMvdjMuMS4wIiB0aXRsZT0iVmlldyB0aGlzIG1vZHVsZSBvbiBPcGVuIFNvdXJjZSBJbnNpZ2h0cyIKICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgZGF0YS10ZXN0LWlkPSJtZXRhLWxpbmstZGVwc2RldiI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iZGVwc2Rldi1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vZGVwc2Rldi1sb2dvLnN2ZyIKICAgICAgICAgICAgICAgIGFsdD0iT3BlbiBTb3VyY2UgSW5zaWdodHMgTG9nbyIgLz4KICAgICAgICAgICAgICBPcGVuIFNvdXJjZSBJbnNpZ2h0cwogICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgIAogIAoKICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICA8L3VsPgogICAgCiAgPC9kaXY+Cgo8L2FzaWRlPgogICAgPG5hdiBjbGFzcz0iZ28tTWFpbi1uYXYgZ28tTWFpbi1uYXYtLXN0aWNreSBqcy1tYWluTmF2IiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdkRlc2t0b3AiPgogICAgCiAgPGRpdiBjbGFzcz0iVW5pdE91dGxpbmUtanVtcFRvIj4KICAgIDxidXR0b24gY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUb0lucHV0IGdvLVNob3J0Y3V0S2V5IGpzLWp1bXBUb0lucHV0IgogICAgICAgIGFyaWEtY29udHJvbHM9Imp1bXAtdG8tbW9kYWwiCiAgICAgICAgYXJpYS1sYWJlbD0iT3BlbiBKdW1wIHRvIElkZW50aWZpZXIiCiAgICAgICAgZGF0YS1zaG9ydGN1dD0iZiIKICAgICAgICBkYXRhLXNob3J0Y3V0LWFsdD0iZmluZCIKICAgICAgICBkYXRhLXRlc3QtaWQ9Imp1bXAtdG8tYnV0dG9uIiBkYXRhLWd0bWM9Im91dGxpbmUgYnV0dG9uIj4KICAgICAgSnVtcCB0byAuLi4KICAgIDwvYnV0dG9uPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iZ28tVHJlZSBqcy10cmVlIiByb2xlPSJ0cmVlIiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICAgIAogICAgICA8bGkgY2xhc3M9ImpzLXJlYWRtZU91dGxpbmUiPgogICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgUkVBRE1FCiAgICAgICAgPC9hPgogICAgICAgIAogIDx1bCBpZD0icmVhZG1lLW91dGxpbmUiPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXVwZGF0ZS0yMDE2LTExLTEzLWZ1dHVyZS12ZXJzaW9ucyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFVwZGF0ZSAyMDE2LTExLTEzOiBGdXR1cmUgdmVyc2lvbnMKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWludHJvZHVjdGlvbiIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEludHJvZHVjdGlvbgogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtaW5zdGFsbGF0aW9uIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgSW5zdGFsbGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS12ZXJzaW9uaW5nIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgVmVyc2lvbmluZwogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc3VwcG9ydGVkLWdvLXZlcnNpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgU3VwcG9ydGVkIEdvIHZlcnNpb25zCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1taWdyYXRpb24tZ3VpZGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBNaWdyYXRpb24gZ3VpZGUKICAgICAgICA8L2E+CiAgICAgICAgCiAgICAgICAgICA8dWw+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtcHJlLXYyLXRvLXYyIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBQcmUtdjIgdG8gdjIKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1oZWxwLXN1cHBvcnQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBIZWxwL1N1cHBvcnQKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXF1aWNrc3RhcnQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBRdWlja3N0YXJ0CiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1leGFtcGxlcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEV4YW1wbGVzCiAgICAgICAgPC9hPgogICAgICAgIAogICAgICAgICAgPHVsPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW1hcHBpbmctc3RydWN0cy10by10YWJsZXMiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIE1hcHBpbmcgc3RydWN0cyB0byB0YWJsZXMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXN0cnVjdC1lbWJlZGRpbmciIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIFN0cnVjdCBFbWJlZGRpbmcKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWNyZWF0ZS1kcm9wLXRhYmxlcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgQ3JlYXRlL0Ryb3AgVGFibGVzCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1zcWwtbG9nZ2luZyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgU1FMIExvZ2dpbmcKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWluc2VydCIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgSW5zZXJ0CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS11cGRhdGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIFVwZGF0ZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtZGVsZXRlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBEZWxldGUKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXNlbGVjdC1ieS1rZXkiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIFNlbGVjdCBieSBLZXkKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWFkLWhvYy1zcWwiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIEFkIEhvYyBTUUwKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc2VsZWN0IiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgIFNFTEVDVAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXNlbGVjdC1zdHJpbmctb3ItaW50NjQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgU0VMRUNUIHN0cmluZyBvciBpbnQ2NAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW5hbWVkLWJpbmQtcGFyYW1ldGVycyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lZCBiaW5kIHBhcmFtZXRlcnMKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS11cGRhdGUtZGVsZXRlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgIFVQREFURSAvIERFTEVURQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXRyYW5zYWN0aW9ucyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgVHJhbnNhY3Rpb25zCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1ob29rcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgSG9va3MKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW9wdGltaXN0aWMtbG9ja2luZyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgT3B0aW1pc3RpYyBMb2NraW5nCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW5vdGUtdGhhdC10aGlzLWJlaGF2aW91ci1oYXMtY2hhbmdlZC1pbi12Mi1zZWUtbWlncmF0aW9uLWd1aWRlLW1pZ3JhdGlvbi1ndWlkZSIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBOb3RlIHRoYXQgdGhpcyBiZWhhdmlvdXIgaGFzIGNoYW5nZWQgaW4gdjIuIFNlZSBNaWdyYXRpb24gR3VpZGUuCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtYWRkaW5nLWluZGV4LWVzLW9uLWNvbHVtbi1zLWJleW9uZC10aGUtcHJpbWFyeS1rZXkiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIEFkZGluZyBJTkRFWChlcykgb24gY29sdW1uKHMpIGJleW9uZCB0aGUgcHJpbWFyeSBrZXkKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1kYXRhYmFzZS1kcml2ZXJzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgRGF0YWJhc2UgRHJpdmVycwogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc3FsaXRlMy1leHRlbnNpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgU3FsaXRlMyBFeHRlbnNpb25zCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1rbm93bi1pc3N1ZXMiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBLbm93biBJc3N1ZXMKICAgICAgICA8L2E+CiAgICAgICAgCiAgICAgICAgICA8dWw+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc3FsLXBsYWNlaG9sZGVyLXBvcnRhYmlsaXR5IiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBTUUwgcGxhY2Vob2xkZXIgcG9ydGFiaWxpdHkKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXRpbWUtdGltZS1hbmQtdGltZS16b25lcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgdGltZS5UaW1lIGFuZCB0aW1lIHpvbmVzCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgIAogICAgICAgICAgPC91bD4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtcnVubmluZy10aGUtdGVzdHMiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBSdW5uaW5nIHRoZSB0ZXN0cwogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtcGVyZm9ybWFuY2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBQZXJmb3JtYW5jZQogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtY29udHJpYnV0b3JzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgQ29udHJpYnV0b3JzCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgICAKICA8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIiBkYXRhLWd0bWM9Im91dGxpbmUgbGluayI+CiAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgIAo8dWw+CiAgCiAgICA8bGk+CiAgICAgIDxhIGhyZWY9IiNwa2ctb3ZlcnZpZXciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+T3ZlcnZpZXc8L2E+CiAgICA8L2xpPgogIDxsaSBjbGFzcz0iRG9jTmF2LW92ZXJ2aWV3Ij4KICAgICAgPGEgaHJlZj0iI3BrZy1pbmRleCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIENvbnN0YW50cwogICAgICA8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgVmFyaWFibGVzCiAgICAgIDwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICAKICAgICAgICA8dWw+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNOb25GYXRhbEVycm9yIiB0aXRsZT0iTm9uRmF0YWxFcnJvcihlcnIpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTm9uRmF0YWxFcnJvcihlcnIpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjU2VsZWN0RmxvYXQiIHRpdGxlPSJTZWxlY3RGbG9hdChlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3RGbG9hdChlLCBxdWVyeSwgYXJncykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNTZWxlY3RJbnQiIHRpdGxlPSJTZWxlY3RJbnQoZSwgcXVlcnksIGFyZ3MpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgU2VsZWN0SW50KGUsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE51bGxGbG9hdCIgdGl0bGU9IlNlbGVjdE51bGxGbG9hdChlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3ROdWxsRmxvYXQoZSwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjU2VsZWN0TnVsbEludCIgdGl0bGU9IlNlbGVjdE51bGxJbnQoZSwgcXVlcnksIGFyZ3MpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgU2VsZWN0TnVsbEludChlLCBxdWVyeSwgYXJncykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNTZWxlY3ROdWxsU3RyIiB0aXRsZT0iU2VsZWN0TnVsbFN0cihlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3ROdWxsU3RyKGUsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE9uZSIgdGl0bGU9IlNlbGVjdE9uZShtLCBlLCBob2xkZXIsIHF1ZXJ5LCBhcmdzKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFNlbGVjdE9uZShtLCBlLCBob2xkZXIsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NlbGVjdFN0ciIgdGl0bGU9IlNlbGVjdFN0cihlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3RTdHIoZSwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgPC91bD4KICAgICAgCiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdHlwZXMiPgogICAgICA8YSBocmVmPSIjcGtnLXR5cGVzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIFR5cGVzCiAgICAgIDwvYT4KICAgICAgPHVsPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5GaWx0ZXIiIHRpdGxlPSJ0eXBlIENvbHVtbkZpbHRlciIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIENvbHVtbkZpbHRlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcCIgdGl0bGU9InR5cGUgQ29sdW1uTWFwIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgQ29sdW1uTWFwCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuUmVuYW1lIiB0aXRsZT0iKGMpIFJlbmFtZShjb2xuYW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBSZW5hbWUoY29sbmFtZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuU2V0TWF4U2l6ZSIgdGl0bGU9IihjKSBTZXRNYXhTaXplKHNpemUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFNldE1heFNpemUoc2l6ZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuU2V0Tm90TnVsbCIgdGl0bGU9IihjKSBTZXROb3ROdWxsKG5uKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBTZXROb3ROdWxsKG5uKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRUcmFuc2llbnQiIHRpdGxlPSIoYykgU2V0VHJhbnNpZW50KGIpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFNldFRyYW5zaWVudChiKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRVbmlxdWUiIHRpdGxlPSIoYykgU2V0VW5pcXVlKGIpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFNldFVuaXF1ZShiKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0N1c3RvbVNjYW5uZXIiIHRpdGxlPSJ0eXBlIEN1c3RvbVNjYW5uZXIiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBDdXN0b21TY2FubmVyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDdXN0b21TY2FubmVyLkJpbmQiIHRpdGxlPSIobWUpIEJpbmQoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtZSkgQmluZCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAiIHRpdGxlPSJ0eXBlIERiTWFwIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgRGJNYXAKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkFkZFRhYmxlIiB0aXRsZT0iKG0pIEFkZFRhYmxlKGkpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIEFkZFRhYmxlKGkpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQWRkVGFibGVEeW5hbWljIiB0aXRsZT0iKG0pIEFkZFRhYmxlRHluYW1pYyhpbnAsIHNjaGVtYSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgQWRkVGFibGVEeW5hbWljKGlucCwgc2NoZW1hKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkFkZFRhYmxlV2l0aE5hbWUiIHRpdGxlPSIobSkgQWRkVGFibGVXaXRoTmFtZShpLCBuYW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBBZGRUYWJsZVdpdGhOYW1lKGksIG5hbWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYSIgdGl0bGU9IihtKSBBZGRUYWJsZVdpdGhOYW1lQW5kU2NoZW1hKGksIHNjaGVtYSwgbmFtZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYShpLCBzY2hlbWEsIG5hbWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQmVnaW4iIHRpdGxlPSIobSkgQmVnaW4oKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBCZWdpbigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQ3JlYXRlSW5kZXgiIHRpdGxlPSIobSkgQ3JlYXRlSW5kZXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBDcmVhdGVJbmRleCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQ3JlYXRlVGFibGVzIiB0aXRsZT0iKG0pIENyZWF0ZVRhYmxlcygpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIENyZWF0ZVRhYmxlcygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMiIHRpdGxlPSIobSkgQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBDcmVhdGVUYWJsZXNJZk5vdEV4aXN0cygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRGVsZXRlIiB0aXRsZT0iKG0pIERlbGV0ZShsaXN0KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEZWxldGUobGlzdCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5Ecm9wVGFibGUiIHRpdGxlPSIobSkgRHJvcFRhYmxlKHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEcm9wVGFibGUodGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRHJvcFRhYmxlSWZFeGlzdHMiIHRpdGxlPSIobSkgRHJvcFRhYmxlSWZFeGlzdHModGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIERyb3BUYWJsZUlmRXhpc3RzKHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkRyb3BUYWJsZXMiIHRpdGxlPSIobSkgRHJvcFRhYmxlcygpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIERyb3BUYWJsZXMoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkRyb3BUYWJsZXNJZkV4aXN0cyIgdGl0bGU9IihtKSBEcm9wVGFibGVzSWZFeGlzdHMoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEcm9wVGFibGVzSWZFeGlzdHMoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkR5bmFtaWNUYWJsZUZvciIgdGl0bGU9IihtKSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lLCBjaGVja1BLKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lLCBjaGVja1BLKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkV4ZWMiIHRpdGxlPSIobSkgRXhlYyhxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgRXhlYyhxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5HZXQiIHRpdGxlPSIobSkgR2V0KGksIGtleXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIEdldChpLCBrZXlzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkluc2VydCIgdGl0bGU9IihtKSBJbnNlcnQobGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgSW5zZXJ0KGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUHJlcGFyZSIgdGl0bGU9IihtKSBQcmVwYXJlKHF1ZXJ5KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBQcmVwYXJlKHF1ZXJ5KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlF1ZXJ5IiB0aXRsZT0iKG0pIFF1ZXJ5KHEsIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFF1ZXJ5KHEsIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUXVlcnlSb3ciIHRpdGxlPSIobSkgUXVlcnlSb3cocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFF1ZXJ5Um93KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdCIgdGl0bGU9IihtKSBTZWxlY3QoaSwgcXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFNlbGVjdChpLCBxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3RGbG9hdCIgdGl0bGU9IihtKSBTZWxlY3RGbG9hdChxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0RmxvYXQocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0SW50IiB0aXRsZT0iKG0pIFNlbGVjdEludChxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0SW50KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdE51bGxGbG9hdCIgdGl0bGU9IihtKSBTZWxlY3ROdWxsRmxvYXQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFNlbGVjdE51bGxGbG9hdChxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsSW50IiB0aXRsZT0iKG0pIFNlbGVjdE51bGxJbnQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFNlbGVjdE51bGxJbnQocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0TnVsbFN0ciIgdGl0bGU9IihtKSBTZWxlY3ROdWxsU3RyKHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBTZWxlY3ROdWxsU3RyKHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdE9uZSIgdGl0bGU9IihtKSBTZWxlY3RPbmUoaG9sZGVyLCBxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0T25lKGhvbGRlciwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0U3RyIiB0aXRsZT0iKG0pIFNlbGVjdFN0cihxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0U3RyKHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlRhYmxlRm9yIiB0aXRsZT0iKG0pIFRhYmxlRm9yKHQsIGNoZWNrUEspIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFRhYmxlRm9yKHQsIGNoZWNrUEspCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJhY2VPZmYiIHRpdGxlPSIobSkgVHJhY2VPZmYoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBUcmFjZU9mZigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJhY2VPbiIgdGl0bGU9IihtKSBUcmFjZU9uKHByZWZpeCwgbG9nZ2VyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBUcmFjZU9uKHByZWZpeCwgbG9nZ2VyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlRydW5jYXRlVGFibGVzIiB0aXRsZT0iKG0pIFRydW5jYXRlVGFibGVzKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgVHJ1bmNhdGVUYWJsZXMoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlVwZGF0ZSIgdGl0bGU9IihtKSBVcGRhdGUobGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgVXBkYXRlKGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVXBkYXRlQ29sdW1ucyIgdGl0bGU9IihtKSBVcGRhdGVDb2x1bW5zKGZpbHRlciwgbGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgVXBkYXRlQ29sdW1ucyhmaWx0ZXIsIGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuV2l0aENvbnRleHQiIHRpdGxlPSIobSkgV2l0aENvbnRleHQoY3R4KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBXaXRoQ29udGV4dChjdHgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGlhbGVjdCIgdGl0bGU9InR5cGUgRGlhbGVjdCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIERpYWxlY3QKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEeW5hbWljVGFibGUiIHRpdGxlPSJ0eXBlIER5bmFtaWNUYWJsZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIER5bmFtaWNUYWJsZQogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0dvcnBMb2dnZXIiIHRpdGxlPSJ0eXBlIEdvcnBMb2dnZXIiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBHb3JwTG9nZ2VyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSGFzUG9zdERlbGV0ZSIgdGl0bGU9InR5cGUgSGFzUG9zdERlbGV0ZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIEhhc1Bvc3REZWxldGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNIYXNQb3N0R2V0IiB0aXRsZT0idHlwZSBIYXNQb3N0R2V0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgSGFzUG9zdEdldAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0hhc1Bvc3RJbnNlcnQiIHRpdGxlPSJ0eXBlIEhhc1Bvc3RJbnNlcnQiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBIYXNQb3N0SW5zZXJ0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSGFzUG9zdFVwZGF0ZSIgdGl0bGU9InR5cGUgSGFzUG9zdFVwZGF0ZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIEhhc1Bvc3RVcGRhdGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNIYXNQcmVEZWxldGUiIHRpdGxlPSJ0eXBlIEhhc1ByZURlbGV0ZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIEhhc1ByZURlbGV0ZQogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0hhc1ByZUluc2VydCIgdGl0bGU9InR5cGUgSGFzUHJlSW5zZXJ0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgSGFzUHJlSW5zZXJ0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSGFzUHJlVXBkYXRlIiB0aXRsZT0idHlwZSBIYXNQcmVVcGRhdGUiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBIYXNQcmVVcGRhdGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNJbmRleE1hcCIgdGl0bGU9InR5cGUgSW5kZXhNYXAiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBJbmRleE1hcAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuUmVuYW1lIiB0aXRsZT0iKGlkeCkgUmVuYW1lKGluZG5hbWUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGlkeCkgUmVuYW1lKGluZG5hbWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuU2V0SW5kZXhUeXBlIiB0aXRsZT0iKGlkeCkgU2V0SW5kZXhUeXBlKGluZHR5cGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGlkeCkgU2V0SW5kZXhUeXBlKGluZHR5cGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuU2V0VW5pcXVlIiB0aXRsZT0iKGlkeCkgU2V0VW5pcXVlKGIpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGlkeCkgU2V0VW5pcXVlKGIpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSW50ZWdlckF1dG9JbmNySW5zZXJ0ZXIiIHRpdGxlPSJ0eXBlIEludGVnZXJBdXRvSW5jckluc2VydGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgSW50ZWdlckF1dG9JbmNySW5zZXJ0ZXIKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNMb2dnZXIiIHRpdGxlPSJ0eXBlIExvZ2dlciIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIExvZ2dlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdCIgdGl0bGU9InR5cGUgTXlTUUxEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgTXlTUUxEaWFsZWN0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIHRpdGxlPSIoZCkgQXV0b0luY3JCaW5kVmFsdWUoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jckJpbmRWYWx1ZSgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5BdXRvSW5jclN0ciIgdGl0bGU9IihkKSBBdXRvSW5jclN0cigpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyU3RyKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQmluZFZhciIgdGl0bGU9IihkKSBCaW5kVmFyKGkpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEJpbmRWYXIoaSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiB0aXRsZT0iKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQ3JlYXRlVGFibGVTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgRHJvcEluZGV4U3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgRHJvcEluZGV4U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LklmVGFibGVFeGlzdHMiIHRpdGxlPSIoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0Lkluc2VydEF1dG9JbmNyIiB0aXRsZT0iKGQpIEluc2VydEF1dG9JbmNyKGV4ZWMsIGluc2VydFNxbCwgcGFyYW1zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJbnNlcnRBdXRvSW5jcihleGVjLCBpbnNlcnRTcWwsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuUXVlcnlTdWZmaXgiIHRpdGxlPSIoZCkgUXVlcnlTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdWVyeVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlF1b3RlRmllbGQiIHRpdGxlPSIoZCkgUXVvdGVGaWVsZChmKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZUZpZWxkKGYpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlNsZWVwQ2xhdXNlIiB0aXRsZT0iKGQpIFNsZWVwQ2xhdXNlKHMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFNsZWVwQ2xhdXNlKHMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlRvU3FsVHlwZSIgdGl0bGU9IihkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgdGl0bGU9IihkKSBUcnVuY2F0ZUNsYXVzZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRydW5jYXRlQ2xhdXNlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNOb0ZpZWxkSW5UeXBlRXJyb3IiIHRpdGxlPSJ0eXBlIE5vRmllbGRJblR5cGVFcnJvciIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIE5vRmllbGRJblR5cGVFcnJvcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIiB0aXRsZT0iKGVycikgRXJyb3IoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChlcnIpIEVycm9yKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNOdWxsVGltZSIgdGl0bGU9InR5cGUgTnVsbFRpbWUiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBOdWxsVGltZQogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTnVsbFRpbWUuU2NhbiIgdGl0bGU9IihudCkgU2Nhbih2YWx1ZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobnQpIFNjYW4odmFsdWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTnVsbFRpbWUuVmFsdWUiIHRpdGxlPSIobnQpIFZhbHVlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobnQpIFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcHRpbWlzdGljTG9ja0Vycm9yIiB0aXRsZT0idHlwZSBPcHRpbWlzdGljTG9ja0Vycm9yIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgT3B0aW1pc3RpY0xvY2tFcnJvcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3B0aW1pc3RpY0xvY2tFcnJvci5FcnJvciIgdGl0bGU9IihlKSBFcnJvcigpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGUpIEVycm9yKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0IiB0aXRsZT0idHlwZSBPcmFjbGVEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgT3JhY2xlRGlhbGVjdAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQXV0b0luY3JTdHIiIHRpdGxlPSIoZCkgQXV0b0luY3JTdHIoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jclN0cigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Lkluc2VydFF1ZXJ5VG9UYXJnZXQiIHRpdGxlPSIoZCkgSW5zZXJ0UXVlcnlUb1RhcmdldChleGVjLCBpbnNlcnRTcWwsIGlkU3FsLCB0YXJnZXQsIHBhcmFtcykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSW5zZXJ0UXVlcnlUb1RhcmdldChleGVjLCBpbnNlcnRTcWwsIGlkU3FsLCB0YXJnZXQsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlF1ZXJ5U3VmZml4IiB0aXRsZT0iKGQpIFF1ZXJ5U3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVlcnlTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVGaWVsZCIgdGl0bGU9IihkKSBRdW90ZUZpZWxkKGYpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1b3RlRmllbGQoZikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5Ub1NxbFR5cGUiIHRpdGxlPSIoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiB0aXRsZT0iKGQpIFRydW5jYXRlQ2xhdXNlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVHJ1bmNhdGVDbGF1c2UoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZVN0cmluZyIgdGl0bGU9InR5cGUgT3JhY2xlU3RyaW5nIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgT3JhY2xlU3RyaW5nCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVTdHJpbmcuU2NhbiIgdGl0bGU9IihvcykgU2Nhbih2YWx1ZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAob3MpIFNjYW4odmFsdWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlU3RyaW5nLlZhbHVlIiB0aXRsZT0iKG9zKSBWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG9zKSBWYWx1ZSgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0IiB0aXRsZT0idHlwZSBQb3N0Z3Jlc0RpYWxlY3QiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBQb3N0Z3Jlc0RpYWxlY3QKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiIHRpdGxlPSIoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkF1dG9JbmNyU3RyIiB0aXRsZT0iKGQpIEF1dG9JbmNyU3RyKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JTdHIoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVJbmRleFN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZUluZGV4U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlVGFibGVTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSWZUYWJsZUV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSW5zZXJ0QXV0b0luY3JUb1RhcmdldCIgdGl0bGU9IihkKSBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0KGV4ZWMsIGluc2VydFNxbCwgdGFyZ2V0LCBwYXJhbXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEluc2VydEF1dG9JbmNyVG9UYXJnZXQoZXhlYywgaW5zZXJ0U3FsLCB0YXJnZXQsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVlcnlTdWZmaXgiIHRpdGxlPSIoZCkgUXVlcnlTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdWVyeVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlRmllbGQiIHRpdGxlPSIoZCkgUXVvdGVGaWVsZChmKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZUZpZWxkKGYpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlNsZWVwQ2xhdXNlIiB0aXRsZT0iKGQpIFNsZWVwQ2xhdXNlKHMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFNsZWVwQ2xhdXNlKHMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlRvU3FsVHlwZSIgdGl0bGU9IihkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgdGl0bGU9IihkKSBUcnVuY2F0ZUNsYXVzZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRydW5jYXRlQ2xhdXNlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0IiB0aXRsZT0idHlwZSBTbm93Zmxha2VEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgU25vd2ZsYWtlRGlhbGVjdAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JTdHIiIHRpdGxlPSIoZCkgQXV0b0luY3JTdHIoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jclN0cigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiIHRpdGxlPSIoZCkgSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjLCBpbnNlcnRTcWwsIHRhcmdldCwgcGFyYW1zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0KGV4ZWMsIGluc2VydFNxbCwgdGFyZ2V0LCBwYXJhbXMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5RdWVyeVN1ZmZpeCIgdGl0bGU9IihkKSBRdWVyeVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1ZXJ5U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LlF1b3RlRmllbGQiIHRpdGxlPSIoZCkgUXVvdGVGaWVsZChmKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZUZpZWxkKGYpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5IiB0aXRsZT0iKGQpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuVG9TcWxUeXBlIiB0aXRsZT0iKGQpIFRvU3FsVHlwZSh2YWwsIG1heHNpemUsIGlzQXV0b0luY3IpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRvU3FsVHlwZSh2YWwsIG1heHNpemUsIGlzQXV0b0luY3IpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgdGl0bGU9IihkKSBUcnVuY2F0ZUNsYXVzZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRydW5jYXRlQ2xhdXNlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxFeGVjdXRvciIgdGl0bGU9InR5cGUgU3FsRXhlY3V0b3IiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBTcWxFeGVjdXRvcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiIHRpdGxlPSJ0eXBlIFNxbFNlcnZlckRpYWxlY3QiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBTcWxTZXJ2ZXJEaWFsZWN0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiB0aXRsZT0iKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JCaW5kVmFsdWUoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiIHRpdGxlPSIoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5BdXRvSW5jclN0ciIgdGl0bGU9IihkKSBBdXRvSW5jclN0cigpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyU3RyKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkJpbmRWYXIiIHRpdGxlPSIoZCkgQmluZFZhcihpKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBCaW5kVmFyKGkpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVJbmRleFN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZUluZGV4U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiB0aXRsZT0iKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQ3JlYXRlVGFibGVTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuRHJvcEluZGV4U3VmZml4IiB0aXRsZT0iKGQpIERyb3BJbmRleFN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIERyb3BJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVFeGlzdHMiIHRpdGxlPSIoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSW5zZXJ0QXV0b0luY3IiIHRpdGxlPSIoZCkgSW5zZXJ0QXV0b0luY3IoZXhlYywgaW5zZXJ0U3FsLCBwYXJhbXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEluc2VydEF1dG9JbmNyKGV4ZWMsIGluc2VydFNxbCwgcGFyYW1zKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuUXVlcnlTdWZmaXgiIHRpdGxlPSIoZCkgUXVlcnlTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdWVyeVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5RdW90ZUZpZWxkIiB0aXRsZT0iKGQpIFF1b3RlRmllbGQoZikiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVvdGVGaWVsZChmKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSIgdGl0bGU9IihkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlRvU3FsVHlwZSIgdGl0bGU9IihkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiIHRpdGxlPSIoZCkgVHJ1bmNhdGVDbGF1c2UoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUcnVuY2F0ZUNsYXVzZSgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsVHlwZXIiIHRpdGxlPSJ0eXBlIFNxbFR5cGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgU3FsVHlwZXIKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0IiB0aXRsZT0idHlwZSBTcWxpdGVEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgU3FsaXRlRGlhbGVjdAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQXV0b0luY3JTdHIiIHRpdGxlPSIoZCkgQXV0b0luY3JTdHIoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jclN0cigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Lkluc2VydEF1dG9JbmNyIiB0aXRsZT0iKGQpIEluc2VydEF1dG9JbmNyKGV4ZWMsIGluc2VydFNxbCwgcGFyYW1zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJbnNlcnRBdXRvSW5jcihleGVjLCBpbnNlcnRTcWwsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1ZXJ5U3VmZml4IiB0aXRsZT0iKGQpIFF1ZXJ5U3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVlcnlTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuUXVvdGVGaWVsZCIgdGl0bGU9IihkKSBRdW90ZUZpZWxkKGYpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1b3RlRmllbGQoZikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5Ub1NxbFR5cGUiIHRpdGxlPSIoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiB0aXRsZT0iKGQpIFRydW5jYXRlQ2xhdXNlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVHJ1bmNhdGVDbGF1c2UoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwIiB0aXRsZT0idHlwZSBUYWJsZU1hcCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIFRhYmxlTWFwCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5BZGRJbmRleCIgdGl0bGU9Iih0KSBBZGRJbmRleChuYW1lLCBpZHh0eXBlLCBjb2x1bW5zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBBZGRJbmRleChuYW1lLCBpZHh0eXBlLCBjb2x1bW5zKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLkNvbE1hcCIgdGl0bGU9Iih0KSBDb2xNYXAoZmllbGQpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIENvbE1hcChmaWVsZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5Ecm9wSW5kZXgiIHRpdGxlPSIodCkgRHJvcEluZGV4KG5hbWUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIERyb3BJbmRleChuYW1lKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLklkeE1hcCIgdGl0bGU9Iih0KSBJZHhNYXAoZmllbGQpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIElkeE1hcChmaWVsZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5SZXNldFNxbCIgdGl0bGU9Iih0KSBSZXNldFNxbCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFJlc2V0U3FsKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5TZXRLZXlzIiB0aXRsZT0iKHQpIFNldEtleXMoaXNBdXRvSW5jciwgZmllbGROYW1lcykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgU2V0S2V5cyhpc0F1dG9JbmNyLCBmaWVsZE5hbWVzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlNldFVuaXF1ZVRvZ2V0aGVyIiB0aXRsZT0iKHQpIFNldFVuaXF1ZVRvZ2V0aGVyKGZpZWxkTmFtZXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNldFVuaXF1ZVRvZ2V0aGVyKGZpZWxkTmFtZXMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuU2V0VmVyc2lvbkNvbCIgdGl0bGU9Iih0KSBTZXRWZXJzaW9uQ29sKGZpZWxkKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZXRWZXJzaW9uQ29sKGZpZWxkKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlNxbEZvckNyZWF0ZSIgdGl0bGU9Iih0KSBTcWxGb3JDcmVhdGUoaWZOb3RFeGlzdHMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNxbEZvckNyZWF0ZShpZk5vdEV4aXN0cykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYXJnZXRRdWVyeUluc2VydGVyIiB0aXRsZT0idHlwZSBUYXJnZXRRdWVyeUluc2VydGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgVGFyZ2V0UXVlcnlJbnNlcnRlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhcmdldGVkQXV0b0luY3JJbnNlcnRlciIgdGl0bGU9InR5cGUgVGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgVGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24iIHRpdGxlPSJ0eXBlIFRyYW5zYWN0aW9uIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgVHJhbnNhY3Rpb24KICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkNvbW1pdCIgdGl0bGU9Iih0KSBDb21taXQoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBDb21taXQoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkRlbGV0ZSIgdGl0bGU9Iih0KSBEZWxldGUobGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgRGVsZXRlKGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uRXhlYyIgdGl0bGU9Iih0KSBFeGVjKHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBFeGVjKHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkdldCIgdGl0bGU9Iih0KSBHZXQoaSwga2V5cykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgR2V0KGksIGtleXMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uSW5zZXJ0IiB0aXRsZT0iKHQpIEluc2VydChsaXN0KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBJbnNlcnQobGlzdCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5QcmVwYXJlIiB0aXRsZT0iKHQpIFByZXBhcmUocXVlcnkpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFByZXBhcmUocXVlcnkpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUXVlcnkiIHRpdGxlPSIodCkgUXVlcnkocSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUXVlcnkocSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5RdWVyeVJvdyIgdGl0bGU9Iih0KSBRdWVyeVJvdyhxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUXVlcnlSb3cocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUmVsZWFzZVNhdmVwb2ludCIgdGl0bGU9Iih0KSBSZWxlYXNlU2F2ZXBvaW50KHNhdmVwb2ludCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUmVsZWFzZVNhdmVwb2ludChzYXZlcG9pbnQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2siIHRpdGxlPSIodCkgUm9sbGJhY2soKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBSb2xsYmFjaygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2tUb1NhdmVwb2ludCIgdGl0bGU9Iih0KSBSb2xsYmFja1RvU2F2ZXBvaW50KHNhdmVwb2ludCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUm9sbGJhY2tUb1NhdmVwb2ludChzYXZlcG9pbnQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2F2ZXBvaW50IiB0aXRsZT0iKHQpIFNhdmVwb2ludChuYW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTYXZlcG9pbnQobmFtZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3QiIHRpdGxlPSIodCkgU2VsZWN0KGksIHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZWxlY3QoaSwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0RmxvYXQiIHRpdGxlPSIodCkgU2VsZWN0RmxvYXQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdEZsb2F0KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdEludCIgdGl0bGU9Iih0KSBTZWxlY3RJbnQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdEludChxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3ROdWxsRmxvYXQiIHRpdGxlPSIodCkgU2VsZWN0TnVsbEZsb2F0KHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZWxlY3ROdWxsRmxvYXQocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0TnVsbEludCIgdGl0bGU9Iih0KSBTZWxlY3ROdWxsSW50KHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZWxlY3ROdWxsSW50KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxTdHIiIHRpdGxlPSIodCkgU2VsZWN0TnVsbFN0cihxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgU2VsZWN0TnVsbFN0cihxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RPbmUiIHRpdGxlPSIodCkgU2VsZWN0T25lKGhvbGRlciwgcXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdE9uZShob2xkZXIsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdFN0ciIgdGl0bGU9Iih0KSBTZWxlY3RTdHIocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdFN0cihxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5VcGRhdGUiIHRpdGxlPSIodCkgVXBkYXRlKGxpc3QpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFVwZGF0ZShsaXN0KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlVwZGF0ZUNvbHVtbnMiIHRpdGxlPSIodCkgVXBkYXRlQ29sdW1ucyhmaWx0ZXIsIGxpc3QpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFVwZGF0ZUNvbHVtbnMoZmlsdGVyLCBsaXN0KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLldpdGhDb250ZXh0IiB0aXRsZT0iKHQpIFdpdGhDb250ZXh0KGN0eCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgV2l0aENvbnRleHQoY3R4KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1R5cGVDb252ZXJ0ZXIiIHRpdGxlPSJ0eXBlIFR5cGVDb252ZXJ0ZXIiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBUeXBlQ29udmVydGVyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAgCiAgICAgIDwvdWw+CiAgICA8L2xpPgogIAogIAo8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1zb3VyY2VmaWxlcyIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgU291cmNlIEZpbGVzCiAgICAgICAgPC9hPgogICAgICA8L2xpPgogICAgCiAgICAKICA8L3VsPgoKICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdk1vYmlsZSBqcy1tYWluTmF2TW9iaWxlIj4KICAgIDxsYWJlbCBjbGFzcz0iZ28tTGFiZWwiPgogICAgICA8c2VsZWN0IGNsYXNzPSJnby1TZWxlY3QiPgogICAgICAgIAogICAgICAgICAgPG9wdGlvbiBzZWxlY3RlZCBkaXNhYmxlZD5SRUFETUU8L29wdGlvbj4KICAgICAgICAKICAgICAgPC9zZWxlY3Q+CiAgICA8L2xhYmVsPgogIDwvZGl2Pgo8L25hdj4KICAgIDxhcnRpY2xlIGNsYXNzPSJnby1NYWluLWFydGljbGUganMtbWFpbkNvbnRlbnQiPgogIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzIiBkYXRhLXRlc3QtaWQ9IlVuaXREZXRhaWxzIiBzdHlsZT0iZGlzcGxheTogYmxvY2s7Ij4KICAgIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzLWNvbnRlbnQganMtdW5pdERldGFpbHNDb250ZW50IiBkYXRhLXRlc3QtaWQ9IlVuaXREZXRhaWxzLWNvbnRlbnQiPgogICAgICAKICAgICAgICAKICA8ZGl2IGNsYXNzPSJVbml0UmVhZG1lIFVuaXRSZWFkbWUtLWV4cGFuZGVkIGpzLXJlYWRtZSI+CiAgICA8aDIgY2xhc3M9IlVuaXRSZWFkbWUtdGl0bGUiIGlkPSJzZWN0aW9uLXJlYWRtZSI+CiAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2Nocm9tZV9yZWFkZXJfbW9kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFJFQURNRQogICAgICA8YSBjbGFzcz0iVW5pdFJlYWRtZS1pZExpbmsiIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSI+wrY8L2E+CiAgICA8L2gyPgogICAgCiAgICAgIDxkaXYgY2xhc3M9IlVuaXRSZWFkbWUtY29udGVudCIgZGF0YS10ZXN0LWlkPSJVbml0LXJlYWRtZUNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9Ik92ZXJ2aWV3LXJlYWRtZUNvbnRlbnQganMtcmVhZG1lQ29udGVudCI+PGgzIGNsYXNzPSJoMSIgaWQ9InJlYWRtZS1nby1yZWxhdGlvbmFsLXBlcnNpc3RlbmNlIj5HbyBSZWxhdGlvbmFsIFBlcnNpc3RlbmNlPC9oMz4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9hY3Rpb25zIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9hY3Rpb25zL3dvcmtmbG93cy9nby55bWwvYmFkZ2Uuc3ZnIiBhbHQ9ImJ1aWxkIHN0YXR1cyIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9pc3N1ZXMiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9pc3N1ZXMvZ28tZ29ycC9nb3JwLnN2ZyIgYWx0PSJpc3N1ZXMiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vcGtnLmdvLmRldi9iYWRnZS9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92My5zdmciIGFsdD0iR28gUmVmZXJlbmNlIi8+PC9hPjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS11cGRhdGUtMjAxNi0xMS0xMy1mdXR1cmUtdmVyc2lvbnMiPlVwZGF0ZSAyMDE2LTExLTEzOiBGdXR1cmUgdmVyc2lvbnM8L2g1Pgo8cD5BcyBtYW55IG9mIHRoZSBtYWludGFpbmVycyBoYXZlIGJlY29tZSBidXN5IHdpdGggb3RoZXIgcHJvamVjdHMsCnByb2dyZXNzIHRvd2FyZCB0aGUgZXZlci1lbHVzaXZlIHYyIGhhcyBzbG93ZWQgdG8gdGhlIHBvaW50IHRoYXQgd2UmIzM5O3JlCm9ubHkgb2NjYXNpb25hbGx5IG1ha2luZyBwcm9ncmVzcyBvdXRzaWRlIG9mIG1lcmdpbmcgcHVsbCByZXF1ZXN0cy4KSW4gdGhlIGludGVyZXN0IG9mIGNvbnRpbnVpbmcgdG8gcmVsZWFzZSwgSSYjMzk7ZCBsaWtlIHRvIGxlYW4gdG93YXJkIGEKbW9yZSBtYWludGFpbmFibGUgcGF0aCBmb3J3YXJkLjwvcD4KPHA+Rm9yIHRoZSBtb21lbnQsIEkgYW0gcmVsZWFzaW5nIGEgdjIgdGFnIHdpdGggdGhlIGN1cnJlbnQgZmVhdHVyZSBzZXQKZnJvbSBtYXN0ZXIsIGFzIHNvbWUgb2YgdGhvc2UgZmVhdHVyZXMgaGF2ZSBiZWVuIGFjdGl2ZWx5IHVzZWQgYW5kCnJlbGllZCBvbiBieSBtb3JlIHRoYW4gb25lIHByb2plY3QuICBPdXIgbmV4dCBnb2FsIGlzIHRvIGNvbnRpbnVlCmNsZWFuaW5nIHVwIHRoZSBjb2RlIGJhc2Ugd2l0aCBub24tYnJlYWtpbmcgY2hhbmdlcyBhcyBtdWNoIGFzCnBvc3NpYmxlLCBidXQgaWYvd2hlbiBhIGJyZWFraW5nIGNoYW5nZSBpcyBuZWVkZWQsIHdlJiMzOTtsbCBqdXN0IHJlbGVhc2UKbmV3IHZlcnNpb25zLiAgVGhpcyBhbGxvd3MgdXMgdG8gY29udGludWUgZGV2ZWxvcG1lbnQgYXQgd2hhdGV2ZXIgcGFjZQp3ZSYjMzk7cmUgY2FwYWJsZSBvZiwgd2l0aG91dCBkZWxheWluZyB0aGUgcmVsZWFzZSBvZiBmZWF0dXJlcyBvciByZWZ1c2luZwpQUnMuPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWludHJvZHVjdGlvbiI+SW50cm9kdWN0aW9uPC9oND4KPHA+SSBoZXNpdGF0ZSB0byBjYWxsIGdvcnAgYW4gT1JNLiAgR28gZG9lc24mIzM5O3QgcmVhbGx5IGhhdmUgb2JqZWN0cywgYXQKbGVhc3Qgbm90IGluIHRoZSBjbGFzc2ljIFNtYWxsdGFsay9KYXZhIHNlbnNlLiAgVGhlcmUgZ29lcyB0aGUgJiMzNDtPJiMzNDsuCmdvcnAgZG9lc24mIzM5O3Qga25vdyBhbnl0aGluZyBhYm91dCB0aGUgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHlvdXIKc3RydWN0cyAoYXQgbGVhc3Qgbm90IHlldCkuICBTbyB0aGUgJiMzNDtSJiMzNDsgaXMgcXVlc3Rpb25hYmxlIHRvbyAoYnV0IEkgdXNlCml0IGluIHRoZSBuYW1lIGJlY2F1c2UsIHdlbGwsIGl0IHNlZW1lZCBtb3JlIGNsZXZlcikuPC9wPgo8cD5UaGUgJiMzNDtNJiMzNDsgaXMgYWxpdmUgYW5kIHdlbGwuICBHaXZlbiBzb21lIEdvIHN0cnVjdHMgYW5kIGEgZGF0YWJhc2UsIGdvcnAKc2hvdWxkIHJlbW92ZSBhIGZhaXIgYW1vdW50IG9mIGJvaWxlcnBsYXRlIGJ1c3ktd29yayBmcm9tIHlvdXIgY29kZS48L3A+CjxwPkkgaG9wZSB0aGF0IGdvcnAgc2F2ZXMgeW91IHRpbWUsIG1pbmltaXplcyB0aGUgZHJ1ZGdlcnkgb2YgZ2V0dGluZwpkYXRhIGluIGFuZCBvdXQgb2YgeW91ciBkYXRhYmFzZSwgYW5kIGhlbHBzIHlvdXIgY29kZSBmb2N1cyBvbgphbGdvcml0aG1zLCBub3QgaW5mcmFzdHJ1Y3R1cmUuPC9wPgo8dWw+CjxsaT5CaW5kIHN0cnVjdCBmaWVsZHMgdG8gdGFibGUgY29sdW1ucyB2aWEgQVBJIG9yIHRhZzwvbGk+CjxsaT5TdXBwb3J0IGZvciBlbWJlZGRlZCBzdHJ1Y3RzPC9saT4KPGxpPlN1cHBvcnQgZm9yIHRyYW5zYWN0aW9uczwvbGk+CjxsaT5Gb3J3YXJkIGVuZ2luZWVyIGRiIHNjaGVtYSBmcm9tIHN0cnVjdHMgKGdyZWF0IGZvciB1bml0IHRlc3RzKTwvbGk+CjxsaT5QcmUvcG9zdCBpbnNlcnQvdXBkYXRlL2RlbGV0ZSBob29rczwvbGk+CjxsaT5BdXRvbWF0aWNhbGx5IGdlbmVyYXRlIGluc2VydC91cGRhdGUvZGVsZXRlIHN0YXRlbWVudHMgZm9yIGEgc3RydWN0PC9saT4KPGxpPkF1dG9tYXRpYyBiaW5kaW5nIG9mIGF1dG8gaW5jcmVtZW50IFBLcyBiYWNrIHRvIHN0cnVjdCBhZnRlciBpbnNlcnQ8L2xpPgo8bGk+RGVsZXRlIGJ5IHByaW1hcnkga2V5KHMpPC9saT4KPGxpPlNlbGVjdCBieSBwcmltYXJ5IGtleShzKTwvbGk+CjxsaT5PcHRpb25hbCB0cmFjZSBzcWwgbG9nZ2luZzwvbGk+CjxsaT5CaW5kIGFyYml0cmFyeSBTUUwgcXVlcmllcyB0byBhIHN0cnVjdDwvbGk+CjxsaT5CaW5kIHNsaWNlIHRvIFNFTEVDVCBxdWVyeSByZXN1bHRzIHdpdGhvdXQgdHlwZSBhc3NlcnRpb25zPC9saT4KPGxpPlVzZSBwb3NpdGlvbmFsIG9yIG5hbWVkIGJpbmQgcGFyYW1ldGVycyBpbiBjdXN0b20gU0VMRUNUIHF1ZXJpZXM8L2xpPgo8bGk+T3B0aW9uYWwgb3B0aW1pc3RpYyBsb2NraW5nIHVzaW5nIGEgdmVyc2lvbiBjb2x1bW4gKGZvcgp1cGRhdGUvZGVsZXRlcyk8L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWluc3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uPC9oND4KPHA+VXNlIDxjb2RlPmdvIGdldDwvY29kZT4gb3IgeW91ciBmYXZvcml0ZSB2ZW5kb3JpbmcgdG9vbCwgdXNpbmcgd2hpY2hldmVyIGltcG9ydApwYXRoIHlvdSYjMzk7ZCBsaWtlLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS12ZXJzaW9uaW5nIj5WZXJzaW9uaW5nPC9oND4KPHA+V2UgdXNlIHNlbWFudGljIHZlcnNpb24gdGFncy4gIEZlZWwgZnJlZSB0byBpbXBvcnQgdGhyb3VnaCA8Y29kZT5nb3BrZy5pbjwvY29kZT4KKGUuZy4gPGNvZGU+Z29wa2cuaW4vZ29ycC52MjwvY29kZT4pIHRvIGdldCB0aGUgbGF0ZXN0IHRhZyBmb3IgYSBtYWpvciB2ZXJzaW9uLApvciBjaGVjayBvdXQgdGhlIHRhZyB1c2luZyB5b3VyIGZhdm9yaXRlIHZlbmRvcmluZyB0b29sLjwvcD4KPHA+RGV2ZWxvcG1lbnQgaXMgbm90IHZlcnkgYWN0aXZlIHJpZ2h0IG5vdywgYnV0IHdlIGhhdmUgcGxhbnMgdG8KcmVzdHJ1Y3R1cmUgPGNvZGU+Z29ycDwvY29kZT4gYXMgd2UgY29udGludWUgdG8gbW92ZSB0b3dhcmQgYSBtb3JlIGV4dGVuc2libGUKc3lzdGVtLiAgV2hlbmV2ZXIgYSBicmVha2luZyBjaGFuZ2UgaXMgbmVlZGVkLCB0aGUgbWFqb3IgdmVyc2lvbiB3aWxsCmJlIGJ1bXBlZC48L3A+CjxwPlRoZSA8Y29kZT5tYXN0ZXI8L2NvZGU+IGJyYW5jaCBpcyB3aGVyZSBhbGwgZGV2ZWxvcG1lbnQgaXMgZG9uZSwgYW5kIGJyZWFraW5nCmNoYW5nZXMgbWF5IGhhcHBlbiBmcm9tIHRpbWUgdG8gdGltZS4gIFRoYXQgc2FpZCwgaWYgeW91IHdhbnQgdG8gbGl2ZQpvbiB0aGUgYmxlZWRpbmcgZWRnZSBhbmQgYXJlIGNvbWZvcnRhYmxlIHVwZGF0aW5nIHlvdXIgY29kZSB3aGVuIHdlCm1ha2UgYSBicmVha2luZyBjaGFuZ2UsIHlvdSBtYXkgdXNlIDxjb2RlPmdpdGh1Yi5jb20vZ28tZ29ycC9nb3JwPC9jb2RlPiBhcyB5b3VyCmltcG9ydCBwYXRoLjwvcD4KPHA+Q2hlY2sgdGhlIHZlcnNpb24gdGFncyB0byBzZWUgd2hhdCYjMzk7cyBhdmFpbGFibGUuICBXZSYjMzk7bGwgbWFrZSBhIGdvb2QKZmFpdGggZWZmb3J0IHRvIGFkZCBiYWRnZXMgZm9yIG5ldyB2ZXJzaW9ucywgYnV0IHdlIG1ha2Ugbm8KZ3VhcmFudGVlcy48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtc3VwcG9ydGVkLWdvLXZlcnNpb25zIj5TdXBwb3J0ZWQgR28gdmVyc2lvbnM8L2g0Pgo8cD5UaGlzIHBhY2thZ2UgaXMgZ3VhcmFudGVlZCB0byBiZSBjb21wYXRpYmxlIHdpdGggdGhlIGxhdGVzdCAyIG1ham9yCnZlcnNpb25zIG9mIEdvLjwvcD4KPHA+QW55IGVhcmxpZXIgdmVyc2lvbnMgYXJlIG9ubHkgc3VwcG9ydGVkIG9uIGEgYmVzdCBlZmZvcnQgYmFzaXMgYW5kIGNhbgpiZSBkcm9wcGVkIGFueSB0aW1lLiAgR28gaGFzIGEgZ3JlYXQgY29tcGF0aWJpbGl0eSBwcm9taXNlLiBVcGdyYWRpbmcKeW91ciBwcm9ncmFtIHRvIGEgbmV3ZXIgdmVyc2lvbiBvZiBHbyBzaG91bGQgbmV2ZXIgcmVhbGx5IGJlIGEKcHJvYmxlbS48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtbWlncmF0aW9uLWd1aWRlIj5NaWdyYXRpb24gZ3VpZGU8L2g0Pgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLXByZS12Mi10by12MiI+UHJlLXYyIHRvIHYyPC9oNj4KPHA+QXV0b21hdGljIG1hcHBpbmcgb2YgdGhlIHZlcnNpb24gY29sdW1uIHVzZWQgaW4gb3B0aW1pc3RpYyBsb2NraW5nIGhhcwpiZWVuIHJlbW92ZWQgYXMgaXQgY291bGQgY2F1c2UgcHJvYmxlbXMgaWYgdGhlIHR5cGUgd2FzIG5vdCBpbnQuIFRoZQp2ZXJzaW9uIGNvbHVtbiBtdXN0IG5vdyBleHBsaWNpdGx5IGJlIHNldCB3aXRoCjxjb2RlPnRhYmxlbWFwLlNldFZlcnNpb25Db2woKTwvY29kZT4uPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWhlbHAtc3VwcG9ydCI+SGVscC9TdXBwb3J0PC9oND4KPHA+VXNlIG91ciA8YSBocmVmPSJodHRwczovL2dpdHRlci5pbS9nby1nb3JwL2dvcnAiIHJlbD0ibm9mb2xsb3ciPjxjb2RlPmdpdHRlcjwvY29kZT4gY2hhbm5lbDwvYT4uICBXZSB1c2VkCnRvIHVzZSBJUkMsIGJ1dCB3aXRoIG1vc3Qgb2YgdXMgYmVpbmcgcHVsbGVkIGluIG1hbnkgZGlyZWN0aW9ucywgd2UKb2Z0ZW4gbmVlZCB0aGUgZW1haWwgbm90aWZpY2F0aW9ucyBmcm9tIDxjb2RlPmdpdHRlcjwvY29kZT4gdG8geWVsbCBhdCB1cyB0byBzaWduCmluLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1xdWlja3N0YXJ0Ij5RdWlja3N0YXJ0PC9oND4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCiAgICAmIzM0O2RhdGFiYXNlL3NxbCYjMzQ7CiAgICAmIzM0O2dvcGtnLmluL2dvcnAudjEmIzM0OwogICAgXyAmIzM0O2dpdGh1Yi5jb20vbWF0dG4vZ28tc3FsaXRlMyYjMzQ7CiAgICAmIzM0O2xvZyYjMzQ7CiAgICAmIzM0O3RpbWUmIzM0OwopCgpmdW5jIG1haW4oKSB7CiAgICAvLyBpbml0aWFsaXplIHRoZSBEYk1hcAogICAgZGJtYXAgOj0gaW5pdERiKCkKICAgIGRlZmVyIGRibWFwLkRiLkNsb3NlKCkKCiAgICAvLyBkZWxldGUgYW55IGV4aXN0aW5nIHJvd3MKICAgIGVyciA6PSBkYm1hcC5UcnVuY2F0ZVRhYmxlcygpCiAgICBjaGVja0VycihlcnIsICYjMzQ7VHJ1bmNhdGVUYWJsZXMgZmFpbGVkJiMzNDspCgogICAgLy8gY3JlYXRlIHR3byBwb3N0cwogICAgcDEgOj0gbmV3UG9zdCgmIzM0O0dvIDEuMSByZWxlYXNlZCEmIzM0OywgJiMzNDtMb3JlbSBpcHN1bSBsb3JlbSBpcHN1bSYjMzQ7KQogICAgcDIgOj0gbmV3UG9zdCgmIzM0O0dvIDEuMiByZWxlYXNlZCEmIzM0OywgJiMzNDtMb3JlbSBpcHN1bSBsb3JlbSBpcHN1bSYjMzQ7KQoKICAgIC8vIGluc2VydCByb3dzIC0gYXV0byBpbmNyZW1lbnQgUEtzIHdpbGwgYmUgc2V0IHByb3Blcmx5IGFmdGVyIHRoZSBpbnNlcnQKICAgIGVyciA9IGRibWFwLkluc2VydCgmYW1wO3AxLCAmYW1wO3AyKQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O0luc2VydCBmYWlsZWQmIzM0OykKCiAgICAvLyB1c2UgY29udmVuaWVuY2UgU2VsZWN0SW50CiAgICBjb3VudCwgZXJyIDo9IGRibWFwLlNlbGVjdEludCgmIzM0O3NlbGVjdCBjb3VudCgqKSBmcm9tIHBvc3RzJiMzNDspCiAgICBjaGVja0VycihlcnIsICYjMzQ7c2VsZWN0IGNvdW50KCopIGZhaWxlZCYjMzQ7KQogICAgbG9nLlByaW50bG4oJiMzNDtSb3dzIGFmdGVyIGluc2VydGluZzomIzM0OywgY291bnQpCgogICAgLy8gdXBkYXRlIGEgcm93CiAgICBwMi5UaXRsZSA9ICYjMzQ7R28gMS4yIGlzIGJldHRlciB0aGFuIGV2ZXImIzM0OwogICAgY291bnQsIGVyciA9IGRibWFwLlVwZGF0ZSgmYW1wO3AyKQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O1VwZGF0ZSBmYWlsZWQmIzM0OykKICAgIGxvZy5QcmludGxuKCYjMzQ7Um93cyB1cGRhdGVkOiYjMzQ7LCBjb3VudCkKCiAgICAvLyBmZXRjaCBvbmUgcm93IC0gbm90ZSB1c2Ugb2YgJiMzNDtwb3N0X2lkJiMzNDsgaW5zdGVhZCBvZiAmIzM0O0lkJiMzNDsgc2luY2UgY29sdW1uIGlzIGFsaWFzZWQKICAgIC8vCiAgICAvLyBQb3N0Z3JlcyB1c2VycyBzaG91bGQgdXNlICQxIGluc3RlYWQgb2YgPyBwbGFjZWhvbGRlcnMKICAgIC8vIFNlZSAmIzM5O0tub3duIElzc3VlcyYjMzk7IGJlbG93CiAgICAvLwogICAgZXJyID0gZGJtYXAuU2VsZWN0T25lKCZhbXA7cDIsICYjMzQ7c2VsZWN0ICogZnJvbSBwb3N0cyB3aGVyZSBwb3N0X2lkPT8mIzM0OywgcDIuSWQpCiAgICBjaGVja0VycihlcnIsICYjMzQ7U2VsZWN0T25lIGZhaWxlZCYjMzQ7KQogICAgbG9nLlByaW50bG4oJiMzNDtwMiByb3c6JiMzNDssIHAyKQoKICAgIC8vIGZldGNoIGFsbCByb3dzCiAgICB2YXIgcG9zdHMgW11Qb3N0CiAgICBfLCBlcnIgPSBkYm1hcC5TZWxlY3QoJmFtcDtwb3N0cywgJiMzNDtzZWxlY3QgKiBmcm9tIHBvc3RzIG9yZGVyIGJ5IHBvc3RfaWQmIzM0OykKICAgIGNoZWNrRXJyKGVyciwgJiMzNDtTZWxlY3QgZmFpbGVkJiMzNDspCiAgICBsb2cuUHJpbnRsbigmIzM0O0FsbCByb3dzOiYjMzQ7KQogICAgZm9yIHgsIHAgOj0gcmFuZ2UgcG9zdHMgewogICAgICAgIGxvZy5QcmludGYoJiMzNDsgICAgJWQ6ICV2XG4mIzM0OywgeCwgcCkKICAgIH0KCiAgICAvLyBkZWxldGUgcm93IGJ5IFBLCiAgICBjb3VudCwgZXJyID0gZGJtYXAuRGVsZXRlKCZhbXA7cDEpCiAgICBjaGVja0VycihlcnIsICYjMzQ7RGVsZXRlIGZhaWxlZCYjMzQ7KQogICAgbG9nLlByaW50bG4oJiMzNDtSb3dzIGRlbGV0ZWQ6JiMzNDssIGNvdW50KQoKICAgIC8vIGRlbGV0ZSByb3cgbWFudWFsbHkgdmlhIEV4ZWMKICAgIF8sIGVyciA9IGRibWFwLkV4ZWMoJiMzNDtkZWxldGUgZnJvbSBwb3N0cyB3aGVyZSBwb3N0X2lkPT8mIzM0OywgcDIuSWQpCiAgICBjaGVja0VycihlcnIsICYjMzQ7RXhlYyBmYWlsZWQmIzM0OykKCiAgICAvLyBjb25maXJtIGNvdW50IGlzIHplcm8KICAgIGNvdW50LCBlcnIgPSBkYm1hcC5TZWxlY3RJbnQoJiMzNDtzZWxlY3QgY291bnQoKikgZnJvbSBwb3N0cyYjMzQ7KQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O3NlbGVjdCBjb3VudCgqKSBmYWlsZWQmIzM0OykKICAgIGxvZy5QcmludGxuKCYjMzQ7Um93IGNvdW50IC0gc2hvdWxkIGJlIHplcm86JiMzNDssIGNvdW50KQoKICAgIGxvZy5QcmludGxuKCYjMzQ7RG9uZSEmIzM0OykKfQoKdHlwZSBQb3N0IHN0cnVjdCB7CiAgICAvLyBkYiB0YWcgbGV0cyB5b3Ugc3BlY2lmeSB0aGUgY29sdW1uIG5hbWUgaWYgaXQgZGlmZmVycyBmcm9tIHRoZSBzdHJ1Y3QgZmllbGQKICAgIElkICAgICAgaW50NjQgIGBkYjomIzM0O3Bvc3RfaWQmIzM0O2AKICAgIENyZWF0ZWQgaW50NjQKICAgIFRpdGxlICAgc3RyaW5nIGBkYjomIzM0OyxzaXplOjUwJiMzNDtgICAgICAgICAgICAgICAgLy8gQ29sdW1uIHNpemUgc2V0IHRvIDUwCiAgICBCb2R5ICAgIHN0cmluZyBgZGI6JiMzNDthcnRpY2xlX2JvZHksc2l6ZToxMDI0JiMzNDtgIC8vIFNldCBib3RoIGNvbHVtbiBuYW1lIGFuZCBzaXplCn0KCmZ1bmMgbmV3UG9zdCh0aXRsZSwgYm9keSBzdHJpbmcpIFBvc3QgewogICAgcmV0dXJuIFBvc3R7CiAgICAgICAgQ3JlYXRlZDogdGltZS5Ob3coKS5Vbml4TmFubygpLAogICAgICAgIFRpdGxlOiAgIHRpdGxlLAogICAgICAgIEJvZHk6ICAgIGJvZHksCiAgICB9Cn0KCmZ1bmMgaW5pdERiKCkgKmdvcnAuRGJNYXAgewogICAgLy8gY29ubmVjdCB0byBkYiB1c2luZyBzdGFuZGFyZCBHbyBkYXRhYmFzZS9zcWwgQVBJCiAgICAvLyB1c2Ugd2hhdGV2ZXIgZGF0YWJhc2Uvc3FsIGRyaXZlciB5b3Ugd2lzaAogICAgZGIsIGVyciA6PSBzcWwuT3BlbigmIzM0O3NxbGl0ZTMmIzM0OywgJiMzNDsvdG1wL3Bvc3RfZGIuYmluJiMzNDspCiAgICBjaGVja0VycihlcnIsICYjMzQ7c3FsLk9wZW4gZmFpbGVkJiMzNDspCgogICAgLy8gY29uc3RydWN0IGEgZ29ycCBEYk1hcAogICAgZGJtYXAgOj0gJmFtcDtnb3JwLkRiTWFwe0RiOiBkYiwgRGlhbGVjdDogZ29ycC5TcWxpdGVEaWFsZWN0e319CgogICAgLy8gYWRkIGEgdGFibGUsIHNldHRpbmcgdGhlIHRhYmxlIG5hbWUgdG8gJiMzOTtwb3N0cyYjMzk7IGFuZAogICAgLy8gc3BlY2lmeWluZyB0aGF0IHRoZSBJZCBwcm9wZXJ0eSBpcyBhbiBhdXRvIGluY3JlbWVudGluZyBQSwogICAgZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQb3N0e30sICYjMzQ7cG9zdHMmIzM0OykuU2V0S2V5cyh0cnVlLCAmIzM0O0lkJiMzNDspCgogICAgLy8gY3JlYXRlIHRoZSB0YWJsZS4gaW4gYSBwcm9kdWN0aW9uIHN5c3RlbSB5b3UmIzM5O2QgZ2VuZXJhbGx5CiAgICAvLyB1c2UgYSBtaWdyYXRpb24gdG9vbCwgb3IgY3JlYXRlIHRoZSB0YWJsZXMgdmlhIHNjcmlwdHMKICAgIGVyciA9IGRibWFwLkNyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkKICAgIGNoZWNrRXJyKGVyciwgJiMzNDtDcmVhdGUgdGFibGVzIGZhaWxlZCYjMzQ7KQoKICAgIHJldHVybiBkYm1hcAp9CgpmdW5jIGNoZWNrRXJyKGVyciBlcnJvciwgbXNnIHN0cmluZykgewogICAgaWYgZXJyICE9IG5pbCB7CiAgICAgICAgbG9nLkZhdGFsbG4obXNnLCBlcnIpCiAgICB9Cn0KPC9jb2RlPjwvcHJlPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWV4YW1wbGVzIj5FeGFtcGxlczwvaDQ+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtbWFwcGluZy1zdHJ1Y3RzLXRvLXRhYmxlcyI+TWFwcGluZyBzdHJ1Y3RzIHRvIHRhYmxlczwvaDU+CjxwPkZpcnN0IGRlZmluZSBzb21lIHR5cGVzOjwvcD4KPHByZT48Y29kZT50eXBlIEludm9pY2Ugc3RydWN0IHsKICAgIElkICAgICAgIGludDY0CiAgICBDcmVhdGVkICBpbnQ2NAogICAgVXBkYXRlZCAgaW50NjQKICAgIE1lbW8gICAgIHN0cmluZwogICAgUGVyc29uSWQgaW50NjQKfQoKdHlwZSBQZXJzb24gc3RydWN0IHsKICAgIElkICAgICAgaW50NjQKICAgIENyZWF0ZWQgaW50NjQKICAgIFVwZGF0ZWQgaW50NjQKICAgIEZOYW1lICAgc3RyaW5nCiAgICBMTmFtZSAgIHN0cmluZwp9CgovLyBFeGFtcGxlIG9mIHVzaW5nIHRhZ3MgdG8gYWxpYXMgZmllbGRzIHRvIGNvbHVtbiBuYW1lcwovLyBUaGUgJiMzOTtkYiYjMzk7IHZhbHVlIGlzIHRoZSBjb2x1bW4gbmFtZQovLwovLyBBIGh5cGhlbiB3aWxsIGNhdXNlIGdvcnAgdG8gc2tpcCB0aGlzIGZpZWxkLCBzaW1pbGFyIHRvIHRoZQovLyBHbyBqc29uIHBhY2thZ2UuCi8vCi8vIFRoaXMgaXMgZXF1aXZhbGVudCB0byB1c2luZyB0aGUgQ29sTWFwIG1ldGhvZHM6Ci8vCi8vICAgdGFibGUgOj0gZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQcm9kdWN0e30sICYjMzQ7cHJvZHVjdCYjMzQ7KQovLyAgIHRhYmxlLkNvbE1hcCgmIzM0O0lkJiMzNDspLlJlbmFtZSgmIzM0O3Byb2R1Y3RfaWQmIzM0OykKLy8gICB0YWJsZS5Db2xNYXAoJiMzNDtQcmljZSYjMzQ7KS5SZW5hbWUoJiMzNDt1bml0X3ByaWNlJiMzNDspCi8vICAgdGFibGUuQ29sTWFwKCYjMzQ7SWdub3JlTWUmIzM0OykuU2V0VHJhbnNpZW50KHRydWUpCi8vCi8vIFlvdSBjYW4gb3B0aW9uYWxseSBkZWNsYXJlIHRoZSBmaWVsZCB0byBiZSBhIHByaW1hcnkga2V5IGFuZC9vciBhdXRvaW5jcmVtZW50Ci8vCnR5cGUgUHJvZHVjdCBzdHJ1Y3QgewogICAgSWQgICAgICAgICBpbnQ2NCAgICAgYGRiOiYjMzQ7cHJvZHVjdF9pZCwgcHJpbWFyeWtleSwgYXV0b2luY3JlbWVudCYjMzQ7YAogICAgUHJpY2UgICAgICBpbnQ2NCAgICAgYGRiOiYjMzQ7dW5pdF9wcmljZSYjMzQ7YAogICAgSWdub3JlTWUgICBzdHJpbmcgICAgYGRiOiYjMzQ7LSYjMzQ7YAp9CjwvY29kZT48L3ByZT4KPHA+VGhlbiBjcmVhdGUgYSBtYXBwZXIsIHR5cGljYWxseSB5b3UmIzM5O2QgZG8gdGhpcyBvbmUgdGltZSBhdCBhcHAgc3RhcnR1cDo8L3A+CjxwcmU+PGNvZGU+Ly8gY29ubmVjdCB0byBkYiB1c2luZyBzdGFuZGFyZCBHbyBkYXRhYmFzZS9zcWwgQVBJCi8vIHVzZSB3aGF0ZXZlciBkYXRhYmFzZS9zcWwgZHJpdmVyIHlvdSB3aXNoCmRiLCBlcnIgOj0gc3FsLk9wZW4oJiMzNDtteW15c3FsJiMzNDssICYjMzQ7dGNwOmxvY2FsaG9zdDozMzA2Km15ZGIvbXl1c2VyL215cGFzc3dvcmQmIzM0OykKCi8vIGNvbnN0cnVjdCBhIGdvcnAgRGJNYXAKZGJtYXAgOj0gJmFtcDtnb3JwLkRiTWFwe0RiOiBkYiwgRGlhbGVjdDogZ29ycC5NeVNRTERpYWxlY3R7JiMzNDtJbm5vREImIzM0OywgJiMzNDtVVEY4JiMzNDt9fQoKLy8gcmVnaXN0ZXIgdGhlIHN0cnVjdHMgeW91IHdpc2ggdG8gdXNlIHdpdGggZ29ycAovLyB5b3UgY2FuIGFsc28gdXNlIHRoZSBzaG9ydGVyIGRibWFwLkFkZFRhYmxlKCkgaWYgeW91Ci8vIGRvbiYjMzk7dCB3YW50IHRvIG92ZXJyaWRlIHRoZSB0YWJsZSBuYW1lCi8vCi8vIFNldEtleXModHJ1ZSkgbWVhbnMgd2UgaGF2ZSBhIGF1dG8gaW5jcmVtZW50IHByaW1hcnkga2V5LCB3aGljaAovLyB3aWxsIGdldCBhdXRvbWF0aWNhbGx5IGJvdW5kIHRvIHlvdXIgc3RydWN0IHBvc3QtaW5zZXJ0Ci8vCnQxIDo9IGRibWFwLkFkZFRhYmxlV2l0aE5hbWUoSW52b2ljZXt9LCAmIzM0O2ludm9pY2VfdGVzdCYjMzQ7KS5TZXRLZXlzKHRydWUsICYjMzQ7SWQmIzM0OykKdDIgOj0gZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQZXJzb257fSwgJiMzNDtwZXJzb25fdGVzdCYjMzQ7KS5TZXRLZXlzKHRydWUsICYjMzQ7SWQmIzM0OykKdDMgOj0gZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQcm9kdWN0e30sICYjMzQ7cHJvZHVjdF90ZXN0JiMzNDspLlNldEtleXModHJ1ZSwgJiMzNDtJZCYjMzQ7KQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtc3RydWN0LWVtYmVkZGluZyI+U3RydWN0IEVtYmVkZGluZzwvaDU+CjxwPmdvcnAgc3VwcG9ydHMgZW1iZWRkaW5nIHN0cnVjdHMuICBGb3IgZXhhbXBsZTo8L3A+CjxwcmU+PGNvZGU+dHlwZSBOYW1lcyBzdHJ1Y3QgewogICAgRmlyc3ROYW1lIHN0cmluZwogICAgTGFzdE5hbWUgIHN0cmluZwp9Cgp0eXBlIFdpdGhFbWJlZGRlZFN0cnVjdCBzdHJ1Y3QgewogICAgSWQgaW50NjQKICAgIE5hbWVzCn0KCmVzIDo9ICZhbXA7V2l0aEVtYmVkZGVkU3RydWN0ey0xLCBOYW1lc3tGaXJzdE5hbWU6ICYjMzQ7QWxpY2UmIzM0OywgTGFzdE5hbWU6ICYjMzQ7U21pdGgmIzM0O319CmVyciA6PSBkYm1hcC5JbnNlcnQoZXMpCjwvY29kZT48L3ByZT4KPHA+U2VlIHRoZSA8Y29kZT5UZXN0V2l0aEVtYmVkZGVkU3RydWN0PC9jb2RlPiBmdW5jdGlvbiBpbiA8Y29kZT5nb3JwX3Rlc3QuZ288L2NvZGU+IGZvciBhIGZ1bGwgZXhhbXBsZS48L3A+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtY3JlYXRlLWRyb3AtdGFibGVzIj5DcmVhdGUvRHJvcCBUYWJsZXM8L2g1Pgo8cD5BdXRvbWF0aWNhbGx5IGNyZWF0ZSAvIGRyb3AgcmVnaXN0ZXJlZCB0YWJsZXMuICBUaGlzIGlzIHVzZWZ1bCBmb3IgdW5pdCB0ZXN0cwpidXQgaXMgZW50aXJlbHkgb3B0aW9uYWwuICBZb3UgY2FuIG9mIGNvdXJzZSB1c2UgZ29ycCB3aXRoIHRhYmxlcyBjcmVhdGVkIG1hbnVhbGx5LApvciB3aXRoIGEgc2VwYXJhdGUgbWlncmF0aW9uIHRvb2wgKGxpa2UgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3J1YmVudi9zcWwtbWlncmF0ZSIgcmVsPSJub2ZvbGxvdyI+c3FsLW1pZ3JhdGU8L2E+LCA8YSBocmVmPSJodHRwczovL2JpdGJ1Y2tldC5vcmcvbGlhbXN0YXNrL2dvb3NlIiByZWw9Im5vZm9sbG93Ij5nb29zZTwvYT4gb3IgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21hdHRlcy9taWdyYXRlIiByZWw9Im5vZm9sbG93Ij5taWdyYXRlPC9hPikuPC9wPgo8cHJlPjxjb2RlPi8vIGNyZWF0ZSBhbGwgcmVnaXN0ZXJlZCB0YWJsZXMKZGJtYXAuQ3JlYXRlVGFibGVzKCkKCi8vIHNhbWUgYXMgYWJvdmUsIGJ1dCB1c2VzICYjMzQ7aWYgbm90IGV4aXN0cyYjMzQ7IGNsYXVzZSB0byBza2lwIHRhYmxlcyB0aGF0IGFyZQovLyBhbHJlYWR5IGRlZmluZWQKZGJtYXAuQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMoKQoKLy8gZHJvcApkYm1hcC5Ecm9wVGFibGVzKCkKPC9jb2RlPjwvcHJlPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLXNxbC1sb2dnaW5nIj5TUUwgTG9nZ2luZzwvaDU+CjxwPk9wdGlvbmFsbHkgeW91IGNhbiBwYXNzIGluIGEgbG9nZ2VyIHRvIHRyYWNlIGFsbCBTUUwgc3RhdGVtZW50cy4KSSByZWNvbW1lbmQgZW5hYmxpbmcgdGhpcyBpbml0aWFsbHkgd2hpbGUgeW91JiMzOTtyZSBnZXR0aW5nIHRoZSBmZWVsIGZvciB3aGF0CmdvcnAgaXMgZG9pbmcgb24geW91ciBiZWhhbGYuPC9wPgo8cD5Hb3JwIGRlZmluZXMgYSA8Y29kZT5Hb3JwTG9nZ2VyPC9jb2RlPiBpbnRlcmZhY2UgdGhhdCBHbyYjMzk7cyBidWlsdCBpbiA8Y29kZT5sb2cuTG9nZ2VyPC9jb2RlPiBzYXRpc2ZpZXMuCkhvd2V2ZXIsIHlvdSBjYW4gd3JpdGUgeW91ciBvd24gPGNvZGU+R29ycExvZ2dlcjwvY29kZT4gaW1wbGVtZW50YXRpb24sIG9yIHVzZSBhIHBhY2thZ2Ugc3VjaAphcyA8Y29kZT5nbG9nPC9jb2RlPiBpZiB5b3Ugd2FudCBtb3JlIGNvbnRyb2wgb3ZlciBob3cgc3RhdGVtZW50cyBhcmUgbG9nZ2VkLjwvcD4KPHByZT48Y29kZT4vLyBXaWxsIGxvZyBhbGwgU1FMIHN0YXRlbWVudHMgKyBhcmdzIGFzIHRoZXkgYXJlIHJ1bgovLyBUaGUgZmlyc3QgYXJnIGlzIGEgc3RyaW5nIHByZWZpeCB0byBwcmVwZW5kIHRvIGFsbCBsb2cgbWVzc2FnZXMKZGJtYXAuVHJhY2VPbigmIzM0O1tnb3JwXSYjMzQ7LCBsb2cuTmV3KG9zLlN0ZG91dCwgJiMzNDtteWFwcDomIzM0OywgbG9nLkxtaWNyb3NlY29uZHMpKQoKLy8gVHVybiBvZmYgdHJhY2luZwpkYm1hcC5UcmFjZU9mZigpCjwvY29kZT48L3ByZT4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1pbnNlcnQiPkluc2VydDwvaDU+CjxwcmU+PGNvZGU+Ly8gTXVzdCBkZWNsYXJlIGFzIHBvaW50ZXJzIHNvIG9wdGlvbmFsIGNhbGxiYWNrIGhvb2tzCi8vIGNhbiBvcGVyYXRlIG9uIHlvdXIgZGF0YSwgbm90IGNvcGllcwppbnYxIDo9ICZhbXA7SW52b2ljZXswLCAxMDAsIDIwMCwgJiMzNDtmaXJzdCBvcmRlciYjMzQ7LCAwfQppbnYyIDo9ICZhbXA7SW52b2ljZXswLCAxMDAsIDIwMCwgJiMzNDtzZWNvbmQgb3JkZXImIzM0OywgMH0KCi8vIEluc2VydCB5b3VyIHJvd3MKZXJyIDo9IGRibWFwLkluc2VydChpbnYxLCBpbnYyKQoKLy8gQmVjYXVzZSB3ZSBjYWxsZWQgU2V0S2V5cyh0cnVlKSBvbiBJbnZvaWNlLCB0aGUgSWQgZmllbGQKLy8gd2lsbCBiZSBwb3B1bGF0ZWQgYWZ0ZXIgdGhlIEluc2VydCgpIGF1dG9tYXRpY2FsbHkKZm10LlByaW50ZigmIzM0O2ludjEuSWQ9JWQgIGludjIuSWQ9JWRcbiYjMzQ7LCBpbnYxLklkLCBpbnYyLklkKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtdXBkYXRlIj5VcGRhdGU8L2g1Pgo8cD5Db250aW51aW5nIHRoZSBhYm92ZSBleGFtcGxlLCB1c2UgdGhlIDxjb2RlPlVwZGF0ZTwvY29kZT4gbWV0aG9kIHRvIG1vZGlmeSBhbiBJbnZvaWNlOjwvcD4KPHByZT48Y29kZT4vLyBjb3VudCBpcyB0aGUgIyBvZiByb3dzIHVwZGF0ZWQsIHdoaWNoIHNob3VsZCBiZSAxIGluIHRoaXMgZXhhbXBsZQpjb3VudCwgZXJyIDo9IGRibWFwLlVwZGF0ZShpbnYxKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtZGVsZXRlIj5EZWxldGU8L2g1Pgo8cD5JZiB5b3UgaGF2ZSBwcmltYXJ5IGtleShzKSBkZWZpbmVkIGZvciBhIHN0cnVjdCwgeW91IGNhbiB1c2UgdGhlIDxjb2RlPkRlbGV0ZTwvY29kZT4KbWV0aG9kIHRvIHJlbW92ZSByb3dzOjwvcD4KPHByZT48Y29kZT5jb3VudCwgZXJyIDo9IGRibWFwLkRlbGV0ZShpbnYxKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtc2VsZWN0LWJ5LWtleSI+U2VsZWN0IGJ5IEtleTwvaDU+CjxwPlVzZSB0aGUgPGNvZGU+R2V0PC9jb2RlPiBtZXRob2QgdG8gZmV0Y2ggYSBzaW5nbGUgcm93IGJ5IHByaW1hcnkga2V5LiAgSXQgcmV0dXJucwpuaWwgaWYgbm8gcm93IGlzIGZvdW5kLjwvcD4KPHByZT48Y29kZT4vLyBmZXRjaCBJbnZvaWNlIHdpdGggSWQ9OTkKb2JqLCBlcnIgOj0gZGJtYXAuR2V0KEludm9pY2V7fSwgOTkpCmludiA6PSBvYmouKCpJbnZvaWNlKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtYWQtaG9jLXNxbCI+QWQgSG9jIFNRTDwvaDU+CjxoNiBjbGFzcz0iaDQiIGlkPSJyZWFkbWUtc2VsZWN0Ij5TRUxFQ1Q8L2g2Pgo8cD48Y29kZT5TZWxlY3QoKTwvY29kZT4gYW5kIDxjb2RlPlNlbGVjdE9uZSgpPC9jb2RlPiBwcm92aWRlIGEgc2ltcGxlIHdheSB0byBiaW5kIGFyYml0cmFyeSBxdWVyaWVzIHRvIGEgc2xpY2UKb3IgYSBzaW5nbGUgc3RydWN0LjwvcD4KPHByZT48Y29kZT4vLyBTZWxlY3QgYSBzbGljZSAtIGZpcnN0IHJldHVybiB2YWx1ZSBpcyBub3QgbmVlZGVkIHdoZW4gYSBzbGljZSBwb2ludGVyIGlzIHBhc3NlZCB0byBTZWxlY3QoKQp2YXIgcG9zdHMgW11Qb3N0Cl8sIGVyciA6PSBkYm1hcC5TZWxlY3QoJmFtcDtwb3N0cywgJiMzNDtzZWxlY3QgKiBmcm9tIHBvc3Qgb3JkZXIgYnkgaWQmIzM0OykKCi8vIFlvdSBjYW4gYWxzbyB1c2UgcHJpbWl0aXZlIHR5cGVzCnZhciBpZHMgW11zdHJpbmcKXywgZXJyIDo9IGRibWFwLlNlbGVjdCgmYW1wO2lkcywgJiMzNDtzZWxlY3QgaWQgZnJvbSBwb3N0JiMzNDspCgovLyBTZWxlY3QgYSBzaW5nbGUgcm93LgovLyBSZXR1cm5zIGFuIGVycm9yIGlmIG5vIHJvdyBmb3VuZCwgb3IgaWYgbW9yZSB0aGFuIG9uZSByb3cgaXMgZm91bmQKdmFyIHBvc3QgUG9zdAplcnIgOj0gZGJtYXAuU2VsZWN0T25lKCZhbXA7cG9zdCwgJiMzNDtzZWxlY3QgKiBmcm9tIHBvc3Qgd2hlcmUgaWQ9PyYjMzQ7LCBpZCkKPC9jb2RlPjwvcHJlPgo8cD5XYW50IHRvIGRvIGpvaW5zPyAgSnVzdCB3cml0ZSB0aGUgU1FMIGFuZCB0aGUgc3RydWN0LiBnb3JwIHdpbGwgYmluZCB0aGVtOjwvcD4KPHByZT48Y29kZT4vLyBEZWZpbmUgYSB0eXBlIGZvciB5b3VyIGpvaW4KLy8gSXQgKm11c3QqIGNvbnRhaW4gYWxsIHRoZSBjb2x1bW5zIGluIHlvdXIgU0VMRUNUIHN0YXRlbWVudAovLwovLyBUaGUgbmFtZXMgaGVyZSBzaG91bGQgbWF0Y2ggdGhlIGFsaWFzZWQgY29sdW1uIG5hbWVzIHlvdSBzcGVjaWZ5Ci8vIGluIHlvdXIgU1FMIC0gbm8gYWRkaXRpb25hbCBiaW5kaW5nIHdvcmsgcmVxdWlyZWQuICBzaW1wbGUuCi8vCnR5cGUgSW52b2ljZVBlcnNvblZpZXcgc3RydWN0IHsKICAgIEludm9pY2VJZCAgIGludDY0CiAgICBQZXJzb25JZCAgICBpbnQ2NAogICAgTWVtbyAgICAgICAgc3RyaW5nCiAgICBGTmFtZSAgICAgICBzdHJpbmcKfQoKLy8gQ3JlYXRlIHNvbWUgcm93cwpwMSA6PSAmYW1wO1BlcnNvbnswLCAwLCAwLCAmIzM0O2JvYiYjMzQ7LCAmIzM0O3NtaXRoJiMzNDt9CmVyciA9IGRibWFwLkluc2VydChwMSkKY2hlY2tFcnIoZXJyLCAmIzM0O0luc2VydCBmYWlsZWQmIzM0OykKCi8vIG5vdGljZSBob3cgd2UgY2FuIHdpcmUgdXAgcDEuSWQgdG8gdGhlIGludm9pY2UgZWFzaWx5CmludjEgOj0gJmFtcDtJbnZvaWNlezAsIDAsIDAsICYjMzQ7eG1hcyBvcmRlciYjMzQ7LCBwMS5JZH0KZXJyID0gZGJtYXAuSW5zZXJ0KGludjEpCmNoZWNrRXJyKGVyciwgJiMzNDtJbnNlcnQgZmFpbGVkJiMzNDspCgovLyBSdW4geW91ciBxdWVyeQpxdWVyeSA6PSAmIzM0O3NlbGVjdCBpLklkIEludm9pY2VJZCwgcC5JZCBQZXJzb25JZCwgaS5NZW1vLCBwLkZOYW1lICYjMzQ7ICsKCSYjMzQ7ZnJvbSBpbnZvaWNlX3Rlc3QgaSwgcGVyc29uX3Rlc3QgcCAmIzM0OyArCgkmIzM0O3doZXJlIGkuUGVyc29uSWQgPSBwLklkJiMzNDsKCi8vIHBhc3MgYSBzbGljZSB0byBTZWxlY3QoKQp2YXIgbGlzdCBbXUludm9pY2VQZXJzb25WaWV3Cl8sIGVyciA6PSBkYm1hcC5TZWxlY3QoJmFtcDtsaXN0LCBxdWVyeSkKCi8vIHRoaXMgc2hvdWxkIHRlc3QgdHJ1ZQpleHBlY3RlZCA6PSBJbnZvaWNlUGVyc29uVmlld3tpbnYxLklkLCBwMS5JZCwgaW52MS5NZW1vLCBwMS5GTmFtZX0KaWYgcmVmbGVjdC5EZWVwRXF1YWwobGlzdFswXSwgZXhwZWN0ZWQpIHsKICAgIGZtdC5QcmludGxuKCYjMzQ7V29vdCEgTXkgam9pbiB3b3JrZWQhJiMzNDspCn0KPC9jb2RlPjwvcHJlPgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLXNlbGVjdC1zdHJpbmctb3ItaW50NjQiPlNFTEVDVCBzdHJpbmcgb3IgaW50NjQ8L2g2Pgo8cD5nb3JwIHByb3ZpZGVzIGEgZmV3IGNvbnZlbmllbmNlIG1ldGhvZHMgZm9yIHNlbGVjdGluZyBhIHNpbmdsZSBzdHJpbmcgb3IgaW50NjQuPC9wPgo8cHJlPjxjb2RlPi8vIHNlbGVjdCBzaW5nbGUgaW50NjQgZnJvbSBkYiAodXNlICQxIGluc3RlYWQgb2YgPyBmb3IgcG9zdGdyZXNxbCkKaTY0LCBlcnIgOj0gZGJtYXAuU2VsZWN0SW50KCYjMzQ7c2VsZWN0IGNvdW50KCopIGZyb20gZm9vIHdoZXJlIGJsYWg9PyYjMzQ7LCBibGFoVmFsKQoKLy8gc2VsZWN0IHNpbmdsZSBzdHJpbmcgZnJvbSBkYjoKcywgZXJyIDo9IGRibWFwLlNlbGVjdFN0cigmIzM0O3NlbGVjdCBuYW1lIGZyb20gZm9vIHdoZXJlIGJsYWg9PyYjMzQ7LCBibGFoVmFsKQoKPC9jb2RlPjwvcHJlPgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLW5hbWVkLWJpbmQtcGFyYW1ldGVycyI+TmFtZWQgYmluZCBwYXJhbWV0ZXJzPC9oNj4KPHA+WW91IG1heSB1c2UgYSBtYXAgb3Igc3RydWN0IHRvIGJpbmQgcGFyYW1ldGVycyBieSBuYW1lLiAgVGhpcyBpcyBjdXJyZW50bHkKb25seSBzdXBwb3J0ZWQgaW4gU0VMRUNUIHF1ZXJpZXMuPC9wPgo8cHJlPjxjb2RlPl8sIGVyciA6PSBkYm0uU2VsZWN0KCZhbXA7ZGVzdCwgJiMzNDtzZWxlY3QgKiBmcm9tIEZvbyB3aGVyZSBuYW1lID0gOm5hbWUgYW5kIGFnZSA9IDphZ2UmIzM0OywgbWFwW3N0cmluZ11pbnRlcmZhY2V7fXsKICAmIzM0O25hbWUmIzM0OzogJiMzNDtSb2ImIzM0OywKICAmIzM0O2FnZSYjMzQ7OiAzMSwKfSkKPC9jb2RlPjwvcHJlPgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLXVwZGF0ZS1kZWxldGUiPlVQREFURSAvIERFTEVURTwvaDY+CjxwPllvdSBjYW4gZXhlY3V0ZSByYXcgU1FMIGlmIHlvdSB3aXNoLiAgUGFydGljdWxhcmx5IGdvb2QgZm9yIGJhdGNoIG9wZXJhdGlvbnMuPC9wPgo8cHJlPjxjb2RlPnJlcywgZXJyIDo9IGRibWFwLkV4ZWMoJiMzNDtkZWxldGUgZnJvbSBpbnZvaWNlX3Rlc3Qgd2hlcmUgUGVyc29uSWQ9PyYjMzQ7LCAxMCkKPC9jb2RlPjwvcHJlPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLXRyYW5zYWN0aW9ucyI+VHJhbnNhY3Rpb25zPC9oNT4KPHA+WW91IGNhbiBiYXRjaCBvcGVyYXRpb25zIGludG8gYSB0cmFuc2FjdGlvbjo8L3A+CjxwcmU+PGNvZGU+ZnVuYyBJbnNlcnRJbnYoZGJtYXAgKkRiTWFwLCBpbnYgKkludm9pY2UsIHBlciAqUGVyc29uKSBlcnJvciB7CiAgICAvLyBTdGFydCBhIG5ldyB0cmFuc2FjdGlvbgogICAgdHJhbnMsIGVyciA6PSBkYm1hcC5CZWdpbigpCiAgICBpZiBlcnIgIT0gbmlsIHsKICAgICAgICByZXR1cm4gZXJyCiAgICB9CgogICAgZXJyID0gdHJhbnMuSW5zZXJ0KHBlcikKICAgIGNoZWNrRXJyKGVyciwgJiMzNDtJbnNlcnQgZmFpbGVkJiMzNDspCgogICAgaW52LlBlcnNvbklkID0gcGVyLklkCiAgICBlcnIgPSB0cmFucy5JbnNlcnQoaW52KQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O0luc2VydCBmYWlsZWQmIzM0OykKCiAgICAvLyBpZiB0aGUgY29tbWl0IGlzIHN1Y2Nlc3NmdWwsIGEgbmlsIGVycm9yIGlzIHJldHVybmVkCiAgICByZXR1cm4gdHJhbnMuQ29tbWl0KCkKfQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtaG9va3MiPkhvb2tzPC9oNT4KPHA+VXNlIGhvb2tzIHRvIHVwZGF0ZSBkYXRhIGJlZm9yZS9hZnRlciBzYXZpbmcgdG8gdGhlIGRiLiBHb29kIGZvciB0aW1lc3RhbXBzOjwvcD4KPHByZT48Y29kZT4vLyBpbXBsZW1lbnQgdGhlIFByZUluc2VydCBhbmQgUHJlVXBkYXRlIGhvb2tzCmZ1bmMgKGkgKkludm9pY2UpIFByZUluc2VydChzIGdvcnAuU3FsRXhlY3V0b3IpIGVycm9yIHsKICAgIGkuQ3JlYXRlZCA9IHRpbWUuTm93KCkuVW5peE5hbm8oKQogICAgaS5VcGRhdGVkID0gaS5DcmVhdGVkCiAgICByZXR1cm4gbmlsCn0KCmZ1bmMgKGkgKkludm9pY2UpIFByZVVwZGF0ZShzIGdvcnAuU3FsRXhlY3V0b3IpIGVycm9yIHsKICAgIGkuVXBkYXRlZCA9IHRpbWUuTm93KCkuVW5peE5hbm8oKQogICAgcmV0dXJuIG5pbAp9CgovLyBZb3UgY2FuIHVzZSB0aGUgU3FsRXhlY3V0b3IgdG8gY2FzY2FkZSBhZGRpdGlvbmFsIFNRTAovLyBUYWtlIGNhcmUgdG8gYXZvaWQgY3ljbGVzLiBnb3JwIHdvbiYjMzk7dCBwcmV2ZW50IHRoZW0uCi8vCi8vIEhlcmUmIzM5O3MgYW4gZXhhbXBsZSBvZiBhIGNhc2NhZGluZyBkZWxldGUKLy8KZnVuYyAocCAqUGVyc29uKSBQcmVEZWxldGUocyBnb3JwLlNxbEV4ZWN1dG9yKSBlcnJvciB7CiAgICBxdWVyeSA6PSAmIzM0O2RlbGV0ZSBmcm9tIGludm9pY2VfdGVzdCB3aGVyZSBQZXJzb25JZD0/JiMzNDsKICAgIAogICAgXywgZXJyIDo9IHMuRXhlYyhxdWVyeSwgcC5JZCkKICAgIAogICAgaWYgZXJyICE9IG5pbCB7CiAgICAgICAgcmV0dXJuIGVycgogICAgfQogICAgcmV0dXJuIG5pbAp9CjwvY29kZT48L3ByZT4KPHA+RnVsbCBsaXN0IG9mIGhvb2tzIHRoYXQgeW91IGNhbiBpbXBsZW1lbnQ6PC9wPgo8cHJlPjxjb2RlPlBvc3RHZXQKUHJlSW5zZXJ0ClBvc3RJbnNlcnQKUHJlVXBkYXRlClBvc3RVcGRhdGUKUHJlRGVsZXRlClBvc3REZWxldGUKCkFsbCBoYXZlIHRoZSBzYW1lIHNpZ25hdHVyZS4gIGZvciBleGFtcGxlOgoKZnVuYyAocCAqTXlTdHJ1Y3QpIFBvc3RVcGRhdGUocyBnb3JwLlNxbEV4ZWN1dG9yKSBlcnJvcgo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtb3B0aW1pc3RpYy1sb2NraW5nIj5PcHRpbWlzdGljIExvY2tpbmc8L2g1Pgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLW5vdGUtdGhhdC10aGlzLWJlaGF2aW91ci1oYXMtY2hhbmdlZC1pbi12Mi1zZWUtbWlncmF0aW9uLWd1aWRlLW1pZ3JhdGlvbi1ndWlkZSI+Tm90ZSB0aGF0IHRoaXMgYmVoYXZpb3VyIGhhcyBjaGFuZ2VkIGluIHYyLiBTZWUgPGEgaHJlZj0iI3JlYWRtZS1taWdyYXRpb24tZ3VpZGUiIHJlbD0ibm9mb2xsb3ciPk1pZ3JhdGlvbiBHdWlkZTwvYT4uPC9oNj4KPHA+Z29ycCBwcm92aWRlcyBhIHNpbXBsZSBvcHRpbWlzdGljIGxvY2tpbmcgZmVhdHVyZSwgc2ltaWxhciB0byBKYXZhJiMzOTtzCkpQQSwgdGhhdCB3aWxsIHJhaXNlIGFuIGVycm9yIGlmIHlvdSB0cnkgdG8gdXBkYXRlL2RlbGV0ZSBhIHJvdyB3aG9zZQo8Y29kZT52ZXJzaW9uPC9jb2RlPiBjb2x1bW4gaGFzIGEgdmFsdWUgZGlmZmVyZW50IHRoYW4gdGhlIG9uZSBpbiBtZW1vcnkuICBUaGlzCnByb3ZpZGVzIGEgc2FmZSB3YXkgdG8gZG8gJiMzNDtzZWxlY3QgdGhlbiB1cGRhdGUmIzM0OyBzdHlsZSBvcGVyYXRpb25zCndpdGhvdXQgZXhwbGljaXQgcmVhZCBhbmQgd3JpdGUgbG9ja3MuPC9wPgo8cHJlPjxjb2RlPi8vIFZlcnNpb24gaXMgYW4gYXV0by1pbmNyZW1lbnRlZCBudW1iZXIsIG1hbmFnZWQgYnkgZ29ycAovLyBJZiB0aGlzIHByb3BlcnR5IGlzIHByZXNlbnQgb24geW91ciBzdHJ1Y3QsIHVwZGF0ZQovLyBvcGVyYXRpb25zIHdpbGwgYmUgY29uc3RyYWluZWQKLy8KLy8gRm9yIGV4YW1wbGUsIHNheSB3ZSBkZWZpbmVkIFBlcnNvbiBhczoKCnR5cGUgUGVyc29uIHN0cnVjdCB7CiAgICBJZCAgICAgICBpbnQ2NAogICAgQ3JlYXRlZCAgaW50NjQKICAgIFVwZGF0ZWQgIGludDY0CiAgICBGTmFtZSAgICBzdHJpbmcKICAgIExOYW1lICAgIHN0cmluZwoKICAgIC8vIGF1dG9tYXRpY2FsbHkgdXNlZCBhcyB0aGUgVmVyc2lvbiBjb2wKICAgIC8vIHVzZSB0YWJsZS5TZXRWZXJzaW9uQ29sKCYjMzQ7Y29sdW1uTmFtZSYjMzQ7KSB0byBtYXAgYSBkaWZmZXJlbnQKICAgIC8vIHN0cnVjdCBmaWVsZCBhcyB0aGUgdmVyc2lvbiBmaWVsZAogICAgVmVyc2lvbiAgaW50NjQKfQoKcDEgOj0gJmFtcDtQZXJzb257MCwgMCwgMCwgJiMzNDtCb2ImIzM0OywgJiMzNDtTbWl0aCYjMzQ7LCAwfQplcnIgPSBkYm1hcC5JbnNlcnQocDEpICAvLyBWZXJzaW9uIGlzIG5vdyAxCmNoZWNrRXJyKGVyciwgJiMzNDtJbnNlcnQgZmFpbGVkJiMzNDspCgpvYmosIGVyciA6PSBkYm1hcC5HZXQoUGVyc29ue30sIHAxLklkKQpwMiA6PSBvYmouKCpQZXJzb24pCnAyLkxOYW1lID0gJiMzNDtFZHdhcmRzJiMzNDsKXyxlcnIgPSBkYm1hcC5VcGRhdGUocDIpICAvLyBWZXJzaW9uIGlzIG5vdyAyCmNoZWNrRXJyKGVyciwgJiMzNDtVcGRhdGUgZmFpbGVkJiMzNDspCgpwMS5MTmFtZSA9ICYjMzQ7SG93YXJkJiMzNDsKCi8vIFJhaXNlcyBlcnJvciBiZWNhdXNlIHAxLlZlcnNpb24gPT0gMSwgd2hpY2ggaXMgb3V0IG9mIGRhdGUKY291bnQsIGVyciA6PSBkYm1hcC5VcGRhdGUocDEpCl8sIG9rIDo9IGVyci4oZ29ycC5PcHRpbWlzdGljTG9ja0Vycm9yKQppZiBvayB7CiAgICAvLyBzaG91bGQgcmVhY2ggdGhpcyBzdGF0ZW1lbnQKCiAgICAvLyBpbiBhIHJlYWwgYXBwIHlvdSBtaWdodCByZWxvYWQgdGhlIHJvdyBhbmQgcmV0cnksIG9yCiAgICAvLyB5b3UgbWlnaHQgcHJvcGVnYXRlIHRoaXMgdG8gdGhlIHVzZXIsIGRlcGVuZGluZyBvbiB0aGUgZGVzaXJlZAogICAgLy8gc2VtYW50aWNzCiAgICBmbXQuUHJpbnRmKCYjMzQ7VHJpZWQgdG8gdXBkYXRlIHJvdyB3aXRoIHN0YWxlIGRhdGE6ICV2XG4mIzM0OywgZXJyKQp9IGVsc2UgewogICAgLy8gc29tZSBvdGhlciBkYiBlcnJvciBvY2N1cnJlZCAtIGxvZyBvciByZXR1cm4gdXAgdGhlIHN0YWNrCiAgICBmbXQuUHJpbnRmKCYjMzQ7VW5rbm93biBkYiBlcnI6ICV2XG4mIzM0OywgZXJyKQp9CjwvY29kZT48L3ByZT4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1hZGRpbmctaW5kZXgtZXMtb24tY29sdW1uLXMtYmV5b25kLXRoZS1wcmltYXJ5LWtleSI+QWRkaW5nIElOREVYKGVzKSBvbiBjb2x1bW4ocykgYmV5b25kIHRoZSBwcmltYXJ5IGtleTwvaDU+CjxwPkluZGV4ZXMgYXJlIGZyZXF1ZW50bHkgY3JpdGljYWwgZm9yIHBlcmZvcm1hbmNlLiBIZXJlIGlzIGhvdyB0byBhZGQKdGhlbSB0byB5b3VyIHRhYmxlcy48L3A+CjxwPk5COiBTcWxTZXJ2ZXIgYW5kIE9yYWNsZSBuZWVkIHRlc3RpbmcgYW5kIHBvc3NpYmxlIGFkanVzdG1lbnQgdG8gdGhlCkNyZWF0ZUluZGV4U3VmZml4KCkgYW5kIERyb3BJbmRleFN1ZmZpeCgpIG1ldGhvZHMgdG8gbWFrZSBBZGRJbmRleCgpCndvcmsgZm9yIHRoZW0uPC9wPgo8cD5JbiB0aGUgZXhhbXBsZSBiZWxvdyB3ZSBwdXQgYW4gaW5kZXggYm90aCBvbiB0aGUgSWQgZmllbGQsIGFuZCBvbiB0aGUKQWNjdElkIGZpZWxkLjwvcD4KPHByZT48Y29kZT50eXBlIEFjY291bnQgc3RydWN0IHsKCUlkICAgICAgaW50NjQKCUFjY3RJZCAgc3RyaW5nIC8vIGUuZy4gdGhpcyBtaWdodCBiZSBhIGxvbmcgdXVpZCBmb3IgcG9ydGFiaWxpdHkKfQoKLy8gaW5kZXhUeXBlICh0aGUgMm5kIHBhcmFtIHRvIEFkZEluZGV4IGNhbGwpIGlzICYjMzQ7QnRyZWUmIzM0OyBvciAmIzM0O0hhc2gmIzM0OyBmb3IgTXlTUUwuCi8vIGRlbW9uc3RyYXRlIGFkZGluZyBhIHNlY29uZCBpbmRleCBvbiBBY2N0SWQsIGFuZCBjb25zdHJhaW4gdGhhdCBmaWVsZCB0byBoYXZlIHVuaXF1ZSB2YWx1ZXMuCmRibS5BZGRUYWJsZShpcHRhYi5BY2NvdW50e30pLlNldEtleXModHJ1ZSwgJiMzNDtJZCYjMzQ7KS5BZGRJbmRleCgmIzM0O0FjY3RJZEluZGV4JiMzNDssICYjMzQ7QnRyZWUmIzM0OywgW11zdHJpbmd7JiMzNDtBY2N0SWQmIzM0O30pLlNldFVuaXF1ZSh0cnVlKQoKZXJyID0gZGJtLkNyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkKY2hlY2tFcnIoZXJyLCAmIzM0O0NyZWF0ZVRhYmxlc0lmTm90RXhpc3RzIGZhaWxlZCYjMzQ7KQoKZXJyID0gZGJtLkNyZWF0ZUluZGV4KCkKY2hlY2tFcnIoZXJyLCAmIzM0O0NyZWF0ZUluZGV4IGZhaWxlZCYjMzQ7KQoKPC9jb2RlPjwvcHJlPgo8cD5DaGVjayB0aGUgZWZmZWN0IG9mIHRoZSBDcmVhdGVJbmRleCgpIGNhbGwgaW4gbXlzcWw6PC9wPgo8cHJlPjxjb2RlPiQgbXlzcWwKCk1hcmlhREIgW3Rlc3RdJmd0OyBzaG93IGNyZWF0ZSB0YWJsZSBBY2NvdW50OworLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwp8IEFjY291bnQgfCBDUkVBVEUgVEFCTEUgYEFjY291bnRgICgKICBgSWRgIGJpZ2ludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYEFjY3RJZGAgdmFyY2hhcigyNTUpIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElkYCksCiAgVU5JUVVFIEtFWSBgQWNjdElkSW5kZXhgIChgQWNjdElkYCkgVVNJTkcgQlRSRUUgICAmbHQ7Jmx0OyZsdDstLS0geWVzISBpbmRleCBhZGRlZC4KKSBFTkdJTkU9SW5ub0RCIERFRkFVTFQgQ0hBUlNFVD11dGY4IAorLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwoKPC9jb2RlPjwvcHJlPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWRhdGFiYXNlLWRyaXZlcnMiPkRhdGFiYXNlIERyaXZlcnM8L2g0Pgo8cD5nb3JwIHVzZXMgdGhlIEdvIDEgPGNvZGU+ZGF0YWJhc2Uvc3FsPC9jb2RlPiBwYWNrYWdlLiAgQSBmdWxsIGxpc3Qgb2YgY29tcGxpYW50CmRyaXZlcnMgaXMgYXZhaWxhYmxlIGhlcmU6PC9wPgo8cD48YSBocmVmPSJodHRwOi8vY29kZS5nb29nbGUuY29tL3AvZ28td2lraS93aWtpL1NRTERyaXZlcnMiIHJlbD0ibm9mb2xsb3ciPmh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9nby13aWtpL3dpa2kvU1FMRHJpdmVyczwvYT48L3A+CjxwPlNhZGx5LCBTUUwgZGF0YWJhc2VzIGRpZmZlciBvbiB2YXJpb3VzIGlzc3Vlcy4gZ29ycCBwcm92aWRlcyBhIERpYWxlY3QKaW50ZXJmYWNlIHRoYXQgc2hvdWxkIGJlIGltcGxlbWVudGVkIHBlciBkYXRhYmFzZSB2ZW5kb3IuICBEaWFsZWN0cwphcmUgcHJvdmlkZWQgZm9yOjwvcD4KPHVsPgo8bGk+TXlTUUw8L2xpPgo8bGk+UG9zdGdyZVNRTDwvbGk+CjxsaT5zcWxpdGUzPC9saT4KPC91bD4KPHA+RWFjaCBvZiB0aGVzZSB0aHJlZSBkYXRhYmFzZXMgcGFzcyB0aGUgdGVzdCBzdWl0ZS4gIFNlZSA8Y29kZT5nb3JwX3Rlc3QuZ288L2NvZGU+CmZvciBleGFtcGxlIERTTnMgZm9yIHRoZXNlIHRocmVlIGRhdGFiYXNlcy48L3A+CjxwPlN1cHBvcnQgaXMgYWxzbyBwcm92aWRlZCBmb3I6PC9wPgo8dWw+CjxsaT5PcmFjbGUgKGNvbnRyaWJ1dGVkIGJ5IEBrbGFpZGxpYWRvbik8L2xpPgo8bGk+U1FMIFNlcnZlciAoY29udHJpYnV0ZWQgYnkgQHFyYXdsKSAtIHVzZSBkcml2ZXI6CmdpdGh1Yi5jb20vZGVuaXNlbmtvbS9nby1tc3NxbGRiPC9saT4KPC91bD4KPHA+Tm90ZSB0aGF0IHRoZXNlIGRhdGFiYXNlcyBhcmUgbm90IGNvdmVyZWQgYnkgQ0kgYW5kIEkgKEBjb29wZXJudXJzZSkKaGF2ZSBubyBnb29kIHdheSB0byB0ZXN0IHRoZW0gbG9jYWxseS4gIFNvIHBsZWFzZSB0cnkgdGhlbSBhbmQgc2VuZApwYXRjaGVzIGFzIG5lZWRlZCwgYnV0IGV4cGVjdCBhIGJpdCBtb3JlIHVucHJlZGljYWJpbGl0eS48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtc3FsaXRlMy1leHRlbnNpb25zIj5TcWxpdGUzIEV4dGVuc2lvbnM8L2g0Pgo8cD5JbiBvcmRlciB0byB1c2Ugc3FsaXRlMyBleHRlbnNpb25zIHlvdSBuZWVkIHRvIGZpcnN0IHJlZ2lzdGVyIGEgY3VzdG9tIGRyaXZlcjo8L3A+CjxwcmU+PGNvZGU+aW1wb3J0ICgKCSYjMzQ7ZGF0YWJhc2Uvc3FsJiMzNDsKCgkvLyB1c2Ugd2hhdGV2ZXIgZGF0YWJhc2Uvc3FsIGRyaXZlciB5b3Ugd2lzaAoJc3FsaXRlICYjMzQ7Z2l0aHViLmNvbS9tYXR0bi9nby1zcWxpdGUzJiMzNDsKKQoKZnVuYyBjdXN0b21Ecml2ZXIoKSAoKnNxbC5EQiwgZXJyb3IpIHsKCgkvLyBjcmVhdGUgY3VzdG9tIGRyaXZlciB3aXRoIGV4dGVuc2lvbnMgZGVmaW5lZAoJc3FsLlJlZ2lzdGVyKCYjMzQ7c3FsaXRlMy1jdXN0b20mIzM0OywgJmFtcDtzcWxpdGUuU1FMaXRlRHJpdmVyewoJCUV4dGVuc2lvbnM6IFtdc3RyaW5newoJCQkmIzM0O21vZF9zcGF0aWFsaXRlJiMzNDssCgkJfSwKCX0pCgoJLy8gbm93IHlvdSBjYW4gdGhlbiBjb25uZWN0IHVzaW5nIHRoZSAmIzM5O3NxbGl0ZTMtY3VzdG9tJiMzOTsgZHJpdmVyIGluc3RlYWQgb2YgJiMzOTtzcWxpdGUzJiMzOTsKCXJldHVybiBzcWwuT3BlbigmIzM0O3NxbGl0ZTMtY3VzdG9tJiMzNDssICYjMzQ7L3RtcC9wb3N0X2RiLmJpbiYjMzQ7KQp9CjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1rbm93bi1pc3N1ZXMiPktub3duIElzc3VlczwvaDQ+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtc3FsLXBsYWNlaG9sZGVyLXBvcnRhYmlsaXR5Ij5TUUwgcGxhY2Vob2xkZXIgcG9ydGFiaWxpdHk8L2g1Pgo8cD5EaWZmZXJlbnQgZGF0YWJhc2VzIHVzZSBkaWZmZXJlbnQgc3RyaW5ncyB0byBpbmRpY2F0ZSB2YXJpYWJsZQpwbGFjZWhvbGRlcnMgaW4gcHJlcGFyZWQgU1FMIHN0YXRlbWVudHMuICBVbmxpa2Ugc29tZSBkYXRhYmFzZQphYnN0cmFjdGlvbiBsYXllcnMgKHN1Y2ggYXMgSkRCQyksIEdvJiMzOTtzIDxjb2RlPmRhdGFiYXNlL3NxbDwvY29kZT4gZG9lcyBub3QKc3RhbmRhcmRpemUgdGhpcy48L3A+CjxwPlNRTCBnZW5lcmF0ZWQgYnkgZ29ycCBpbiB0aGUgPGNvZGU+SW5zZXJ0PC9jb2RlPiwgPGNvZGU+VXBkYXRlPC9jb2RlPiwgPGNvZGU+RGVsZXRlPC9jb2RlPiwgYW5kIDxjb2RlPkdldDwvY29kZT4KbWV0aG9kcyBkZWxlZ2F0ZXMgdG8gYSBEaWFsZWN0IGltcGxlbWVudGF0aW9uIGZvciBlYWNoIGRhdGFiYXNlLCBhbmQKd2lsbCBnZW5lcmF0ZSBwb3J0YWJsZSBTUUwuPC9wPgo8cD5SYXcgU1FMIHN0cmluZ3MgcGFzc2VkIHRvIDxjb2RlPkV4ZWM8L2NvZGU+LCA8Y29kZT5TZWxlY3Q8L2NvZGU+LCA8Y29kZT5TZWxlY3RPbmU8L2NvZGU+LCA8Y29kZT5TZWxlY3RJbnQ8L2NvZGU+LApldGMgd2lsbCBub3QgYmUgcGFyc2VkLiAgQ29uc2VxdWVudGx5IHlvdSBtYXkgaGF2ZSBwb3J0YWJpbGl0eSBpc3N1ZXMKaWYgeW91IHdyaXRlIGEgcXVlcnkgbGlrZSB0aGlzOjwvcD4KPHByZT48Y29kZT4vLyB3b3JrcyBvbiBNeVNRTCBhbmQgU3FsaXRlMywgYnV0IG5vdCB3aXRoIFBvc3RncmVzcWwgZXJyIDo9CmRibWFwLlNlbGVjdE9uZSgmYW1wO3ZhbCwgJiMzNDtzZWxlY3QgKiBmcm9tIGZvbyB3aGVyZSBpZCA9ID8mIzM0OywgMzApCjwvY29kZT48L3ByZT4KPHA+SW4gPGNvZGU+U2VsZWN0PC9jb2RlPiBhbmQgPGNvZGU+U2VsZWN0T25lPC9jb2RlPiB5b3UgY2FuIHVzZSBuYW1lZCBwYXJhbWV0ZXJzIHRvIHdvcmsKYXJvdW5kIHRoaXMuICBUaGUgZm9sbG93aW5nIGlzIHBvcnRhYmxlOjwvcD4KPHByZT48Y29kZT5lcnIgOj0gZGJtYXAuU2VsZWN0T25lKCZhbXA7dmFsLCAmIzM0O3NlbGVjdCAqIGZyb20gZm9vIHdoZXJlIGlkID0gOmlkJiMzNDssCm1hcFtzdHJpbmddaW50ZXJmYWNle30geyAmIzM0O2lkJiMzNDs6IDMwfSkKPC9jb2RlPjwvcHJlPgo8cD5BZGRpdGlvbmFsbHksIHdoZW4gdXNpbmcgUG9zdGdyZXMgYXMgeW91ciBkYXRhYmFzZSwgeW91IHNob3VsZCB1dGlsaXplCjxjb2RlPiQxPC9jb2RlPiBpbnN0ZWFkIG9mIDxjb2RlPj88L2NvZGU+IHBsYWNlaG9sZGVycyBhcyB1dGlsaXppbmcgPGNvZGU+PzwvY29kZT4gcGxhY2Vob2xkZXJzIHdoZW4KcXVlcnlpbmcgUG9zdGdyZXMgd2lsbCByZXN1bHQgaW4gPGNvZGU+cHE6IG9wZXJhdG9yIGRvZXMgbm90IGV4aXN0PC9jb2RlPgplcnJvcnMuIEFsdGVybmF0aXZlbHksIHVzZSA8Y29kZT5kYk1hcC5EaWFsZWN0LkJpbmRWYXIodmFySWR4KTwvY29kZT4gdG8gZ2V0IHRoZQpwcm9wZXIgdmFyaWFibGUgYmluZGluZyBmb3IgeW91ciBkaWFsZWN0LjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS10aW1lLXRpbWUtYW5kLXRpbWUtem9uZXMiPnRpbWUuVGltZSBhbmQgdGltZSB6b25lczwvaDU+CjxwPmdvcnAgd2lsbCBwYXNzIDxjb2RlPnRpbWUuVGltZTwvY29kZT4gZmllbGRzIHRocm91Z2ggdG8gdGhlIDxjb2RlPmRhdGFiYXNlL3NxbDwvY29kZT4KZHJpdmVyLCBidXQgbm90ZSB0aGF0IHRoZSBiZWhhdmlvciBvZiB0aGlzIHR5cGUgdmFyaWVzIGFjcm9zcyBkYXRhYmFzZQpkcml2ZXJzLjwvcD4KPHA+TXlTUUwgdXNlcnMgc2hvdWxkIGJlIGVzcGVjaWFsbHkgY2F1dGlvdXMuICBTZWU6CjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS96aXV0ZWsvbXlteXNxbC9wdWxsLzc3IiByZWw9Im5vZm9sbG93Ij5odHRwczovL2dpdGh1Yi5jb20veml1dGVrL215bXlzcWwvcHVsbC83NzwvYT48L3A+CjxwPlRvIGF2b2lkIGFueSBwb3RlbnRpYWwgaXNzdWVzIHdpdGggdGltZXpvbmUvRFNULCBjb25zaWRlcjo8L3A+Cjx1bD4KPGxpPlVzaW5nIGFuIGludGVnZXIgZmllbGQgZm9yIHRpbWUgZGF0YSBhbmQgc3RvcmluZyBVTklYIHRpbWUuPC9saT4KPGxpPlVzaW5nIGEgY3VzdG9tIHRpbWUgdHlwZSB0aGF0IGltcGxlbWVudHMgc29tZSBTUUwgdHlwZXM6Cjx1bD4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvZGF0YWJhc2Uvc3FsLyNTY2FubmVyIiByZWw9Im5vZm9sbG93Ij48Y29kZT4mIzM0O2RhdGFiYXNlL3NxbCYjMzQ7LlNjYW5uZXI8L2NvZGU+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvcGtnL2RhdGFiYXNlL3NxbC9kcml2ZXIvI1ZhbHVlciIgcmVsPSJub2ZvbGxvdyI+PGNvZGU+JiMzNDtkYXRhYmFzZS9zcWwvZHJpdmVyJiMzNDsuVmFsdWVyPC9jb2RlPjwvYT48L2xpPgo8L3VsPgo8L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLXJ1bm5pbmctdGhlLXRlc3RzIj5SdW5uaW5nIHRoZSB0ZXN0czwvaDQ+CjxwPlRoZSBpbmNsdWRlZCB0ZXN0cyBtYXkgYmUgcnVuIGFnYWluc3QgTXlTUUwsIFBvc3RncmVzcWwsIG9yIHNxbGl0ZTMuCllvdSBtdXN0IHNldCB0d28gZW52aXJvbm1lbnQgdmFyaWFibGVzIHNvIHRoZSB0ZXN0IGNvZGUga25vd3Mgd2hpY2gKZHJpdmVyIHRvIHVzZSwgYW5kIGhvdyB0byBjb25uZWN0IHRvIHlvdXIgZGF0YWJhc2UuPC9wPgo8cHJlPjxjb2RlPiMgTXlTUUwgZXhhbXBsZToKZXhwb3J0IEdPUlBfVEVTVF9EU049Z29teXNxbF90ZXN0L2dvbXlzcWxfdGVzdC9hYmMxMjMKZXhwb3J0IEdPUlBfVEVTVF9ESUFMRUNUPW15c3FsCgojIHJ1biB0aGUgdGVzdHMKZ28gdGVzdAoKIyBydW4gdGhlIHRlc3RzIGFuZCBiZW5jaG1hcmtzCmdvIHRlc3QgLWJlbmNoPSYjMzQ7QmVuY2gmIzM0OyAtYmVuY2h0aW1lIDEwCjwvY29kZT48L3ByZT4KPHA+VmFsaWQgPGNvZGU+R09SUF9URVNUX0RJQUxFQ1Q8L2NvZGU+IHZhbHVlcyBhcmU6ICYjMzQ7bXlzcWwmIzM0Oyhmb3IgbXlteXNxbCksCiYjMzQ7Z29teXNxbCYjMzQ7KGZvciBnby1zcWwtZHJpdmVyKSwgJiMzNDtwb3N0Z3JlcyYjMzQ7LCAmIzM0O3NxbGl0ZSYjMzQ7IFNlZSB0aGUKPGNvZGU+dGVzdF9hbGwuc2g8L2NvZGU+IHNjcmlwdCBmb3IgZXhhbXBsZXMgb2YgYWxsIDMgZGF0YWJhc2VzLiAgVGhpcyBpcyB0aGUKc2NyaXB0IEkgcnVuIGxvY2FsbHkgdG8gdGVzdCB0aGUgbGlicmFyeS48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtcGVyZm9ybWFuY2UiPlBlcmZvcm1hbmNlPC9oND4KPHA+Z29ycCB1c2VzIHJlZmxlY3Rpb24gdG8gY29uc3RydWN0IFNRTCBxdWVyaWVzIGFuZCBiaW5kIHBhcmFtZXRlcnMuClNlZSB0aGUgQmVuY2htYXJrTmF0aXZlQ3J1ZCB2cyBCZW5jaG1hcmtHb3JwQ3J1ZCBpbiBnb3JwX3Rlc3QuZ28gZm9yIGEKc2ltcGxlIHBlcmYgdGVzdC4gIE9uIG15IE1hY0Jvb2sgUHJvIGdvcnAgaXMgYWJvdXQgMi0zJSBzbG93ZXIgdGhhbgpoYW5kIHdyaXR0ZW4gU1FMLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1jb250cmlidXRvcnMiPkNvbnRyaWJ1dG9yczwvaDQ+Cjx1bD4KPGxpPm1hdHRoaWFzLW1hcmd1c2ggLSBjb2x1bW4gYWxpYXNpbmcgdmlhIHRhZ3M8L2xpPgo8bGk+Um9iIEZpZ3VlaXJlZG8gLSBAcm9iZmlnPC9saT4KPGxpPlF1aW5uIFNsYWNrIC0gQHNxczwvbGk+CjwvdWw+CjwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iVW5pdFJlYWRtZS1leHBhbmRMaW5rIGpzLXJlYWRtZUV4cGFuZCIKICAgICAgICAgIGRhdGEtdGVzdC1pZD0icmVhZG1lLWV4cGFuZCIgZGF0YS1ndG1jPSJyZWFkbWUgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iRXhwYW5kIFJlYWRtZSI+RXhwYW5kIOKWvjwvYnV0dG9uPgogICAgICA8YnV0dG9uIGNsYXNzPSJVbml0UmVhZG1lLWNvbGxhcHNlTGluayBqcy1yZWFkbWVDb2xsYXBzZSIKICAgICAgICAgIGRhdGEtdGVzdC1pZD0icmVhZG1lLWNvbGxhcHNlIiBkYXRhLWd0bWM9InJlYWRtZSBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJFeHBhbmQgUmVhZG1lIj5Db2xsYXBzZSDilrQ8L2J1dHRvbj4KICAgIAogIDwvZGl2PgoKICAgICAgCiAgICAgIAogICAgICAgIAogICAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdERvYyI+CiAgICA8aDIgY2xhc3M9IlVuaXREb2MtdGl0bGUiIGlkPSJzZWN0aW9uLWRvY3VtZW50YXRpb24iPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb2RlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgRG9jdW1lbnRhdGlvbgogICAgICA8YSBjbGFzcz0iVW5pdERvYy1pZExpbmsiIGhyZWY9IiNzZWN0aW9uLWRvY3VtZW50YXRpb24iPsK2PC9hPgogICAgPC9oMj4KICAgIAogIAogICAgCiAgCgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbiBqcy1kb2N1bWVudGF0aW9uIj4KICAgICAgCiAgICAgICAgCgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWNvbnRlbnQganMtZG9jQ29udGVudCI+IDxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLW92ZXJ2aWV3Ij4KICAgIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctb3ZlcnZpZXciIGNsYXNzPSJEb2N1bWVudGF0aW9uLW92ZXJ2aWV3SGVhZGVyIj5PdmVydmlldyA8YSBocmVmPSIjcGtnLW92ZXJ2aWV3Ij7CtjwvYT48L2gzPgoKPHA+UGFja2FnZSBnb3JwIHByb3ZpZGVzIGEgc2ltcGxlIHdheSB0byBtYXJzaGFsIEdvIHN0cnVjdHMgdG8gYW5kIGZyb20KU1FMIGRhdGFiYXNlcy4gIEl0IHVzZXMgdGhlIGRhdGFiYXNlL3NxbCBwYWNrYWdlLCBhbmQgc2hvdWxkIHdvcmsgd2l0aCBhbnkKY29tcGxpYW50IGRhdGFiYXNlL3NxbCBkcml2ZXIuCjwvcD48cD5Tb3VyY2UgY29kZSBhbmQgcHJvamVjdCBob21lOgo8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwIj5odHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwPC9hPgo8L3A+Cjwvc2VjdGlvbj48c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleCI+CiAgICA8aDMgaWQ9InBrZy1pbmRleCIgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhIZWFkZXIiPkluZGV4IDxhIGhyZWY9IiNwa2ctaW5kZXgiPsK2PC9hPjwvaDM+Cgo8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhMaXN0Ij4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNOb25GYXRhbEVycm9yIj5mdW5jIE5vbkZhdGFsRXJyb3IoZXJyIGVycm9yKSBib29sPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjU2VsZWN0RmxvYXQiPmZ1bmMgU2VsZWN0RmxvYXQoZSBTcWxFeGVjdXRvciwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoZmxvYXQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjU2VsZWN0SW50Ij5mdW5jIFNlbGVjdEludChlIFNxbEV4ZWN1dG9yLCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjU2VsZWN0TnVsbEZsb2F0Ij5mdW5jIFNlbGVjdE51bGxGbG9hdChlIFNxbEV4ZWN1dG9yLCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEZsb2F0NjQsIGVycm9yKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE51bGxJbnQiPmZ1bmMgU2VsZWN0TnVsbEludChlIFNxbEV4ZWN1dG9yLCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEludDY0LCBlcnJvcik8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNTZWxlY3ROdWxsU3RyIj5mdW5jIFNlbGVjdE51bGxTdHIoZSBTcWxFeGVjdXRvciwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxTdHJpbmcsIGVycm9yKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE9uZSI+ZnVuYyBTZWxlY3RPbmUobSAqRGJNYXAsIGUgU3FsRXhlY3V0b3IsIGhvbGRlciBpbnRlcmZhY2V7fSwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSBlcnJvcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1NlbGVjdFN0ciI+ZnVuYyBTZWxlY3RTdHIoZSBTcWxFeGVjdXRvciwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3RyaW5nLCBlcnJvcik8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjQ29sdW1uRmlsdGVyIj50eXBlIENvbHVtbkZpbHRlcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAiPnR5cGUgQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5SZW5hbWUiPmZ1bmMgKGMgKkNvbHVtbk1hcCkgUmVuYW1lKGNvbG5hbWUgc3RyaW5nKSAqQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRNYXhTaXplIj5mdW5jIChjICpDb2x1bW5NYXApIFNldE1heFNpemUoc2l6ZSBpbnQpICpDb2x1bW5NYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ29sdW1uTWFwLlNldE5vdE51bGwiPmZ1bmMgKGMgKkNvbHVtbk1hcCkgU2V0Tm90TnVsbChubiBib29sKSAqQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRUcmFuc2llbnQiPmZ1bmMgKGMgKkNvbHVtbk1hcCkgU2V0VHJhbnNpZW50KGIgYm9vbCkgKkNvbHVtbk1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuU2V0VW5pcXVlIj5mdW5jIChjICpDb2x1bW5NYXApIFNldFVuaXF1ZShiIGJvb2wpICpDb2x1bW5NYXA8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDdXN0b21TY2FubmVyIj50eXBlIEN1c3RvbVNjYW5uZXI8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ3VzdG9tU2Nhbm5lci5CaW5kIj5mdW5jIChtZSBDdXN0b21TY2FubmVyKSBCaW5kKCkgZXJyb3I8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcCI+dHlwZSBEYk1hcDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5BZGRUYWJsZSI+ZnVuYyAobSAqRGJNYXApIEFkZFRhYmxlKGkgaW50ZXJmYWNle30pICpUYWJsZU1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5BZGRUYWJsZUR5bmFtaWMiPmZ1bmMgKG0gKkRiTWFwKSBBZGRUYWJsZUR5bmFtaWMoaW5wIER5bmFtaWNUYWJsZSwgc2NoZW1hIHN0cmluZykgKlRhYmxlTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkFkZFRhYmxlV2l0aE5hbWUiPmZ1bmMgKG0gKkRiTWFwKSBBZGRUYWJsZVdpdGhOYW1lKGkgaW50ZXJmYWNle30sIG5hbWUgc3RyaW5nKSAqVGFibGVNYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYSI+ZnVuYyAobSAqRGJNYXApIEFkZFRhYmxlV2l0aE5hbWVBbmRTY2hlbWEoaSBpbnRlcmZhY2V7fSwgc2NoZW1hIHN0cmluZywgbmFtZSBzdHJpbmcpICpUYWJsZU1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5CZWdpbiI+ZnVuYyAobSAqRGJNYXApIEJlZ2luKCkgKCpUcmFuc2FjdGlvbiwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkNyZWF0ZUluZGV4Ij5mdW5jIChtICpEYk1hcCkgQ3JlYXRlSW5kZXgoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5DcmVhdGVUYWJsZXMiPmZ1bmMgKG0gKkRiTWFwKSBDcmVhdGVUYWJsZXMoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5DcmVhdGVUYWJsZXNJZk5vdEV4aXN0cyI+ZnVuYyAobSAqRGJNYXApIENyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRGVsZXRlIj5mdW5jIChtICpEYk1hcCkgRGVsZXRlKGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkRyb3BUYWJsZSI+ZnVuYyAobSAqRGJNYXApIERyb3BUYWJsZSh0YWJsZSBpbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRHJvcFRhYmxlSWZFeGlzdHMiPmZ1bmMgKG0gKkRiTWFwKSBEcm9wVGFibGVJZkV4aXN0cyh0YWJsZSBpbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRHJvcFRhYmxlcyI+ZnVuYyAobSAqRGJNYXApIERyb3BUYWJsZXMoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5Ecm9wVGFibGVzSWZFeGlzdHMiPmZ1bmMgKG0gKkRiTWFwKSBEcm9wVGFibGVzSWZFeGlzdHMoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5EeW5hbWljVGFibGVGb3IiPmZ1bmMgKG0gKkRiTWFwKSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lIHN0cmluZywgY2hlY2tQSyBib29sKSAoKlRhYmxlTWFwLCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRXhlYyI+ZnVuYyAobSAqRGJNYXApIEV4ZWMocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLlJlc3VsdCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkdldCI+ZnVuYyAobSAqRGJNYXApIEdldChpIGludGVyZmFjZXt9LCBrZXlzIC4uLmludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5JbnNlcnQiPmZ1bmMgKG0gKkRiTWFwKSBJbnNlcnQobGlzdCAuLi5pbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUHJlcGFyZSI+ZnVuYyAobSAqRGJNYXApIFByZXBhcmUocXVlcnkgc3RyaW5nKSAoKnNxbC5TdG10LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUXVlcnkiPmZ1bmMgKG0gKkRiTWFwKSBRdWVyeShxIHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKCpzcWwuUm93cywgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlF1ZXJ5Um93Ij5mdW5jIChtICpEYk1hcCkgUXVlcnlSb3cocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAqc3FsLlJvdzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3QiPmZ1bmMgKG0gKkRiTWFwKSBTZWxlY3QoaSBpbnRlcmZhY2V7fSwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoW11pbnRlcmZhY2V7fSwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdEZsb2F0Ij5mdW5jIChtICpEYk1hcCkgU2VsZWN0RmxvYXQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoZmxvYXQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdEludCI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdEludChxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdE51bGxGbG9hdCI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdE51bGxGbG9hdChxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEZsb2F0NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsSW50Ij5mdW5jIChtICpEYk1hcCkgU2VsZWN0TnVsbEludChxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEludDY0LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0TnVsbFN0ciI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdE51bGxTdHIocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxTdHJpbmcsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3RPbmUiPmZ1bmMgKG0gKkRiTWFwKSBTZWxlY3RPbmUoaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdFN0ciI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdFN0cihxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzdHJpbmcsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5UYWJsZUZvciI+ZnVuYyAobSAqRGJNYXApIFRhYmxlRm9yKHQgcmVmbGVjdC5UeXBlLCBjaGVja1BLIGJvb2wpICgqVGFibGVNYXAsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5UcmFjZU9mZiI+ZnVuYyAobSAqRGJNYXApIFRyYWNlT2ZmKCk8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJhY2VPbiI+ZnVuYyAobSAqRGJNYXApIFRyYWNlT24ocHJlZml4IHN0cmluZywgbG9nZ2VyIExvZ2dlcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJ1bmNhdGVUYWJsZXMiPmZ1bmMgKG0gKkRiTWFwKSBUcnVuY2F0ZVRhYmxlcygpIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlVwZGF0ZSI+ZnVuYyAobSAqRGJNYXApIFVwZGF0ZShsaXN0IC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5VcGRhdGVDb2x1bW5zIj5mdW5jIChtICpEYk1hcCkgVXBkYXRlQ29sdW1ucyhmaWx0ZXIgQ29sdW1uRmlsdGVyLCBsaXN0IC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5XaXRoQ29udGV4dCI+ZnVuYyAobSAqRGJNYXApIFdpdGhDb250ZXh0KGN0eCBjb250ZXh0LkNvbnRleHQpIFNxbEV4ZWN1dG9yPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjRGlhbGVjdCI+dHlwZSBEaWFsZWN0PC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0R5bmFtaWNUYWJsZSI+dHlwZSBEeW5hbWljVGFibGU8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjR29ycExvZ2dlciI+dHlwZSBHb3JwTG9nZ2VyPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0hhc1Bvc3REZWxldGUiPnR5cGUgSGFzUG9zdERlbGV0ZTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNIYXNQb3N0R2V0Ij50eXBlIEhhc1Bvc3RHZXQ8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjSGFzUG9zdEluc2VydCI+dHlwZSBIYXNQb3N0SW5zZXJ0PC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0hhc1Bvc3RVcGRhdGUiPnR5cGUgSGFzUG9zdFVwZGF0ZTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNIYXNQcmVEZWxldGUiPnR5cGUgSGFzUHJlRGVsZXRlPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0hhc1ByZUluc2VydCI+dHlwZSBIYXNQcmVJbnNlcnQ8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjSGFzUHJlVXBkYXRlIj50eXBlIEhhc1ByZVVwZGF0ZTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNJbmRleE1hcCI+dHlwZSBJbmRleE1hcDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNJbmRleE1hcC5SZW5hbWUiPmZ1bmMgKGlkeCAqSW5kZXhNYXApIFJlbmFtZShpbmRuYW1lIHN0cmluZykgKkluZGV4TWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0luZGV4TWFwLlNldEluZGV4VHlwZSI+ZnVuYyAoaWR4ICpJbmRleE1hcCkgU2V0SW5kZXhUeXBlKGluZHR5cGUgc3RyaW5nKSAqSW5kZXhNYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuU2V0VW5pcXVlIj5mdW5jIChpZHggKkluZGV4TWFwKSBTZXRVbmlxdWUoYiBib29sKSAqSW5kZXhNYXA8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNJbnRlZ2VyQXV0b0luY3JJbnNlcnRlciI+dHlwZSBJbnRlZ2VyQXV0b0luY3JJbnNlcnRlcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNMb2dnZXIiPnR5cGUgTG9nZ2VyPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+dHlwZSBNeVNRTERpYWxlY3Q8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj5mdW5jIChkIE15U1FMRGlhbGVjdCkgQXV0b0luY3JCaW5kVmFsdWUoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij5mdW5jIChkIE15U1FMRGlhbGVjdCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICpDb2x1bW5NYXApIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQXV0b0luY3JTdHIiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBBdXRvSW5jclN0cigpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQmluZFZhciI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIEJpbmRWYXIoaSBpbnQpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBDcmVhdGVJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij5mdW5jIChkIE15U1FMRGlhbGVjdCkgRHJvcEluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSWZUYWJsZUV4aXN0cyI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSW5zZXJ0QXV0b0luY3IiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBJbnNlcnRBdXRvSW5jcihleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCBwYXJhbXMgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5RdWVyeVN1ZmZpeCI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIFF1ZXJ5U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZUZpZWxkIj5mdW5jIChkIE15U1FMRGlhbGVjdCkgUXVvdGVGaWVsZChmIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij5mdW5jIChkIE15U1FMRGlhbGVjdCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgc3RyaW5nLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuU2xlZXBDbGF1c2UiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBTbGVlcENsYXVzZShzIHRpbWUuRHVyYXRpb24pIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuVG9TcWxUeXBlIj5mdW5jIChkIE15U1FMRGlhbGVjdCkgVG9TcWxUeXBlKHZhbCByZWZsZWN0LlR5cGUsIG1heHNpemUgaW50LCBpc0F1dG9JbmNyIGJvb2wpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBUcnVuY2F0ZUNsYXVzZSgpIHN0cmluZzwvYT48L2xpPgo8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI05vRmllbGRJblR5cGVFcnJvciI+dHlwZSBOb0ZpZWxkSW5UeXBlRXJyb3I8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIj5mdW5jIChlcnIgKk5vRmllbGRJblR5cGVFcnJvcikgRXJyb3IoKSBzdHJpbmc8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNOdWxsVGltZSI+dHlwZSBOdWxsVGltZTwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNOdWxsVGltZS5TY2FuIj5mdW5jIChudCAqTnVsbFRpbWUpIFNjYW4odmFsdWUgaW50ZXJmYWNle30pIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI051bGxUaW1lLlZhbHVlIj5mdW5jIChudCBOdWxsVGltZSkgVmFsdWUoKSAoZHJpdmVyLlZhbHVlLCBlcnJvcik8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNPcHRpbWlzdGljTG9ja0Vycm9yIj50eXBlIE9wdGltaXN0aWNMb2NrRXJyb3I8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3B0aW1pc3RpY0xvY2tFcnJvci5FcnJvciI+ZnVuYyAoZSBPcHRpbWlzdGljTG9ja0Vycm9yKSBFcnJvcigpIHN0cmluZzwvYT48L2xpPgo8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPnR5cGUgT3JhY2xlRGlhbGVjdDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIEF1dG9JbmNyQmluZFZhbHVlKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPmZ1bmMgKGQgT3JhY2xlRGlhbGVjdCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICpDb2x1bW5NYXApIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNyU3RyIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIEF1dG9JbmNyU3RyKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQmluZFZhciI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBCaW5kVmFyKGkgaW50KSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBDcmVhdGVJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIENyZWF0ZVRhYmxlU3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIERyb3BJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LklmVGFibGVFeGlzdHMiPmZ1bmMgKGQgT3JhY2xlRGlhbGVjdCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5JbnNlcnRRdWVyeVRvVGFyZ2V0Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIEluc2VydFF1ZXJ5VG9UYXJnZXQoZXhlYyBTcWxFeGVjdXRvciwgaW5zZXJ0U3FsLCBpZFNxbCBzdHJpbmcsIHRhcmdldCBpbnRlcmZhY2V7fSwgLi4uKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlF1ZXJ5U3VmZml4Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIFF1ZXJ5U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVGaWVsZCI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBRdW90ZUZpZWxkKGYgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIHN0cmluZywgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5Ub1NxbFR5cGUiPmZ1bmMgKGQgT3JhY2xlRGlhbGVjdCkgVG9TcWxUeXBlKHZhbCByZWZsZWN0LlR5cGUsIG1heHNpemUgaW50LCBpc0F1dG9JbmNyIGJvb2wpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIFRydW5jYXRlQ2xhdXNlKCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlU3RyaW5nIj50eXBlIE9yYWNsZVN0cmluZzwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVTdHJpbmcuU2NhbiI+ZnVuYyAob3MgKk9yYWNsZVN0cmluZykgU2Nhbih2YWx1ZSBpbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlU3RyaW5nLlZhbHVlIj5mdW5jIChvcyBPcmFjbGVTdHJpbmcpIFZhbHVlKCkgKGRyaXZlci5WYWx1ZSwgZXJyb3IpPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij50eXBlIFBvc3RncmVzRGlhbGVjdDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBBdXRvSW5jckJpbmRWYWx1ZSgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKkNvbHVtbk1hcCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5BdXRvSW5jclN0ciI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIEF1dG9JbmNyU3RyKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5CaW5kVmFyIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgQmluZFZhcihpIGludCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIENyZWF0ZUluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIENyZWF0ZVRhYmxlU3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBEcm9wSW5kZXhTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JZlRhYmxlRXhpc3RzIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0Ij5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1ZXJ5U3VmZml4Ij5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgUXVlcnlTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlRmllbGQiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBRdW90ZUZpZWxkKGYgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSBzdHJpbmcsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5TbGVlcENsYXVzZSI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIFNsZWVwQ2xhdXNlKHMgdGltZS5EdXJhdGlvbikgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5Ub1NxbFR5cGUiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBUb1NxbFR5cGUodmFsIHJlZmxlY3QuVHlwZSwgbWF4c2l6ZSBpbnQsIGlzQXV0b0luY3IgYm9vbCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIFRydW5jYXRlQ2xhdXNlKCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+dHlwZSBTbm93Zmxha2VEaWFsZWN0PC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgQXV0b0luY3JCaW5kVmFsdWUoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKkNvbHVtbk1hcCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JTdHIiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgQXV0b0luY3JTdHIoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5CaW5kVmFyIj5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIEJpbmRWYXIoaSBpbnQpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkNyZWF0ZUluZGV4U3VmZml4Ij5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIENyZWF0ZUluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgQ3JlYXRlVGFibGVTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgRHJvcEluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZUYWJsZUV4aXN0cyI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIj5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5RdWVyeVN1ZmZpeCI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBRdWVyeVN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LlF1b3RlRmllbGQiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgUXVvdGVGaWVsZChmIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSBzdHJpbmcsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuVG9TcWxUeXBlIj5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIFRvU3FsVHlwZSh2YWwgcmVmbGVjdC5UeXBlLCBtYXhzaXplIGludCwgaXNBdXRvSW5jciBib29sKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBUcnVuY2F0ZUNsYXVzZSgpIHN0cmluZzwvYT48L2xpPgo8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj50eXBlIFNxbEV4ZWN1dG9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPnR5cGUgU3FsU2VydmVyRGlhbGVjdDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIEF1dG9JbmNyQmluZFZhbHVlKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICpDb2x1bW5NYXApIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyU3RyIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIEF1dG9JbmNyU3RyKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQmluZFZhciI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBCaW5kVmFyKGkgaW50KSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBDcmVhdGVJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIENyZWF0ZVRhYmxlU3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIERyb3BJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVFeGlzdHMiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JbnNlcnRBdXRvSW5jciI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBJbnNlcnRBdXRvSW5jcihleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCBwYXJhbXMgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuUXVlcnlTdWZmaXgiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgUXVlcnlTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5RdW90ZUZpZWxkIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIFF1b3RlRmllbGQoZiBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgc3RyaW5nLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlRvU3FsVHlwZSI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBUb1NxbFR5cGUodmFsIHJlZmxlY3QuVHlwZSwgbWF4c2l6ZSBpbnQsIGlzQXV0b0luY3IgYm9vbCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgVHJ1bmNhdGVDbGF1c2UoKSBzdHJpbmc8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNTcWxUeXBlciI+dHlwZSBTcWxUeXBlcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij50eXBlIFNxbGl0ZURpYWxlY3Q8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBBdXRvSW5jckJpbmRWYWx1ZSgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqQ29sdW1uTWFwKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jclN0ciI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBBdXRvSW5jclN0cigpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkJpbmRWYXIiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgQmluZFZhcihpIGludCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBEcm9wSW5kZXhTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIj5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSW5zZXJ0QXV0b0luY3IiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgSW5zZXJ0QXV0b0luY3IoZXhlYyBTcWxFeGVjdXRvciwgaW5zZXJ0U3FsIHN0cmluZywgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1ZXJ5U3VmZml4Ij5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIFF1ZXJ5U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuUXVvdGVGaWVsZCI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBRdW90ZUZpZWxkKGYgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIHN0cmluZywgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5Ub1NxbFR5cGUiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgVG9TcWxUeXBlKHZhbCByZWZsZWN0LlR5cGUsIG1heHNpemUgaW50LCBpc0F1dG9JbmNyIGJvb2wpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIj5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIFRydW5jYXRlQ2xhdXNlKCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAiPnR5cGUgVGFibGVNYXA8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuQWRkSW5kZXgiPmZ1bmMgKHQgKlRhYmxlTWFwKSBBZGRJbmRleChuYW1lIHN0cmluZywgaWR4dHlwZSBzdHJpbmcsIGNvbHVtbnMgW11zdHJpbmcpICpJbmRleE1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5Db2xNYXAiPmZ1bmMgKHQgKlRhYmxlTWFwKSBDb2xNYXAoZmllbGQgc3RyaW5nKSAqQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLkRyb3BJbmRleCI+ZnVuYyAodCAqVGFibGVNYXApIERyb3BJbmRleChuYW1lIHN0cmluZykgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuSWR4TWFwIj5mdW5jICh0ICpUYWJsZU1hcCkgSWR4TWFwKGZpZWxkIHN0cmluZykgKkluZGV4TWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlJlc2V0U3FsIj5mdW5jICh0ICpUYWJsZU1hcCkgUmVzZXRTcWwoKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5TZXRLZXlzIj5mdW5jICh0ICpUYWJsZU1hcCkgU2V0S2V5cyhpc0F1dG9JbmNyIGJvb2wsIGZpZWxkTmFtZXMgLi4uc3RyaW5nKSAqVGFibGVNYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuU2V0VW5pcXVlVG9nZXRoZXIiPmZ1bmMgKHQgKlRhYmxlTWFwKSBTZXRVbmlxdWVUb2dldGhlcihmaWVsZE5hbWVzIC4uLnN0cmluZykgKlRhYmxlTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlNldFZlcnNpb25Db2wiPmZ1bmMgKHQgKlRhYmxlTWFwKSBTZXRWZXJzaW9uQ29sKGZpZWxkIHN0cmluZykgKkNvbHVtbk1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5TcWxGb3JDcmVhdGUiPmZ1bmMgKHQgKlRhYmxlTWFwKSBTcWxGb3JDcmVhdGUoaWZOb3RFeGlzdHMgYm9vbCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjVGFyZ2V0UXVlcnlJbnNlcnRlciI+dHlwZSBUYXJnZXRRdWVyeUluc2VydGVyPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1RhcmdldGVkQXV0b0luY3JJbnNlcnRlciI+dHlwZSBUYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXI8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24iPnR5cGUgVHJhbnNhY3Rpb248L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uQ29tbWl0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgQ29tbWl0KCkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uRGVsZXRlIj5mdW5jICh0ICpUcmFuc2FjdGlvbikgRGVsZXRlKGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkV4ZWMiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBFeGVjKHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKHNxbC5SZXN1bHQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5HZXQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBHZXQoaSBpbnRlcmZhY2V7fSwga2V5cyAuLi5pbnRlcmZhY2V7fSkgKGludGVyZmFjZXt9LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uSW5zZXJ0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgSW5zZXJ0KGxpc3QgLi4uaW50ZXJmYWNle30pIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlByZXBhcmUiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBQcmVwYXJlKHF1ZXJ5IHN0cmluZykgKCpzcWwuU3RtdCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlF1ZXJ5Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgUXVlcnkocSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqc3FsLlJvd3MsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5RdWVyeVJvdyI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFF1ZXJ5Um93KHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKnNxbC5Sb3c8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUmVsZWFzZVNhdmVwb2ludCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFJlbGVhc2VTYXZlcG9pbnQoc2F2ZXBvaW50IHN0cmluZykgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2siPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBSb2xsYmFjaygpIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlJvbGxiYWNrVG9TYXZlcG9pbnQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBSb2xsYmFja1RvU2F2ZXBvaW50KHNhdmVwb2ludCBzdHJpbmcpIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNhdmVwb2ludCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFNhdmVwb2ludChuYW1lIHN0cmluZykgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgU2VsZWN0KGkgaW50ZXJmYWNle30sIHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKFtdaW50ZXJmYWNle30sIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RGbG9hdCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFNlbGVjdEZsb2F0KHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKGZsb2F0NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RJbnQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3RJbnQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3ROdWxsRmxvYXQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3ROdWxsRmxvYXQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxGbG9hdDY0LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0TnVsbEludCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFNlbGVjdE51bGxJbnQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxJbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxTdHIiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3ROdWxsU3RyKHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKHNxbC5OdWxsU3RyaW5nLCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0T25lIj5mdW5jICh0ICpUcmFuc2FjdGlvbikgU2VsZWN0T25lKGhvbGRlciBpbnRlcmZhY2V7fSwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RTdHIiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3RTdHIocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3RyaW5nLCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uVXBkYXRlIj5mdW5jICh0ICpUcmFuc2FjdGlvbikgVXBkYXRlKGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlVwZGF0ZUNvbHVtbnMiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBVcGRhdGVDb2x1bW5zKGZpbHRlciBDb2x1bW5GaWx0ZXIsIGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLldpdGhDb250ZXh0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgV2l0aENvbnRleHQoY3R4IGNvbnRleHQuQ29udGV4dCkgU3FsRXhlY3V0b3I8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNUeXBlQ29udmVydGVyIj50eXBlIFR5cGVDb252ZXJ0ZXI8L2E+PC9saT4KPC91bD4KPC9zZWN0aW9uPjxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctY29uc3RhbnRzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb25zdGFudHNIZWFkZXIiPkNvbnN0YW50cyA8YSBocmVmPSIjcGtnLWNvbnN0YW50cyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctdmFyaWFibGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXNIZWFkZXIiPlZhcmlhYmxlcyA8YSBocmVmPSIjcGtnLXZhcmlhYmxlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdmFyaWFibGVzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctZnVuY3Rpb25zIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnNIZWFkZXIiPkZ1bmN0aW9ucyA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25zIj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTm9uRmF0YWxFcnJvciIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9lcnJvcnMuZ28jTDI0Ij5Ob25GYXRhbEVycm9yPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOb25GYXRhbEVycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTm9uRmF0YWxFcnJvcihlcnIgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPnJldHVybnMgdHJ1ZSBpZiB0aGUgZXJyb3IgaXMgbm9uLWZhdGFsIChpZSwgd2Ugc2hvdWxkbiYjMzk7dCBpbW1lZGlhdGVseSByZXR1cm4pCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTZWxlY3RGbG9hdCIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9zZWxlY3QuZ28jTDQwIj5TZWxlY3RGbG9hdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0RmxvYXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBTZWxlY3RGbG9hdChlIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNmbG9hdDY0Ij5mbG9hdDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdEZsb2F0IGV4ZWN1dGVzIHRoZSBnaXZlbiBxdWVyeSwgd2hpY2ggc2hvdWxkIGJlIGEgU0VMRUNUIHN0YXRlbWVudCBmb3IgYSBzaW5nbGUKZmxvYXQgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gSWYgbm8gcm93cyBhcmUKZm91bmQsIHplcm8gaXMgcmV0dXJuZWQuCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTZWxlY3RJbnQiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvc2VsZWN0LmdvI0wxNiI+U2VsZWN0SW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTZWxlY3RJbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBTZWxlY3RJbnQoZSA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgcXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdEludCBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlCmludGVnZXIgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gIElmIG5vIHJvd3MgYXJlCmZvdW5kLCB6ZXJvIGlzIHJldHVybmVkLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2VsZWN0TnVsbEZsb2F0IiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3NlbGVjdC5nbyNMNTIiPlNlbGVjdE51bGxGbG9hdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0TnVsbEZsb2F0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgU2VsZWN0TnVsbEZsb2F0KGUgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsRmxvYXQ2NCI+TnVsbEZsb2F0NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbEZsb2F0IGV4ZWN1dGVzIHRoZSBnaXZlbiBxdWVyeSwgd2hpY2ggc2hvdWxkIGJlIGEgU0VMRUNUIHN0YXRlbWVudCBmb3IgYSBzaW5nbGUKZmxvYXQgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gSWYgbm8gcm93cyBhcmUKZm91bmQsIHRoZSBlbXB0eSBzcWwuTnVsbEludDY0IHZhbHVlIGlzIHJldHVybmVkLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9zZWxlY3QuZ28jTDI4Ij5TZWxlY3ROdWxsSW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTZWxlY3ROdWxsSW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgU2VsZWN0TnVsbEludChlIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjTnVsbEludDY0Ij5OdWxsSW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbEludCBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlCmludGVnZXIgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gIElmIG5vIHJvd3MgYXJlCmZvdW5kLCB0aGUgZW1wdHkgc3FsLk51bGxJbnQ2NCB2YWx1ZSBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNlbGVjdE51bGxTdHIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvc2VsZWN0LmdvI0w3NyI+U2VsZWN0TnVsbFN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0TnVsbFN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFNlbGVjdE51bGxTdHIoZSA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgcXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI051bGxTdHJpbmciPk51bGxTdHJpbmc8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbFN0ciBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVApzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlIGNoYXIvdmFyY2hhciBjb2x1bW4sIGFuZCByZXR1cm5zIHRoZSB2YWx1ZQpvZiB0aGUgZmlyc3Qgcm93IHJldHVybmVkLiAgSWYgbm8gcm93cyBhcmUgZm91bmQsIHRoZSBlbXB0eQpzcWwuTnVsbFN0cmluZyBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNlbGVjdE9uZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9zZWxlY3QuZ28jTDkzIj5TZWxlY3RPbmU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NlbGVjdE9uZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFNlbGVjdE9uZShtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPiwgZSA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgogIDx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPgogICAgPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgogICAgICAgIDxhIGhyZWY9IiNoZHItSWZfbm9fcm93X2lzX2ZvdW5kX19hbl9lcnJvcl9fc3FsX0Vyck5vUm93c19zcGVjaWZpY2FsbHlfX3dpbGxfYmVfcmV0dXJuZWQiPklmIG5vIHJvdyBpcyBmb3VuZCwgYW4gZXJyb3IgKHNxbC5FcnJOb1Jvd3Mgc3BlY2lmaWNhbGx5KSB3aWxsIGJlIHJldHVybmVkPC9hPgogICAgICA8L2xpPgogICAgPC91bD4KPC9kaXY+CjxwPlNlbGVjdE9uZSBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnkgKHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQpCmFuZCBiaW5kcyB0aGUgcmVzdWx0IHRvIGhvbGRlciwgd2hpY2ggbXVzdCBiZSBhIHBvaW50ZXIuCjwvcD48aDQgaWQ9Imhkci1JZl9ub19yb3dfaXNfZm91bmRfX2FuX2Vycm9yX19zcWxfRXJyTm9Sb3dzX3NwZWNpZmljYWxseV9fd2lsbF9iZV9yZXR1cm5lZCI+SWYgbm8gcm93IGlzIGZvdW5kLCBhbiBlcnJvciAoc3FsLkVyck5vUm93cyBzcGVjaWZpY2FsbHkpIHdpbGwgYmUgcmV0dXJuZWQgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLUlmX25vX3Jvd19pc19mb3VuZF9fYW5fZXJyb3JfX3NxbF9FcnJOb1Jvd3Nfc3BlY2lmaWNhbGx5X193aWxsX2JlX3JldHVybmVkIj7CtjwvYT48L2g0PjxwPklmIG1vcmUgdGhhbiBvbmUgcm93IGlzIGZvdW5kLCBhbiBlcnJvciB3aWxsIGJlIHJldHVybmVkLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2VsZWN0U3RyIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3NlbGVjdC5nbyNMNjQiPlNlbGVjdFN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0U3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgU2VsZWN0U3RyKGUgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdFN0ciBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlCmNoYXIvdmFyY2hhciBjb2x1bW4sIGFuZCByZXR1cm5zIHRoZSB2YWx1ZSBvZiB0aGUgZmlyc3Qgcm93IHJldHVybmVkLiAgSWYgbm8gcm93cyBhcmUKZm91bmQsIGFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbHVtbkZpbHRlciIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGVfYmluZGluZ3MuZ28jTDMwIj5Db2x1bW5GaWx0ZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbkZpbHRlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIENvbHVtbkZpbHRlciBmdW5jKCo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+VXNlZCB0byBmaWx0ZXIgY29sdW1ucyB3aGVuIHNlbGVjdGl2ZWx5IHVwZGF0aW5nCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ29sdW1uTWFwIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9jb2x1bW4uZ28jTDEzIj5Db2x1bW5NYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIENvbHVtbk1hcCBzdHJ1Y3Qgewo8c3BhbiBpZD0iQ29sdW1uTWFwLkNvbHVtbk5hbWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gQ29sdW1uIG5hbWUgaW4gZGIgdGFibGU8L3NwYW4+Cjwvc3Bhbj4JQ29sdW1uTmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJDb2x1bW5NYXAuVHJhbnNpZW50IiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIElmIHRydWUsIHRoaXMgY29sdW1uIGlzIHNraXBwZWQgaW4gZ2VuZXJhdGVkIFNRTCBzdGF0ZW1lbnRzPC9zcGFuPgo8L3NwYW4+CVRyYW5zaWVudCA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPgoKPHNwYW4gaWQ9IkNvbHVtbk1hcC5VbmlxdWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSWYgdHJ1ZSwgJiMzNDsgdW5pcXVlJiMzNDsgaXMgYWRkZWQgdG8gY3JlYXRlIHRhYmxlIHN0YXRlbWVudHMuPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOb3QgdXNlZCBlbHNld2hlcmU8L3NwYW4+CglVbmlxdWUgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KCjxzcGFuIGlkPSJDb2x1bW5NYXAuR2VuZXJhdGVkSWRRdWVyeSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBRdWVyeSB1c2VkIGZvciBnZXR0aW5nIGdlbmVyYXRlZCBpZCBhZnRlciBpbnNlcnQ8L3NwYW4+Cjwvc3Bhbj4JR2VuZXJhdGVkSWRRdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJDb2x1bW5NYXAuTWF4U2l6ZSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBQYXNzZWQgdG8gRGlhbGVjdC5Ub1NxbFR5cGUoKSB0byBhc3Npc3QgaW4gaW5mb3JtaW5nIHRoZTwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29ycmVjdCBjb2x1bW4gdHlwZSB0byBtYXAgdG8gaW4gQ3JlYXRlVGFibGVzKCk8L3NwYW4+CglNYXhTaXplIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPgoKPHNwYW4gaWQ9IkNvbHVtbk1hcC5EZWZhdWx0VmFsdWUiIGRhdGEta2luZD0iZmllbGQiPglEZWZhdWx0VmFsdWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Db2x1bW5NYXAgcmVwcmVzZW50cyBhIG1hcHBpbmcgYmV0d2VlbiBhIEdvIHN0cnVjdCBmaWVsZCBhbmQgYSBzaW5nbGUKY29sdW1uIGluIGEgdGFibGUuClVuaXF1ZSBhbmQgTWF4U2l6ZSBvbmx5IGluZm9ybSB0aGUKQ3JlYXRlVGFibGVzKCkgZnVuY3Rpb24gYW5kIGFyZSBub3QgdXNlZCBieSBJbnNlcnQvVXBkYXRlL0RlbGV0ZS9HZXQuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbHVtbk1hcC5SZW5hbWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNDQiPlJlbmFtZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29sdW1uTWFwLlJlbmFtZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSBSZW5hbWUoY29sbmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZW5hbWUgYWxsb3dzIHlvdSB0byBzcGVjaWZ5IHRoZSBjb2x1bW4gbmFtZSBpbiB0aGUgdGFibGUKPC9wPjxwPkV4YW1wbGU6ICB0YWJsZS5Db2xNYXAoJiMzNDtVcGRhdGVkJiMzNDspLlJlbmFtZSgmIzM0O2RhdGVfdXBkYXRlZCYjMzQ7KQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ29sdW1uTWFwLlNldE1heFNpemUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNzMiPlNldE1heFNpemU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcC5TZXRNYXhTaXplIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIFNldE1heFNpemUoc2l6ZSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRNYXhTaXplIHNwZWNpZmllcyB0aGUgbWF4IGxlbmd0aCBvZiB2YWx1ZXMgb2YgdGhpcyBjb2x1bW4uIFRoaXMgaXMKcGFzc2VkIHRvIHRoZSBkaWFsZWN0LlRvU3FsVHlwZSgpIGZ1bmN0aW9uLCB3aGljaCBjYW4gdXNlIHRoZSB2YWx1ZQp0byBhbHRlciB0aGUgZ2VuZXJhdGVkIHR5cGUgZm9yICYjMzQ7Y3JlYXRlIHRhYmxlJiMzNDsgc3RhdGVtZW50cwo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ29sdW1uTWFwLlNldE5vdE51bGwiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNjUiPlNldE5vdE51bGw8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcC5TZXROb3ROdWxsIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIFNldE5vdE51bGwobm4gPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXROb3ROdWxsIGFkZHMgJiMzNDtub3QgbnVsbCYjMzQ7IHRvIHRoZSBjcmVhdGUgdGFibGUgc3RhdGVtZW50cyBmb3IgdGhpcwpjb2x1bW4sIGlmIG5uIGlzIHRydWUuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJDb2x1bW5NYXAuU2V0VHJhbnNpZW50IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpDb2x1bW5NYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9jb2x1bW4uZ28jTDUxIj5TZXRUcmFuc2llbnQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcC5TZXRUcmFuc2llbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgU2V0VHJhbnNpZW50KGIgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRUcmFuc2llbnQgYWxsb3dzIHlvdSB0byBtYXJrIHRoZSBjb2x1bW4gYXMgdHJhbnNpZW50LiBJZiB0cnVlCnRoaXMgY29sdW1uIHdpbGwgYmUgc2tpcHBlZCB3aGVuIFNRTCBzdGF0ZW1lbnRzIGFyZSBnZW5lcmF0ZWQKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbHVtbk1hcC5TZXRVbmlxdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNTgiPlNldFVuaXF1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29sdW1uTWFwLlNldFVuaXF1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSBTZXRVbmlxdWUoYiA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNldFVuaXF1ZSBhZGRzICYjMzQ7dW5pcXVlJiMzNDsgdG8gdGhlIGNyZWF0ZSB0YWJsZSBzdGF0ZW1lbnRzIGZvciB0aGlzCmNvbHVtbiwgaWYgYiBpcyB0cnVlLgo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJDdXN0b21TY2FubmVyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90YWJsZV9iaW5kaW5ncy5nbyNMMTUiPkN1c3RvbVNjYW5uZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0N1c3RvbVNjYW5uZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDdXN0b21TY2FubmVyIHN0cnVjdCB7CjxzcGFuIGlkPSJDdXN0b21TY2FubmVyLkhvbGRlciIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBBZnRlciBhIHJvdyBpcyBzY2FubmVkLCBIb2xkZXIgd2lsbCBjb250YWluIHRoZSB2YWx1ZSBmcm9tIHRoZSBkYXRhYmFzZSBjb2x1bW4uPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJbml0aWFsaXplIHRoZSBDdXN0b21TY2FubmVyIHdpdGggdGhlIGNvbmNyZXRlIEdvIHR5cGUgeW91IHdpc2ggdGhlIGRhdGFiYXNlPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGRyaXZlciB0byBzY2FuIHRoZSByYXcgY29sdW1uIGludG8uPC9zcGFuPgoJSG9sZGVyIGludGVyZmFjZXt9CjxzcGFuIGlkPSJDdXN0b21TY2FubmVyLlRhcmdldCIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUYXJnZXQgdHlwaWNhbGx5IGhvbGRzIGEgcG9pbnRlciB0byB0aGUgdGFyZ2V0IHN0cnVjdCBmaWVsZCB0byBiaW5kIHRoZSBIb2xkZXI8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHZhbHVlIHRvLjwvc3Bhbj4KCVRhcmdldCBpbnRlcmZhY2V7fQo8c3BhbiBpZD0iQ3VzdG9tU2Nhbm5lci5CaW5kZXIiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gQmluZGVyIGlzIGEgY3VzdG9tIGZ1bmN0aW9uIHRoYXQgY29udmVydHMgdGhlIGhvbGRlciB2YWx1ZSB0byB0aGUgdGFyZ2V0IHR5cGU8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGFuZCBzZXRzIHRhcmdldCBhY2NvcmRpbmdseS4gIFRoaXMgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBlcnJvciBpZiBhIHByb2JsZW08L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gb2NjdXJzIGNvbnZlcnRpbmcgdGhlIGhvbGRlciB0byB0aGUgdGFyZ2V0Ljwvc3Bhbj4KCUJpbmRlciBmdW5jKGhvbGRlciBpbnRlcmZhY2V7fSwgdGFyZ2V0IGludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkN1c3RvbVNjYW5uZXIgYmluZHMgYSBkYXRhYmFzZSBjb2x1bW4gdmFsdWUgdG8gYSBHbyB0eXBlCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkN1c3RvbVNjYW5uZXIuQmluZCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChDdXN0b21TY2FubmVyKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGVfYmluZGluZ3MuZ28jTDM3Ij5CaW5kPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDdXN0b21TY2FubmVyLkJpbmQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobWUgPGEgaHJlZj0iI0N1c3RvbVNjYW5uZXIiPkN1c3RvbVNjYW5uZXI8L2E+KSBCaW5kKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+QmluZCBpcyBjYWxsZWQgYXV0b21hdGljYWxseSBieSBnb3JwIGFmdGVyIFNjYW4oKQo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDMwIj5EYk1hcDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBEYk1hcCBzdHJ1Y3QgewoKPHNwYW4gaWQ9IkRiTWFwLkRiIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIERiIGhhbmRsZSB0byB1c2Ugd2l0aCB0aGlzIG1hcDwvc3Bhbj4KPC9zcGFuPglEYiAqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI0RCIj5EQjwvYT4KCjxzcGFuIGlkPSJEYk1hcC5EaWFsZWN0IiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIERpYWxlY3QgaW1wbGVtZW50YXRpb24gdG8gdXNlIHdpdGggdGhpcyBtYXA8L3NwYW4+Cjwvc3Bhbj4JRGlhbGVjdCA8YSBocmVmPSIjRGlhbGVjdCI+RGlhbGVjdDwvYT4KCjxzcGFuIGlkPSJEYk1hcC5UeXBlQ29udmVydGVyIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVHlwZUNvbnZlcnRlciA8YSBocmVmPSIjVHlwZUNvbnZlcnRlciI+VHlwZUNvbnZlcnRlcjwvYT4KPC9zcGFuPgo8c3BhbiBpZD0iRGJNYXAuRXhwYW5kU2xpY2VBcmdzIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEV4cGFuZFNsaWNlcyB3aGVuIGVuYWJsZWQgd2lsbCBjb252ZXJ0IHNsaWNlIGFyZ3VtZW50cyBpbiBtYXBwZXJzIGludG8gZmxhdDwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdmFsdWVzLiBJdCB3aWxsIG1vZGlmeSB0aGUgcXVlcnksIGFkZGluZyBtb3JlIHBsYWNlaG9sZGVycywgYW5kIHRoZSBtYXBwZXIsPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGFkZGluZyBlYWNoIGl0ZW0gb2YgdGhlIHNsaWNlIGFzIGEgbmV3IHVuaXF1ZSBlbnRyeSBpbiB0aGUgbWFwcGVyLiBGb3I8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gZXhhbXBsZSwgZ2l2ZW4gdGhlIHNjZW5hcmlvIGJlbGxvdzo8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgIGRibWFwLlNlbGVjdCgmYW1wO291dHB1dCwgJiMzNDtTRUxFQ1QgMSBGUk9NIGV4YW1wbGUgV0hFUkUgaWQgSU4gKDpJRHMpJiMzNDssIG1hcFtzdHJpbmddaW50ZXJmYWNle317PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICYjMzQ7SURzJiMzNDs6IFtdaW50NjR7MSwgMiwgM30sPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICB9KTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUaGUgZXhlY3V0ZWQgcXVlcnkgd291bGQgYmU6PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICBTRUxFQ1QgMSBGUk9NIGV4YW1wbGUgV0hFUkUgaWQgSU4gKDpJRHMwLDpJRHMxLDpJRHMyKTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBXaXRoIHRoZSBtYXBwZXI6PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICBtYXBbc3RyaW5nXWludGVyZmFjZXt9ezwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgICAmIzM0O0lEcyYjMzQ7OiAgW11pbnQ2NHsxLCAyLCAzfSw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgJiMzNDtJRHMwJiMzNDs6IGludDY0KDEpLDwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgICAmIzM0O0lEczEmIzM0OzogaW50NjQoMiksPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICYjMzQ7SURzMiYjMzQ7OiBpbnQ2NCgzKSw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgIH08L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSXQgaXMgYWxzbyBmbGV4aWJsZSBmb3IgY3VzdG9tIHNsaWNlIHR5cGVzLiBUaGUgdmFsdWUganVzdCBuZWVkIHRvPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGltcGxlbWVudCBzdHJpbmdlciBvciBudW1iZXJlciBpbnRlcmZhY2VzLjwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgdHlwZSBDdXN0b21WYWx1ZSBzdHJpbmc8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgIGNvbnN0ICg8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgQ3VzdG9tVmFsdWVIZXkgQ3VzdG9tVmFsdWUgPSAmIzM0O2hleSYjMzQ7PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgIEN1c3RvbVZhbHVlT2ggIEN1c3RvbVZhbHVlID0gJiMzNDtvaCYjMzQ7PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICApPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICB0eXBlIEN1c3RvbVZhbHVlcyBbXUN1c3RvbVZhbHVlPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICBmdW5jIChjIEN1c3RvbVZhbHVlcykgVG9TdHJpbmdTbGljZSgpIFtdc3RyaW5nIHs8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgdmFsdWVzIDo9IG1ha2UoW11zdHJpbmcsIGxlbihjKSk8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgZm9yIGkgOj0gcmFuZ2UgYyB7PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICAgdmFsdWVzW2ldID0gc3RyaW5nKGNbaV0pPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgIH08L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgcmV0dXJuIHZhbHVlczwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgfTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgZnVuYyBxdWVyeSgpIHs8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgLy8gLi4uPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgIHJlc3VsdCwgZXJyIDo9IGRibWFwLlNlbGVjdCgmYW1wO291dHB1dCwgJiMzNDtTRUxFQ1QgMSBGUk9NIGV4YW1wbGUgV0hFUkUgdmFsdWUgSU4gKDpWYWx1ZXMpJiMzNDssIG1hcFtzdHJpbmddaW50ZXJmYWNle317PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICAgJiMzNDtWYWx1ZXMmIzM0OzogQ3VzdG9tVmFsdWVzKFtdQ3VzdG9tVmFsdWV7Q3VzdG9tVmFsdWVIZXl9KSw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgfSk8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgLy8gLi4uPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICB9PC9zcGFuPgoJRXhwYW5kU2xpY2VBcmdzIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkRiTWFwIGlzIHRoZSByb290IGdvcnAgbWFwcGluZyBvYmplY3QuIENyZWF0ZSBvbmUgb2YgdGhlc2UgZm9yIGVhY2gKZGF0YWJhc2Ugc2NoZW1hIHlvdSB3aXNoIHRvIG1hcC4gIEVhY2ggRGJNYXAgY29udGFpbnMgYSBsaXN0IG9mCm1hcHBlZCB0YWJsZXMuCjwvcD48cD5FeGFtcGxlOgo8L3A+PHByZT5kaWFsZWN0IDo9IGdvcnAuTXlTUUxEaWFsZWN0eyYjMzQ7SW5ub0RCJiMzNDssICYjMzQ7VVRGOCYjMzQ7fQpkYm1hcCA6PSAmYW1wO2dvcnAuRGJNYXB7RGI6IGRiLCBEaWFsZWN0OiBkaWFsZWN0fQo8L3ByZT4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkFkZFRhYmxlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0wyMTIiPkFkZFRhYmxlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5BZGRUYWJsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQWRkVGFibGUoaSBpbnRlcmZhY2V7fSkgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5BZGRUYWJsZSByZWdpc3RlcnMgdGhlIGdpdmVuIGludGVyZmFjZSB0eXBlIHdpdGggZ29ycC4gVGhlIHRhYmxlIG5hbWUKd2lsbCBiZSBnaXZlbiB0aGUgbmFtZSBvZiB0aGUgVHlwZU9mKGkpLiAgWW91IG11c3QgY2FsbCB0aGlzIGZ1bmN0aW9uLApvciBBZGRUYWJsZVdpdGhOYW1lLCBmb3IgYW55IHN0cnVjdCB0eXBlIHlvdSB3aXNoIHRvIHBlcnNpc3Qgd2l0aAp0aGUgZ2l2ZW4gRGJNYXAuCjwvcD48cD5UaGlzIG9wZXJhdGlvbiBpcyBpZGVtcG90ZW50LiBJZiBpJiMzOTtzIHR5cGUgaXMgYWxyZWFkeSBtYXBwZWQsIHRoZQpleGlzdGluZyAqVGFibGVNYXAgaXMgcmV0dXJuZWQKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkFkZFRhYmxlRHluYW1pYyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMMjU0Ij5BZGRUYWJsZUR5bmFtaWM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLkFkZFRhYmxlRHluYW1pYyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQWRkVGFibGVEeW5hbWljKGlucCA8YSBocmVmPSIjRHluYW1pY1RhYmxlIj5EeW5hbWljVGFibGU8L2E+LCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkFkZFRhYmxlRHluYW1pYyByZWdpc3RlcnMgdGhlIGdpdmVuIGludGVyZmFjZSB0eXBlIHdpdGggZ29ycC4KVGhlIHRhYmxlIG5hbWUgd2lsbCBiZSBkeW5hbWljYWxseSBkZXRlcm1pbmVkIGF0IHJ1bnRpbWUgYnkKdXNpbmcgdGhlIEdldFRhYmxlTmFtZSBtZXRob2Qgb24gRHluYW1pY1RhYmxlIGludGVyZmFjZQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuQWRkVGFibGVXaXRoTmFtZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMMjE4Ij5BZGRUYWJsZVdpdGhOYW1lPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5BZGRUYWJsZVdpdGhOYW1lIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBBZGRUYWJsZVdpdGhOYW1lKGkgaW50ZXJmYWNle30sIG5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkFkZFRhYmxlV2l0aE5hbWUgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIEFkZFRhYmxlLCBidXQgc2V0cwp0YWJsZS5UYWJsZU5hbWUgdG8gbmFtZS4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkFkZFRhYmxlV2l0aE5hbWVBbmRTY2hlbWEiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDIyNCI+QWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYShpIGludGVyZmFjZXt9LCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBuYW1lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5BZGRUYWJsZVdpdGhOYW1lQW5kU2NoZW1hIGhhcyB0aGUgc2FtZSBiZWhhdmlvciBhcyBBZGRUYWJsZSwgYnV0IHNldHMKdGFibGUuVGFibGVOYW1lIHRvIG5hbWUuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5CZWdpbiIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNzM3Ij5CZWdpbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuQmVnaW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIEJlZ2luKCkgKCo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkJlZ2luIHN0YXJ0cyBhIGdvcnAgVHJhbnNhY3Rpb24KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkNyZWF0ZUluZGV4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0wxMjciPkNyZWF0ZUluZGV4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5DcmVhdGVJbmRleCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQ3JlYXRlSW5kZXgoKSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5DcmVhdGVUYWJsZXMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDQyMSI+Q3JlYXRlVGFibGVzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5DcmVhdGVUYWJsZXMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIENyZWF0ZVRhYmxlcygpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkNyZWF0ZVRhYmxlcyBpdGVyYXRlcyB0aHJvdWdoIFRhYmxlTWFwcyByZWdpc3RlcmVkIHRvIHRoaXMgRGJNYXAgYW5kCmV4ZWN1dGVzICYjMzQ7Y3JlYXRlIHRhYmxlJiMzNDsgc3RhdGVtZW50cyBhZ2FpbnN0IHRoZSBkYXRhYmFzZSBmb3IgZWFjaC4KPC9wPjxwPlRoaXMgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBpbiB1bml0IHRlc3RzIHdoZXJlIHlvdSB3YW50IHRvIGNyZWF0ZQphbmQgZGVzdHJveSB0aGUgc2NoZW1hIGF1dG9tYXRpY2FsbHkuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5DcmVhdGVUYWJsZXNJZk5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNDI4Ij5DcmVhdGVUYWJsZXNJZk5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIENyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+Q3JlYXRlVGFibGVzSWZOb3RFeGlzdHMgaXMgc2ltaWxhciB0byBDcmVhdGVUYWJsZXMsIGJ1dCBzdGFydHMKZWFjaCBzdGF0ZW1lbnQgd2l0aCAmIzM0O2NyZWF0ZSB0YWJsZSBpZiBub3QgZXhpc3RzJiMzNDsgc28gdGhhdCBleGlzdGluZwp0YWJsZXMgZG8gbm90IHJhaXNlIGVycm9ycwo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRGVsZXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w2MDkiPkRlbGV0ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRGVsZXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBEZWxldGUobGlzdCAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5EZWxldGUgcnVucyBhIFNRTCBERUxFVEUgc3RhdGVtZW50IGZvciBlYWNoIGVsZW1lbnQgaW4gbGlzdC4gIExpc3QKaXRlbXMgbXVzdCBiZSBwb2ludGVycy4KPC9wPjxwPlRoZSBob29rIGZ1bmN0aW9ucyBQcmVEZWxldGUoKSBhbmQvb3IgUG9zdERlbGV0ZSgpIHdpbGwgYmUgZXhlY3V0ZWQKYmVmb3JlL2FmdGVyIHRoZSBERUxFVEUgc3RhdGVtZW50IGlmIHRoZSBpbnRlcmZhY2UgZGVmaW5lcyB0aGVtLgo8L3A+PHA+UmV0dXJucyB0aGUgbnVtYmVyIG9mIHJvd3MgZGVsZXRlZC4KPC9wPjxwPlJldHVybnMgYW4gZXJyb3IgaWYgU2V0S2V5cyBoYXMgbm90IGJlZW4gY2FsbGVkIG9uIHRoZSBUYWJsZU1hcApQYW5pY3MgaWYgYW55IGludGVyZmFjZSBpbiB0aGUgbGlzdCBoYXMgbm90IGJlZW4gcmVnaXN0ZXJlZCB3aXRoIEFkZFRhYmxlCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5Ecm9wVGFibGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDQ1NiI+RHJvcFRhYmxlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5Ecm9wVGFibGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIERyb3BUYWJsZSh0YWJsZSBpbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+RHJvcFRhYmxlIGRyb3BzIGFuIGluZGl2aWR1YWwgdGFibGUuClJldHVybnMgYW4gZXJyb3Igd2hlbiB0aGUgdGFibGUgZG9lcyBub3QgZXhpc3QuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5Ecm9wVGFibGVJZkV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNDY4Ij5Ecm9wVGFibGVJZkV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHJvcFRhYmxlSWZFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIERyb3BUYWJsZUlmRXhpc3RzKHRhYmxlIGludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Ecm9wVGFibGVJZkV4aXN0cyBkcm9wcyBhbiBpbmRpdmlkdWFsIHRhYmxlIHdoZW4gdGhlIHRhYmxlIGV4aXN0cy4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkRyb3BUYWJsZXMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDQ4MSI+RHJvcFRhYmxlczwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHJvcFRhYmxlcyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgRHJvcFRhYmxlcygpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkRyb3BUYWJsZXMgaXRlcmF0ZXMgdGhyb3VnaCBUYWJsZU1hcHMgcmVnaXN0ZXJlZCB0byB0aGlzIERiTWFwIGFuZApleGVjdXRlcyAmIzM0O2Ryb3AgdGFibGUmIzM0OyBzdGF0ZW1lbnRzIGFnYWluc3QgdGhlIGRhdGFiYXNlIGZvciBlYWNoLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRHJvcFRhYmxlc0lmRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w0ODciPkRyb3BUYWJsZXNJZkV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHJvcFRhYmxlc0lmRXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBEcm9wVGFibGVzSWZFeGlzdHMoKSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Ecm9wVGFibGVzSWZFeGlzdHMgaXMgdGhlIHNhbWUgYXMgRHJvcFRhYmxlcywgYnV0IHVzZXMgdGhlICYjMzQ7aWYgZXhpc3RzJiMzNDsgY2xhdXNlIHRvCmF2b2lkIGVycm9ycyBmb3IgdGFibGVzIHRoYXQgZG8gbm90IGV4aXN0Lgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRHluYW1pY1RhYmxlRm9yIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w3NzUiPkR5bmFtaWNUYWJsZUZvcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHluYW1pY1RhYmxlRm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY2hlY2tQSyA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgKCo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkR5bmFtaWNUYWJsZUZvciByZXR1cm5zIHRoZSAqVGFibGVNYXAgZm9yIHRoZSBkeW5hbWljIHRhYmxlIGNvcnJlc3BvbmRpbmcKdG8gdGhlIGlucHV0IHRhYmxlbmFtZQpJZiBubyB0YWJsZSBpcyBtYXBwZWQgdG8gdGhhdCB0YWJsZW5hbWUgYW4gZXJyb3IgaXMgcmV0dXJuZWQuCklmIGNoZWNrUEsgaXMgdHJ1ZSBhbmQgdGhlIG1hcHBlZCB0YWJsZSBoYXMgbm8gcmVnaXN0ZXJlZCBQS3MsIGFuIGVycm9yIGlzIHJldHVybmVkLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRXhlYyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNjYxIj5FeGVjPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5FeGVjIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBFeGVjKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNSZXN1bHQiPlJlc3VsdDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5FeGVjIHJ1bnMgYW4gYXJiaXRyYXJ5IFNRTCBzdGF0ZW1lbnQuICBhcmdzIHJlcHJlc2VudCB0aGUgYmluZCBwYXJhbWV0ZXJzLgpUaGlzIGlzIGVxdWl2YWxlbnQgdG8gcnVubmluZzogIEV4ZWMoKSB1c2luZyBkYXRhYmFzZS9zcWwKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkdldCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNjI4Ij5HZXQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLkdldCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgR2V0KGkgaW50ZXJmYWNle30sIGtleXMgLi4uaW50ZXJmYWNle30pIChpbnRlcmZhY2V7fSwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkdldCBydW5zIGEgU1FMIFNFTEVDVCB0byBmZXRjaCBhIHNpbmdsZSByb3cgZnJvbSB0aGUgdGFibGUgYmFzZWQgb24gdGhlCnByaW1hcnkga2V5KHMpCjwvcD48cD5pIHNob3VsZCBiZSBhbiBlbXB0eSB2YWx1ZSBmb3IgdGhlIHN0cnVjdCB0byBsb2FkLiAga2V5cyBzaG91bGQgYmUKdGhlIHByaW1hcnkga2V5IHZhbHVlKHMpIGZvciB0aGUgcm93IHRvIGxvYWQuICBJZiBtdWx0aXBsZSBrZXlzCmV4aXN0IG9uIHRoZSB0YWJsZSwgdGhlIG9yZGVyIHNob3VsZCBtYXRjaCB0aGUgY29sdW1uIG9yZGVyCnNwZWNpZmllZCBpbiBTZXRLZXlzKCkgd2hlbiB0aGUgdGFibGUgbWFwcGluZyB3YXMgZGVmaW5lZC4KPC9wPjxwPlRoZSBob29rIGZ1bmN0aW9uIFBvc3RHZXQoKSB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBTRUxFQ1QKc3RhdGVtZW50IGlmIHRoZSBpbnRlcmZhY2UgZGVmaW5lcyB0aGVtLgo8L3A+PHA+UmV0dXJucyBhIHBvaW50ZXIgdG8gYSBzdHJ1Y3QgdGhhdCBtYXRjaGVzIG9yIG5pbCBpZiBubyByb3cgaXMgZm91bmQuCjwvcD48cD5SZXR1cm5zIGFuIGVycm9yIGlmIFNldEtleXMgaGFzIG5vdCBiZWVuIGNhbGxlZCBvbiB0aGUgVGFibGVNYXAKUGFuaWNzIGlmIGFueSBpbnRlcmZhY2UgaW4gdGhlIGxpc3QgaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQgd2l0aCBBZGRUYWJsZQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w1NjUiPkluc2VydDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuSW5zZXJ0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBJbnNlcnQobGlzdCAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+SW5zZXJ0IHJ1bnMgYSBTUUwgSU5TRVJUIHN0YXRlbWVudCBmb3IgZWFjaCBlbGVtZW50IGluIGxpc3QuICBMaXN0Cml0ZW1zIG11c3QgYmUgcG9pbnRlcnMuCjwvcD48cD5BbnkgaW50ZXJmYWNlIHdob3NlIFRhYmxlTWFwIGhhcyBhbiBhdXRvLWluY3JlbWVudCBwcmltYXJ5IGtleSB3aWxsCmhhdmUgaXRzIGxhc3QgaW5zZXJ0IGlkIGJvdW5kIHRvIHRoZSBQSyBmaWVsZCBvbiB0aGUgc3RydWN0Lgo8L3A+PHA+VGhlIGhvb2sgZnVuY3Rpb25zIFByZUluc2VydCgpIGFuZC9vciBQb3N0SW5zZXJ0KCkgd2lsbCBiZSBleGVjdXRlZApiZWZvcmUvYWZ0ZXIgdGhlIElOU0VSVCBzdGF0ZW1lbnQgaWYgdGhlIGludGVyZmFjZSBkZWZpbmVzIHRoZW0uCjwvcD48cD5QYW5pY3MgaWYgYW55IGludGVyZmFjZSBpbiB0aGUgbGlzdCBoYXMgbm90IGJlZW4gcmVnaXN0ZXJlZCB3aXRoIEFkZFRhYmxlCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5QcmVwYXJlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w3OTMiPlByZXBhcmU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLlByZXBhcmUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFByZXBhcmUocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAoKjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNTdG10Ij5TdG10PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlByZXBhcmUgY3JlYXRlcyBhIHByZXBhcmVkIHN0YXRlbWVudCBmb3IgbGF0ZXIgcXVlcmllcyBvciBleGVjdXRpb25zLgpNdWx0aXBsZSBxdWVyaWVzIG9yIGV4ZWN1dGlvbnMgbWF5IGJlIHJ1biBjb25jdXJyZW50bHkgZnJvbSB0aGUgcmV0dXJuZWQgc3RhdGVtZW50LgpUaGlzIGlzIGVxdWl2YWxlbnQgdG8gcnVubmluZzogIFByZXBhcmUoKSB1c2luZyBkYXRhYmFzZS9zcWwKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlF1ZXJ5IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w4NTgiPlF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5RdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgUXVlcnkocSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI1Jvd3MiPlJvd3M8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuUXVlcnlSb3ciIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDg0NiI+UXVlcnlSb3c8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLlF1ZXJ5Um93Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBRdWVyeVJvdyhxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICo8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjUm93Ij5Sb3c8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3QiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDY1MSI+U2VsZWN0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3QiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdChpIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIChbXWludGVyZmFjZXt9LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0IHJ1bnMgYW4gYXJiaXRyYXJ5IFNRTCBxdWVyeSwgYmluZGluZyB0aGUgY29sdW1ucyBpbiB0aGUgcmVzdWx0CnRvIGZpZWxkcyBvbiB0aGUgc3RydWN0IHNwZWNpZmllZCBieSBpLiAgYXJncyByZXByZXNlbnQgdGhlIGJpbmQKcGFyYW1ldGVycyBmb3IgdGhlIFNRTCBzdGF0ZW1lbnQuCjwvcD48cD5Db2x1bW4gbmFtZXMgb24gdGhlIFNFTEVDVCBzdGF0ZW1lbnQgc2hvdWxkIGJlIGFsaWFzZWQgdG8gdGhlIGZpZWxkIG5hbWVzCm9uIHRoZSBzdHJ1Y3QgaS4gUmV0dXJucyBhbiBlcnJvciBpZiBvbmUgb3IgbW9yZSBjb2x1bW5zIGluIHRoZSByZXN1bHQKZG8gbm90IG1hdGNoLiAgSXQgaXMgT0sgaWYgZmllbGRzIG9uIGkgYXJlIG5vdCBwYXJ0IG9mIHRoZSBTUUwKc3RhdGVtZW50Lgo8L3A+PHA+VGhlIGhvb2sgZnVuY3Rpb24gUG9zdEdldCgpIHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIFNFTEVDVApzdGF0ZW1lbnQgaWYgdGhlIGludGVyZmFjZSBkZWZpbmVzIHRoZW0uCjwvcD48cD5WYWx1ZXMgYXJlIHJldHVybmVkIGluIG9uZSBvZiB0d28gd2F5czoKMS4gSWYgaSBpcyBhIHN0cnVjdCBvciBhIHBvaW50ZXIgdG8gYSBzdHJ1Y3QsIHJldHVybnMgYSBzbGljZSBvZiBwb2ludGVycyB0bwptYXRjaGluZyByb3dzIG9mIHR5cGUgaS4KMi4gSWYgaSBpcyBhIHBvaW50ZXIgdG8gYSBzbGljZSwgdGhlIHJlc3VsdHMgd2lsbCBiZSBhcHBlbmRlZCB0byB0aGF0IHNsaWNlCmFuZCBuaWwgcmV0dXJuZWQuCjwvcD48cD5pIGRvZXMgTk9UIG5lZWQgdG8gYmUgcmVnaXN0ZXJlZCB3aXRoIEFkZFRhYmxlKCkKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlNlbGVjdEZsb2F0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w2OTIiPlNlbGVjdEZsb2F0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RGbG9hdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgU2VsZWN0RmxvYXQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jZmxvYXQ2NCI+ZmxvYXQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3RGbG9hdCBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdEZsb2F0IGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3RJbnQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDY3NCI+U2VsZWN0SW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RJbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdEludChxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0SW50IGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0SW50IGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3ROdWxsRmxvYXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDcwMSI+U2VsZWN0TnVsbEZsb2F0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsRmxvYXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdE51bGxGbG9hdChxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjTnVsbEZsb2F0NjQiPk51bGxGbG9hdDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxGbG9hdCBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdE51bGxGbG9hdCBmdW5jdGlvbgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNjgzIj5TZWxlY3ROdWxsSW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsSW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBTZWxlY3ROdWxsSW50KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsSW50NjQiPk51bGxJbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3ROdWxsSW50IGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0TnVsbEludCBmdW5jdGlvbgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuU2VsZWN0TnVsbFN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNzE5Ij5TZWxlY3ROdWxsU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsU3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBTZWxlY3ROdWxsU3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsU3RyaW5nIj5OdWxsU3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxTdHIgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3ROdWxsU3RyIGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3RPbmUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDcyOCI+U2VsZWN0T25lPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RPbmUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdE9uZShob2xkZXIgaW50ZXJmYWNle30sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0T25lIGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0T25lIGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3RTdHIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDcxMCI+U2VsZWN0U3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RTdHIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdFN0cihxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3RTdHIgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3RTdHIgZnVuY3Rpb24KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlRhYmxlRm9yIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w3NTYiPlRhYmxlRm9yPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5UYWJsZUZvciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgVGFibGVGb3IodCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIGNoZWNrUEsgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pICgqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5UYWJsZUZvciByZXR1cm5zIHRoZSAqVGFibGVNYXAgY29ycmVzcG9uZGluZyB0byB0aGUgZ2l2ZW4gR28gVHlwZQpJZiBubyB0YWJsZSBpcyBtYXBwZWQgdG8gdGhhdCB0eXBlIGFuIGVycm9yIGlzIHJldHVybmVkLgpJZiBjaGVja1BLIGlzIHRydWUgYW5kIHRoZSBtYXBwZWQgdGFibGUgaGFzIG5vIHJlZ2lzdGVyZWQgUEtzLCBhbiBlcnJvciBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlRyYWNlT2ZmIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2xvZ2dpbmcuZ28jTDM5Ij5UcmFjZU9mZjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuVHJhY2VPZmYiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFRyYWNlT2ZmKCk8L3ByZT4KICAgIDwvZGl2PgogIDxwPlRyYWNlT2ZmIHR1cm5zIG9mZiB0cmFjaW5nLiBJdCBpcyBpZGVtcG90ZW50Lgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuVHJhY2VPbiIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9sb2dnaW5nLmdvI0wyOSI+VHJhY2VPbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuVHJhY2VPbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgVHJhY2VPbihwcmVmaXggPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBsb2dnZXIgPGEgaHJlZj0iI0xvZ2dlciI+TG9nZ2VyPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlRyYWNlT24gdHVybnMgb24gU1FMIHN0YXRlbWVudCBsb2dnaW5nIGZvciB0aGlzIERiTWFwLiAgQWZ0ZXIgdGhpcyBpcwpjYWxsZWQsIGFsbCBTUUwgc3RhdGVtZW50cyB3aWxsIGJlIHNlbnQgdG8gdGhlIGxvZ2dlci4gIElmIHByZWZpeCBpcwphIG5vbi1lbXB0eSBzdHJpbmcsIGl0IHdpbGwgYmUgd3JpdHRlbiB0byB0aGUgZnJvbnQgb2YgYWxsIGxvZ2dlZApzdHJpbmdzLCB3aGljaCBjYW4gYWlkIGluIGZpbHRlcmluZyBsb2cgbGluZXMuCjwvcD48cD5Vc2UgVHJhY2VPbiBpZiB5b3Ugd2FudCB0byBzcHkgb24gdGhlIFNRTCBzdGF0ZW1lbnRzIHRoYXQgZ29ycApnZW5lcmF0ZXMuCjwvcD48cD5Ob3RlIHRoYXQgdGhlIGJhc2UgbG9nLkxvZ2dlciB0eXBlIHNhdGlzZmllcyBMb2dnZXIsIGJ1dCBhZGFwdGVycyBjYW4KZWFzaWx5IGJlIHdyaXR0ZW4gZm9yIG90aGVyIGxvZ2dpbmcgcGFja2FnZXMgKGUuZy4sIHRoZSBnb2xhbmctc2FuY3Rpb25lZApnbG9nIGZyYW1ld29yaykuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5UcnVuY2F0ZVRhYmxlcyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNTM1Ij5UcnVuY2F0ZVRhYmxlczwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuVHJ1bmNhdGVUYWJsZXMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFRydW5jYXRlVGFibGVzKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+VHJ1bmNhdGVUYWJsZXMgaXRlcmF0ZXMgdGhyb3VnaCBUYWJsZU1hcHMgcmVnaXN0ZXJlZCB0byB0aGlzIERiTWFwIGFuZApleGVjdXRlcyAmIzM0O3RydW5jYXRlIHRhYmxlJiMzNDsgc3RhdGVtZW50cyBhZ2FpbnN0IHRoZSBkYXRhYmFzZSBmb3IgZWFjaCwgb3IgaW4gdGhlIGNhc2Ugb2YKc3FsaXRlLCBhICYjMzQ7ZGVsZXRlIGZyb20mIzM0OyB3aXRoIG5vICYjMzQ7d2hlcmUmIzM0OyBjbGF1c2UsIHdoaWNoIHVzZXMgdGhlIHRydW5jYXRlIG9wdGltaXphdGlvbgooPGEgaHJlZj0iaHR0cDovL3d3dy5zcWxpdGUub3JnL2xhbmdfZGVsZXRlLmh0bWwiPmh0dHA6Ly93d3cuc3FsaXRlLm9yZy9sYW5nX2RlbGV0ZS5odG1sPC9hPikKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlVwZGF0ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNTc5Ij5VcGRhdGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLlVwZGF0ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgVXBkYXRlKGxpc3QgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VXBkYXRlIHJ1bnMgYSBTUUwgVVBEQVRFIHN0YXRlbWVudCBmb3IgZWFjaCBlbGVtZW50IGluIGxpc3QuICBMaXN0Cml0ZW1zIG11c3QgYmUgcG9pbnRlcnMuCjwvcD48cD5UaGUgaG9vayBmdW5jdGlvbnMgUHJlVXBkYXRlKCkgYW5kL29yIFBvc3RVcGRhdGUoKSB3aWxsIGJlIGV4ZWN1dGVkCmJlZm9yZS9hZnRlciB0aGUgVVBEQVRFIHN0YXRlbWVudCBpZiB0aGUgaW50ZXJmYWNlIGRlZmluZXMgdGhlbS4KPC9wPjxwPlJldHVybnMgdGhlIG51bWJlciBvZiByb3dzIHVwZGF0ZWQuCjwvcD48cD5SZXR1cm5zIGFuIGVycm9yIGlmIFNldEtleXMgaGFzIG5vdCBiZWVuIGNhbGxlZCBvbiB0aGUgVGFibGVNYXAKUGFuaWNzIGlmIGFueSBpbnRlcmZhY2UgaW4gdGhlIGxpc3QgaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQgd2l0aCBBZGRUYWJsZQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuVXBkYXRlQ29sdW1ucyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNTk1Ij5VcGRhdGVDb2x1bW5zPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5VcGRhdGVDb2x1bW5zIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBVcGRhdGVDb2x1bW5zKGZpbHRlciA8YSBocmVmPSIjQ29sdW1uRmlsdGVyIj5Db2x1bW5GaWx0ZXI8L2E+LCBsaXN0IC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlVwZGF0ZUNvbHVtbnMgcnVucyBhIFNRTCBVUERBVEUgc3RhdGVtZW50IGZvciBlYWNoIGVsZW1lbnQgaW4gbGlzdC4gIExpc3QKaXRlbXMgbXVzdCBiZSBwb2ludGVycy4KPC9wPjxwPk9ubHkgdGhlIGNvbHVtbnMgYWNjZXB0ZWQgYnkgZmlsdGVyIGFyZSBpbmNsdWRlZCBpbiB0aGUgVVBEQVRFLgo8L3A+PHA+VGhlIGhvb2sgZnVuY3Rpb25zIFByZVVwZGF0ZSgpIGFuZC9vciBQb3N0VXBkYXRlKCkgd2lsbCBiZSBleGVjdXRlZApiZWZvcmUvYWZ0ZXIgdGhlIFVQREFURSBzdGF0ZW1lbnQgaWYgdGhlIGludGVyZmFjZSBkZWZpbmVzIHRoZW0uCjwvcD48cD5SZXR1cm5zIHRoZSBudW1iZXIgb2Ygcm93cyB1cGRhdGVkLgo8L3A+PHA+UmV0dXJucyBhbiBlcnJvciBpZiBTZXRLZXlzIGhhcyBub3QgYmVlbiBjYWxsZWQgb24gdGhlIFRhYmxlTWFwClBhbmljcyBpZiBhbnkgaW50ZXJmYWNlIGluIHRoZSBsaXN0IGhhcyBub3QgYmVlbiByZWdpc3RlcmVkIHdpdGggQWRkVGFibGUKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLldpdGhDb250ZXh0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0wxMjAiPldpdGhDb250ZXh0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5XaXRoQ29udGV4dCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgV2l0aENvbnRleHQoY3R4IDxhIGhyZWY9Ii9jb250ZXh0Ij5jb250ZXh0PC9hPi48YSBocmVmPSIvY29udGV4dCNDb250ZXh0Ij5Db250ZXh0PC9hPikgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+CiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGlhbGVjdCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdC5nbyNMMTQiPkRpYWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RpYWxlY3QiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBEaWFsZWN0IGludGVyZmFjZSB7CjxzcGFuIGlkPSJEaWFsZWN0LlF1ZXJ5U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBhZGRzIGEgc3VmZml4IHRvIGFueSBxdWVyeSwgdXN1YWxseSAmIzM0OzsmIzM0Ozwvc3Bhbj4KPC9zcGFuPglRdWVyeVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKPHNwYW4gaWQ9IkRpYWxlY3QuVG9TcWxUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUb1NxbFR5cGUgcmV0dXJucyB0aGUgU1FMIGNvbHVtbiB0eXBlIHRvIHVzZSB3aGVuIGNyZWF0aW5nIGE8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHRhYmxlIG9mIHRoZSBnaXZlbiBHbyBUeXBlLiAgbWF4c2l6ZSBjYW4gYmUgdXNlZCB0byBzd2l0Y2ggYmFzZWQgb248L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gc2l6ZS4gIEZvciBleGFtcGxlLCBpbiBNeVNRTCBbXWJ5dGUgY291bGQgbWFwIHRvIEJMT0IsIE1FRElVTUJMT0IsPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIG9yIExPTkdCTE9CIGRlcGVuZGluZyBvbiB0aGUgbWF4c2l6ZTwvc3Bhbj4KCVRvU3FsVHlwZSh2YWwgPGEgaHJlZj0iL3JlZmxlY3QiPnJlZmxlY3Q8L2E+LjxhIGhyZWY9Ii9yZWZsZWN0I1R5cGUiPlR5cGU8L2E+LCBtYXhzaXplIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPiwgaXNBdXRvSW5jciA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gc3RyaW5nIHRvIGFwcGVuZCB0byBwcmltYXJ5IGtleSBjb2x1bW4gZGVmaW5pdGlvbnM8L3NwYW4+Cjwvc3Bhbj4JQXV0b0luY3JTdHIoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdHJpbmcgdG8gYmluZCBhdXRvaW5jcmVtZW50IGNvbHVtbnMgdG8uIEVtcHR5IHN0cmluZyB3aWxsPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyByZW1vdmUgcmVmZXJlbmNlIHRvIHRob3NlIGNvbHVtbnMgaW4gdGhlIElOU0VSVCBzdGF0ZW1lbnQuPC9zcGFuPgoJQXV0b0luY3JCaW5kVmFsdWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj4KPHNwYW4gaWQ9IkRpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHN0cmluZyB0byBhcHBlbmQgdG8gJiMzNDtjcmVhdGUgdGFibGUmIzM0OyBzdGF0ZW1lbnQgZm9yIHZlbmRvciBzcGVjaWZpYzwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdGFibGUgYXR0cmlidXRlczwvc3Bhbj4KCUNyZWF0ZVRhYmxlU3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gc3RyaW5nIHRvIGFwcGVuZCB0byAmIzM0O2NyZWF0ZSBpbmRleCYjMzQ7IHN0YXRlbWVudDwvc3Bhbj4KPC9zcGFuPglDcmVhdGVJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKPHNwYW4gaWQ9IkRpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdHJpbmcgdG8gYXBwZW5kIHRvICYjMzQ7ZHJvcCBpbmRleCYjMzQ7IHN0YXRlbWVudDwvc3Bhbj4KPC9zcGFuPglEcm9wSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdHJpbmcgdG8gdHJ1bmNhdGUgdGFibGVzPC9zcGFuPgo8L3NwYW4+CVRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5CaW5kVmFyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBiaW5kIHZhcmlhYmxlIHN0cmluZyB0byB1c2Ugd2hlbiBmb3JtaW5nIFNRTCBzdGF0ZW1lbnRzPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBpbiBtYW55IGRicyBpdCBpcyAmIzM0Oz8mIzM0OywgYnV0IFBvc3RncmVzIGFwcGVhcnMgdG8gdXNlICQxPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGkgaXMgYSB6ZXJvIGJhc2VkIGluZGV4IG9mIHRoZSBiaW5kIHZhcmlhYmxlIGluIHRoaXMgc3RhdGVtZW50PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJQmluZFZhcihpIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5RdW90ZUZpZWxkIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBIYW5kbGVzIHF1b3Rpbmcgb2YgYSBmaWVsZCBuYW1lIHRvIGVuc3VyZSB0aGF0IGl0IGRvZXNuJiMzOTt0IHJhaXNlIGFueTwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gU1FMIHBhcnNpbmcgZXhjZXB0aW9ucyBieSB1c2luZyBhIHJlc2VydmVkIHdvcmQgYXMgYSBmaWVsZCBuYW1lLjwvc3Bhbj4KCVF1b3RlRmllbGQoZmllbGQgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEhhbmRsZXMgYnVpbGRpbmcgdXAgb2YgYSBzY2hlbWEuZGF0YWJhc2Ugc3RyaW5nIHRoYXQgaXMgY29tcGF0aWJsZSB3aXRoPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyB0aGUgZ2l2ZW4gZGlhbGVjdDwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzY2hlbWEgLSBUaGUgc2NoZW1hIHRoYXQgJmx0O3RhYmxlJmd0OyBsaXZlcyBpbjwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyB0YWJsZSAtIFRoZSB0YWJsZSBuYW1lPC9zcGFuPgoJUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBFeGlzdGVuY2UgY2xhdXNlIGZvciB0YWJsZSBjcmVhdGlvbiAvIGRlbGV0aW9uPC9zcGFuPgo8c3BhbiBpZD0iRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiPglJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KPC9zcGFuPjxzcGFuIGlkPSJEaWFsZWN0LklmVGFibGVFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIj4JSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUlmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VGhlIERpYWxlY3QgaW50ZXJmYWNlIGVuY2Fwc3VsYXRlcyBiZWhhdmlvcnMgdGhhdCBkaWZmZXIgYWNyb3NzClNRTCBkYXRhYmFzZXMuICBBdCBwcmVzZW50IHRoZSBEaWFsZWN0IGlzIG9ubHkgdXNlZCBieSBDcmVhdGVUYWJsZXMoKQpidXQgdGhpcyBjb3VsZCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZQo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkR5bmFtaWNUYWJsZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMMTE0Ij5EeW5hbWljVGFibGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0R5bmFtaWNUYWJsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIER5bmFtaWNUYWJsZSBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iRHluYW1pY1RhYmxlLlRhYmxlTmFtZSIgZGF0YS1raW5kPSJtZXRob2QiPglUYWJsZU5hbWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KPC9zcGFuPjxzcGFuIGlkPSJEeW5hbWljVGFibGUuU2V0VGFibGVOYW1lIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNldFRhYmxlTmFtZSg8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pCjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5EeW5hbWljVGFibGUgYWxsb3dzIHRoZSB1c2VycyBvZiBnb3JwIHRvIGR5bmFtaWNhbGx5CnVzZSBkaWZmZXJlbnQgZGF0YWJhc2UgdGFibGUgbmFtZXMgZHVyaW5nIHJ1bnRpbWUKd2hpbGUgc2hhcmluZyB0aGUgc2FtZSBnb2xhbmcgc3RydWN0IGZvciBpbi1tZW1vcnkgZGF0YQo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkdvcnBMb2dnZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2xvZ2dpbmcuZ28jTDEwIj5Hb3JwTG9nZ2VyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNHb3JwTG9nZ2VyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgR29ycExvZ2dlciA9IDxhIGhyZWY9IiNMb2dnZXIiPkxvZ2dlcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkdvcnBMb2dnZXIgaXMgYSBkZXByZWNhdGVkIGFsaWFzIG9mIExvZ2dlci4KPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJIYXNQb3N0RGVsZXRlIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9ob29rcy5nbyNMMTUiPkhhc1Bvc3REZWxldGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0hhc1Bvc3REZWxldGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBIYXNQb3N0RGVsZXRlIGludGVyZmFjZSB7CjxzcGFuIGlkPSJIYXNQb3N0RGVsZXRlLlBvc3REZWxldGUiIGRhdGEta2luZD0ibWV0aG9kIj4JUG9zdERlbGV0ZSg8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+SGFzUG9zdERlbGV0ZSBwcm92aWRlcyBQb3N0RGVsZXRlKCkgd2hpY2ggd2lsbCBiZSBleGVjdXRlZCBhZnRlciB0aGUgREVMRVRFIHN0YXRlbWVudAo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ikhhc1Bvc3RHZXQiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2hvb2tzLmdvI0wxMCI+SGFzUG9zdEdldDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUG9zdEdldCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIEhhc1Bvc3RHZXQgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9Ikhhc1Bvc3RHZXQuUG9zdEdldCIgZGF0YS1raW5kPSJtZXRob2QiPglQb3N0R2V0KDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5IYXNQb3N0R2V0IHByb3ZpZGVzIFBvc3RHZXQoKSB3aGljaCB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBHRVQgc3RhdGVtZW50Lgo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ikhhc1Bvc3RJbnNlcnQiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2hvb2tzLmdvI0wyNSI+SGFzUG9zdEluc2VydDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUG9zdEluc2VydCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIEhhc1Bvc3RJbnNlcnQgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9Ikhhc1Bvc3RJbnNlcnQuUG9zdEluc2VydCIgZGF0YS1raW5kPSJtZXRob2QiPglQb3N0SW5zZXJ0KDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5IYXNQb3N0SW5zZXJ0IHByb3ZpZGVzIFBvc3RJbnNlcnQoKSB3aGljaCB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBJTlNFUlQgc3RhdGVtZW50CjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSGFzUG9zdFVwZGF0ZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvaG9va3MuZ28jTDIwIj5IYXNQb3N0VXBkYXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNIYXNQb3N0VXBkYXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSGFzUG9zdFVwZGF0ZSBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iSGFzUG9zdFVwZGF0ZS5Qb3N0VXBkYXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVBvc3RVcGRhdGUoPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkhhc1Bvc3RVcGRhdGUgcHJvdmlkZXMgUG9zdFVwZGF0ZSgpIHdoaWNoIHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIFVQREFURSBzdGF0ZW1lbnQKPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJIYXNQcmVEZWxldGUiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2hvb2tzLmdvI0wzMCI+SGFzUHJlRGVsZXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNIYXNQcmVEZWxldGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBIYXNQcmVEZWxldGUgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9Ikhhc1ByZURlbGV0ZS5QcmVEZWxldGUiIGRhdGEta2luZD0ibWV0aG9kIj4JUHJlRGVsZXRlKDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5IYXNQcmVEZWxldGUgcHJvdmlkZXMgUHJlRGVsZXRlKCkgd2hpY2ggd2lsbCBiZSBleGVjdXRlZCBiZWZvcmUgdGhlIERFTEVURSBzdGF0ZW1lbnQuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSGFzUHJlSW5zZXJ0IiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9ob29rcy5nbyNMNDAiPkhhc1ByZUluc2VydDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUHJlSW5zZXJ0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSGFzUHJlSW5zZXJ0IGludGVyZmFjZSB7CjxzcGFuIGlkPSJIYXNQcmVJbnNlcnQuUHJlSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVByZUluc2VydCg8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+SGFzUHJlSW5zZXJ0IHByb3ZpZGVzIFByZUluc2VydCgpIHdoaWNoIHdpbGwgYmUgZXhlY3V0ZWQgYmVmb3JlIElOU0VSVCBzdGF0ZW1lbnQuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSGFzUHJlVXBkYXRlIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9ob29rcy5nbyNMMzUiPkhhc1ByZVVwZGF0ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUHJlVXBkYXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSGFzUHJlVXBkYXRlIGludGVyZmFjZSB7CjxzcGFuIGlkPSJIYXNQcmVVcGRhdGUuUHJlVXBkYXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVByZVVwZGF0ZSg8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+SGFzUHJlVXBkYXRlIHByb3ZpZGVzIFByZVVwZGF0ZSgpIHdoaWNoIHdpbGwgYmUgZXhlY3V0ZWQgYmVmb3JlIFVQREFURSBzdGF0ZW1lbnQuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSW5kZXhNYXAiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2luZGV4LmdvI0wxMSI+SW5kZXhNYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0luZGV4TWFwIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSW5kZXhNYXAgc3RydWN0IHsKPHNwYW4gaWQ9IkluZGV4TWFwLkluZGV4TmFtZSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJbmRleCBuYW1lIGluIGRiIHRhYmxlPC9zcGFuPgo8L3NwYW4+CUluZGV4TmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJJbmRleE1hcC5VbmlxdWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSWYgdHJ1ZSwgJiMzNDsgdW5pcXVlJiMzNDsgaXMgYWRkZWQgdG8gY3JlYXRlIGluZGV4IHN0YXRlbWVudHMuPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOb3QgdXNlZCBlbHNld2hlcmU8L3NwYW4+CglVbmlxdWUgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KCjxzcGFuIGlkPSJJbmRleE1hcC5JbmRleFR5cGUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSW5kZXggdHlwZSBzdXBwb3J0ZWQgYnkgRGlhbGVjdDwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gUG9zdGdyZXM6ICBCLXRyZWUsIEhhc2gsIEdpU1QgYW5kIEdJTi48L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gTXlzcWw6IEJ0cmVlLCBIYXNoLjwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBTcWxpdGU6IG5pbC48L3NwYW4+CglJbmRleFR5cGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkluZGV4TWFwIHJlcHJlc2VudHMgYSBtYXBwaW5nIGJldHdlZW4gYSBHbyBzdHJ1Y3QgZmllbGQgYW5kIGEgc2luZ2xlCmluZGV4IGluIGEgdGFibGUuClVuaXF1ZSBhbmQgTWF4U2l6ZSBvbmx5IGluZm9ybSB0aGUKQ3JlYXRlVGFibGVzKCkgZnVuY3Rpb24gYW5kIGFyZSBub3QgdXNlZCBieSBJbnNlcnQvVXBkYXRlL0RlbGV0ZS9HZXQuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkluZGV4TWFwLlJlbmFtZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqSW5kZXhNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9pbmRleC5nbyNMMzMiPlJlbmFtZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSW5kZXhNYXAuUmVuYW1lIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGlkeCAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT4pIFJlbmFtZShpbmRuYW1lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNJbmRleE1hcCI+SW5kZXhNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZW5hbWUgYWxsb3dzIHlvdSB0byBzcGVjaWZ5IHRoZSBpbmRleCBuYW1lIGluIHRoZSB0YWJsZQo8L3A+PHA+RXhhbXBsZTogIHRhYmxlLkluZE1hcCgmIzM0O2N1c3RvbWVyX3Rlc3RfaWR4JiMzNDspLlJlbmFtZSgmIzM0O2N1c3RvbWVyX2lkeCYjMzQ7KQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSW5kZXhNYXAuU2V0SW5kZXhUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpJbmRleE1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2luZGV4LmdvI0w0NiI+U2V0SW5kZXhUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNJbmRleE1hcC5TZXRJbmRleFR5cGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoaWR4ICo8YSBocmVmPSIjSW5kZXhNYXAiPkluZGV4TWFwPC9hPikgU2V0SW5kZXhUeXBlKGluZHR5cGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNldEluZGV4VHlwZSBzcGVjaWZpZXMgdGhlIGluZGV4IHR5cGUgc3VwcG9ydGVkIGJ5IGNob3VzZW4gU1FMIERpYWxlY3QKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkluZGV4TWFwLlNldFVuaXF1ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqSW5kZXhNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9pbmRleC5nbyNMNDAiPlNldFVuaXF1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSW5kZXhNYXAuU2V0VW5pcXVlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGlkeCAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT4pIFNldFVuaXF1ZShiIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNldFVuaXF1ZSBhZGRzICYjMzQ7dW5pcXVlJiMzNDsgdG8gdGhlIGNyZWF0ZSBpbmRleCBzdGF0ZW1lbnRzIGZvciB0aGlzCmluZGV4LCBpZiBiIGlzIHRydWUuCjwvcD4KCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkludGVnZXJBdXRvSW5jckluc2VydGVyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0LmdvI0w3NCI+SW50ZWdlckF1dG9JbmNySW5zZXJ0ZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0ludGVnZXJBdXRvSW5jckluc2VydGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSW50ZWdlckF1dG9JbmNySW5zZXJ0ZXIgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IkludGVnZXJBdXRvSW5jckluc2VydGVyLkluc2VydEF1dG9JbmNyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUluc2VydEF1dG9JbmNyKGV4ZWMgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIGluc2VydFNxbCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5JbnRlZ2VyQXV0b0luY3JJbnNlcnRlciBpcyBpbXBsZW1lbnRlZCBieSBkaWFsZWN0cyB0aGF0IGNhbiBwZXJmb3JtCmluc2VydHMgd2l0aCBhdXRvbWF0aWNhbGx5IGluY3JlbWVudGVkIGludGVnZXIgcHJpbWFyeSBrZXlzLiAgSWYKdGhlIGRpYWxlY3QgY2FuIGhhbmRsZSBhdXRvbWF0aWMgYXNzaWdubWVudCBvZiBtb3JlIHRoYW4ganVzdAppbnRlZ2Vycywgc2VlIFRhcmdldGVkQXV0b0luY3JJbnNlcnRlci4KPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJMb2dnZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2xvZ2dpbmcuZ28jTDE0Ij5Mb2dnZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0xvZ2dlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4wLjQ8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIExvZ2dlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iTG9nZ2VyLlByaW50ZiIgZGF0YS1raW5kPSJtZXRob2QiPglQcmludGYoZm9ybWF0IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdiAuLi5pbnRlcmZhY2V7fSkKPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkxvZ2dlciBpcyB0aGUgdHlwZSB0aGF0IGdvcnAgdXNlcyB0byBsb2cgU1FMIHN0YXRlbWVudHMuClNlZSBEYk1hcC5UcmFjZU9uLgo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTUiPk15U1FMRGlhbGVjdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgTXlTUUxEaWFsZWN0IHN0cnVjdCB7Cgo8c3BhbiBpZD0iTXlTUUxEaWFsZWN0LkVuZ2luZSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBFbmdpbmUgaXMgdGhlIHN0b3JhZ2UgZW5naW5lIHRvIHVzZSAmIzM0O0lubm9EQiYjMzQ7IHZzICYjMzQ7TXlJU0FNJiMzNDsgZm9yIGV4YW1wbGU8L3NwYW4+Cjwvc3Bhbj4JRW5naW5lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKPHNwYW4gaWQ9Ik15U1FMRGlhbGVjdC5FbmNvZGluZyIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBFbmNvZGluZyBpcyB0aGUgY2hhcmFjdGVyIGVuY29kaW5nIHRvIHVzZSBmb3IgY3JlYXRlZCB0YWJsZXM8L3NwYW4+Cjwvc3Bhbj4JRW5jb2RpbmcgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkltcGxlbWVudGF0aW9uIG9mIERpYWxlY3QgZm9yIE15U1FMIGRhdGFiYXNlcy4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDkzIj5BdXRvSW5jckJpbmRWYWx1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgQXV0b0luY3JCaW5kVmFsdWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0w5NyI+QXV0b0luY3JJbnNlcnRTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuQXV0b0luY3JTdHIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMODkiPkF1dG9JbmNyU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuQXV0b0luY3JTdHIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjTXlTUUxEaWFsZWN0Ij5NeVNRTERpYWxlY3Q8L2E+KSBBdXRvSW5jclN0cigpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBhdXRvX2luY3JlbWVudAo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTM5Ij5CaW5kVmFyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIEJpbmRWYXIoaSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyAmIzM0Oz8mIzM0Owo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LkNyZWF0ZUluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDEyMiI+Q3JlYXRlSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIENyZWF0ZUluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTAyIj5DcmVhdGVUYWJsZVN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgQ3JlYXRlVGFibGVTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgZW5naW5lPSVzIGNoYXJzZXQ9JXMgIGJhc2VkIG9uIHZhbHVlcyBzdG9yZWQgb24gc3RydWN0CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDEyNiI+RHJvcEluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgRHJvcEluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTU5Ij5JZlNjaGVtYU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSWZUYWJsZUV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNjMiPklmVGFibGVFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5JZlRhYmxlRXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNjciPklmVGFibGVOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSW5zZXJ0QXV0b0luY3IiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTQzIj5JbnNlcnRBdXRvSW5jcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0Lkluc2VydEF1dG9JbmNyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSW5zZXJ0QXV0b0luY3IoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdC5RdWVyeVN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wyNCI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5RdWVyeVN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuUXVvdGVGaWVsZCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNDciPlF1b3RlRmllbGQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZUZpZWxkIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgUXVvdGVGaWVsZChmIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNTEiPlF1b3RlZFRhYmxlRm9yUXVlcnk8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LlNsZWVwQ2xhdXNlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDEzNCI+U2xlZXBDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5TbGVlcENsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIFNsZWVwQ2xhdXNlKHMgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LlRvU3FsVHlwZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wyNiI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuVG9TcWxUeXBlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxMzAiPlRydW5jYXRlQ2xhdXNlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjTXlTUUxEaWFsZWN0Ij5NeVNRTERpYWxlY3Q8L2E+KSBUcnVuY2F0ZUNsYXVzZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJOb0ZpZWxkSW5UeXBlRXJyb3IiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2Vycm9ycy5nbyNMMTQiPk5vRmllbGRJblR5cGVFcnJvcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgTm9GaWVsZEluVHlwZUVycm9yIHN0cnVjdCB7CjxzcGFuIGlkPSJOb0ZpZWxkSW5UeXBlRXJyb3IuVHlwZU5hbWUiIGRhdGEta2luZD0iZmllbGQiPglUeXBlTmFtZSAgICAgICAgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iTm9GaWVsZEluVHlwZUVycm9yLk1pc3NpbmdDb2xOYW1lcyIgZGF0YS1raW5kPSJmaWVsZCI+CU1pc3NpbmdDb2xOYW1lcyBbXTxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+QSBub24tZmF0YWwgZXJyb3IsIHdoZW4gYSBzZWxlY3QgcXVlcnkgcmV0dXJucyBjb2x1bW5zIHRoYXQgZG8gbm90IGV4aXN0CmFzIGZpZWxkcyBpbiB0aGUgc3RydWN0IGl0IGlzIGJlaW5nIG1hcHBlZCB0bwpUT0RPOiBkaXNjdXNzIHdldGhlciB0aGlzIG5lZWRzIGFuIGVycm9yLiBlbmNvZGluZy9qc29uIHNpbGVudGx5IGlnbm9yZXMgbWlzc2luZyBmaWVsZHMKPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpOb0ZpZWxkSW5UeXBlRXJyb3IpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9lcnJvcnMuZ28jTDE5Ij5FcnJvcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGVyciAqPGEgaHJlZj0iI05vRmllbGRJblR5cGVFcnJvciI+Tm9GaWVsZEluVHlwZUVycm9yPC9hPikgRXJyb3IoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+CiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTnVsbFRpbWUiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL251bGx0eXBlcy5nbyNMMTQiPk51bGxUaW1lPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOdWxsVGltZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIE51bGxUaW1lIHN0cnVjdCB7CjxzcGFuIGlkPSJOdWxsVGltZS5UaW1lIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVGltZSAgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI1RpbWUiPlRpbWU8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iTnVsbFRpbWUuVmFsaWQiIGRhdGEta2luZD0iZmllbGQiPglWYWxpZCA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPiA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVmFsaWQgaXMgdHJ1ZSBpZiBUaW1lIGlzIG5vdCBOVUxMPC9zcGFuPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+QSBudWxsYWJsZSBUaW1lIHZhbHVlCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik51bGxUaW1lLlNjYW4iIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKk51bGxUaW1lKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbnVsbHR5cGVzLmdvI0wyMCI+U2NhbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTnVsbFRpbWUuU2NhbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChudCAqPGEgaHJlZj0iI051bGxUaW1lIj5OdWxsVGltZTwvYT4pIFNjYW4odmFsdWUgaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNjYW4gaW1wbGVtZW50cyB0aGUgU2Nhbm5lciBpbnRlcmZhY2UuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJOdWxsVGltZS5WYWx1ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChOdWxsVGltZSkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL251bGx0eXBlcy5nbyNMNjAiPlZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOdWxsVGltZS5WYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChudCA8YSBocmVmPSIjTnVsbFRpbWUiPk51bGxUaW1lPC9hPikgVmFsdWUoKSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIiPmRyaXZlcjwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIjVmFsdWUiPlZhbHVlPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlZhbHVlIGltcGxlbWVudHMgdGhlIGRyaXZlciBWYWx1ZXIgaW50ZXJmYWNlLgo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcHRpbWlzdGljTG9ja0Vycm9yIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9sb2NrZXJyb3IuZ28jTDE1Ij5PcHRpbWlzdGljTG9ja0Vycm9yPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcHRpbWlzdGljTG9ja0Vycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgT3B0aW1pc3RpY0xvY2tFcnJvciBzdHJ1Y3Qgewo8c3BhbiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5UYWJsZU5hbWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVGFibGUgbmFtZSB3aGVyZSB0aGUgbG9jayBlcnJvciBvY2N1cnJlZDwvc3Bhbj4KPC9zcGFuPglUYWJsZU5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5LZXlzIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIFByaW1hcnkga2V5IHZhbHVlcyBvZiB0aGUgcm93IGJlaW5nIHVwZGF0ZWQvZGVsZXRlZDwvc3Bhbj4KPC9zcGFuPglLZXlzIFtdaW50ZXJmYWNle30KCjxzcGFuIGlkPSJPcHRpbWlzdGljTG9ja0Vycm9yLlJvd0V4aXN0cyIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyB0cnVlIGlmIGEgcm93IHdhcyBmb3VuZCB3aXRoIHRob3NlIGtleXMsIGluZGljYXRpbmcgdGhlPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBMb2NhbFZlcnNpb24gaXMgc3RhbGUuICBmYWxzZSBpZiBubyB2YWx1ZSB3YXMgZm91bmQgd2l0aCB0aG9zZTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBrZXlzLCBzdWdnZXN0aW5nIHRoZSByb3cgaGFzIGJlZW4gZGVsZXRlZCBzaW5jZSBsb2FkZWQsIG9yPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHdhcyBuZXZlciBpbnNlcnRlZCB0byBiZWdpbiB3aXRoPC9zcGFuPgoJUm93RXhpc3RzIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cgo8c3BhbiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5Mb2NhbFZlcnNpb24iIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVmVyc2lvbiB2YWx1ZSBvbiB0aGUgc3RydWN0IHBhc3NlZCB0byBVcGRhdGUvRGVsZXRlLiBUaGlzIHZhbHVlIGlzPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBvdXQgb2Ygc3luYyB3aXRoIHRoZSBkYXRhYmFzZS48L3NwYW4+CglMb2NhbFZlcnNpb24gPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5PcHRpbWlzdGljTG9ja0Vycm9yIGlzIHJldHVybmVkIGJ5IFVwZGF0ZSgpIG9yIERlbGV0ZSgpIGlmIHRoZQpzdHJ1Y3QgYmVpbmcgbW9kaWZpZWQgaGFzIGEgVmVyc2lvbiBmaWVsZCBhbmQgdGhlIHZhbHVlIGlzIG5vdCBlcXVhbCB0bwp0aGUgY3VycmVudCB2YWx1ZSBpbiB0aGUgZGF0YWJhc2UKPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5FcnJvciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChPcHRpbWlzdGljTG9ja0Vycm9yKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbG9ja2Vycm9yLmdvI0wzNCI+RXJyb3I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09wdGltaXN0aWNMb2NrRXJyb3IuRXJyb3IiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZSA8YSBocmVmPSIjT3B0aW1pc3RpY0xvY2tFcnJvciI+T3B0aW1pc3RpY0xvY2tFcnJvcjwvYT4pIEVycm9yKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5FcnJvciByZXR1cm5zIGEgZGVzY3JpcHRpb24gb2YgdGhlIGNhdXNlIG9mIHRoZSBsb2NrIGVycm9yCjwvcD4KCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxNCI+T3JhY2xlRGlhbGVjdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIE9yYWNsZURpYWxlY3Qgc3RydWN0e308L3ByZT4KICAgIDwvZGl2PgogIDxwPkltcGxlbWVudGF0aW9uIG9mIERpYWxlY3QgZm9yIE9yYWNsZSBkYXRhYmFzZXMuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w3MiI+QXV0b0luY3JCaW5kVmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIEF1dG9JbmNyQmluZFZhbHVlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE9yYWNsZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X29yYWNsZS5nbyNMNzYiPkF1dG9JbmNySW5zZXJ0U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPk9yYWNsZURpYWxlY3Q8L2E+KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChPcmFjbGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9vcmFjbGUuZ28jTDY4Ij5BdXRvSW5jclN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5BdXRvSW5jclN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgQXV0b0luY3JTdHIoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgZW1wdHkgc3RyaW5nCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w5MCI+QmluZFZhcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5CaW5kVmFyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPk9yYWNsZURpYWxlY3Q8L2E+KSBCaW5kVmFyKGkgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgJiMzNDskKGkrMSkmIzM0Owo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChPcmFjbGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9vcmFjbGUuZ28jTDE4Ij5DcmVhdGVJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgQ3JlYXRlSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w4MSI+Q3JlYXRlVGFibGVTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIENyZWF0ZVRhYmxlU3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zIHN1ZmZpeAo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wyMCI+RHJvcEluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgRHJvcEluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE9yYWNsZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X29yYWNsZS5nbyNMMTI5Ij5JZlNjaGVtYU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LklmVGFibGVFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMzMiPklmVGFibGVFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZUV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMzciPklmVGFibGVOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0Lkluc2VydFF1ZXJ5VG9UYXJnZXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w5NSI+SW5zZXJ0UXVlcnlUb1RhcmdldDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5JbnNlcnRRdWVyeVRvVGFyZ2V0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPk9yYWNsZURpYWxlY3Q8L2E+KSBJbnNlcnRRdWVyeVRvVGFyZ2V0KGV4ZWMgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIGluc2VydFNxbCwgaWRTcWwgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+QWZ0ZXIgZXhlY3V0aW5nIHRoZSBpbnNlcnQgdXNlcyB0aGUgQ29sTWFwIElkUXVlcnkgdG8gZ2V0IHRoZSBnZW5lcmF0ZWQgaWQKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxNiI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMTciPlF1b3RlRmllbGQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVGaWVsZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgUXVvdGVGaWVsZChmIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMjEiPlF1b3RlZFRhYmxlRm9yUXVlcnk8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5Ub1NxbFR5cGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wyMiI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlRvU3FsVHlwZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w4NSI+VHJ1bmNhdGVDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIFRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZVN0cmluZyIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMMjAiPk9yYWNsZVN0cmluZzwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlU3RyaW5nIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgT3JhY2xlU3RyaW5nIHN0cnVjdCB7CjxzcGFuIGlkPSJPcmFjbGVTdHJpbmcuTnVsbFN0cmluZyIgZGF0YS1raW5kPSJmaWVsZCI+CTxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsU3RyaW5nIj5OdWxsU3RyaW5nPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+T3JhY2xlU3RyaW5nIChlbXB0eSBzdHJpbmcgaXMgbnVsbCkKVE9ETzogbW92ZSB0byBkaWFsZWN0L29yYWNsZT8sIHJlbmFtZSB0byBTdHJpbmc/CjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZVN0cmluZy5TY2FuIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpPcmFjbGVTdHJpbmcpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9nb3JwLmdvI0wyNSI+U2NhbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlU3RyaW5nLlNjYW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAob3MgKjxhIGhyZWY9IiNPcmFjbGVTdHJpbmciPk9yYWNsZVN0cmluZzwvYT4pIFNjYW4odmFsdWUgaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNjYW4gaW1wbGVtZW50cyB0aGUgU2Nhbm5lciBpbnRlcmZhY2UuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVTdHJpbmcuVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlU3RyaW5nKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMMzUiPlZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVTdHJpbmcuVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAob3MgPGEgaHJlZj0iI09yYWNsZVN0cmluZyI+T3JhY2xlU3RyaW5nPC9hPikgVmFsdWUoKSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIiPmRyaXZlcjwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIjVmFsdWUiPlZhbHVlPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlZhbHVlIGltcGxlbWVudHMgdGhlIGRyaXZlciBWYWx1ZXIgaW50ZXJmYWNlLgo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDE0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFBvc3RncmVzRGlhbGVjdCBzdHJ1Y3Qgewo8c3BhbiBpZD0iUG9zdGdyZXNEaWFsZWN0Lkxvd2VyY2FzZUZpZWxkcyIgZGF0YS1raW5kPSJmaWVsZCI+CUxvd2VyY2FzZUZpZWxkcyA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBjb250YWlucyBmaWx0ZXJlZCBvciB1bmV4cG9ydGVkIGZpZWxkczwvc3Bhbj4KfTwvcHJlPgogICAgPC9kaXY+CiAgCjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMNzEiPkF1dG9JbmNyQmluZFZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBBdXRvSW5jckJpbmRWYWx1ZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDc1Ij5BdXRvSW5jckluc2VydFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+UG9zdGdyZXNEaWFsZWN0PC9hPikgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0w2NyI+QXV0b0luY3JTdHI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5BdXRvSW5jclN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIEF1dG9JbmNyU3RyKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zIGVtcHR5IHN0cmluZwo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTAxIj5CaW5kVmFyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIEJpbmRWYXIoaSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyAmIzM0OyQoaSsxKSYjMzQ7CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMODQiPkNyZWF0ZUluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBDcmVhdGVJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDgwIj5DcmVhdGVUYWJsZVN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+UG9zdGdyZXNEaWFsZWN0PC9hPikgQ3JlYXRlVGFibGVTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgc3VmZml4CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDg4Ij5Ecm9wSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBEcm9wSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0wxMzkiPklmU2NoZW1hTm90RXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDE0MyI+SWZUYWJsZUV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LklmVGFibGVFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDE0NyI+SWZUYWJsZU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDEwNSI+SW5zZXJ0QXV0b0luY3JUb1RhcmdldDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0KGV4ZWMgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIGluc2VydFNxbCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIHRhcmdldCBpbnRlcmZhY2V7fSwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTkiPlF1ZXJ5U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBRdWVyeVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTI0Ij5RdW90ZUZpZWxkPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVvdGVGaWVsZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFF1b3RlRmllbGQoZiA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTMxIj5RdW90ZWRUYWJsZUZvclF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5TbGVlcENsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0w5NiI+U2xlZXBDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5TbGVlcENsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFNsZWVwQ2xhdXNlKHMgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LlRvU3FsVHlwZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0wyMSI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuVG9TcWxUeXBlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+UG9zdGdyZXNEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0w5MiI+VHJ1bmNhdGVDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMyI+U25vd2ZsYWtlRGlhbGVjdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNub3dmbGFrZURpYWxlY3Qgc3RydWN0IHsKPHNwYW4gaWQ9IlNub3dmbGFrZURpYWxlY3QuTG93ZXJjYXNlRmllbGRzIiBkYXRhLWtpbmQ9ImZpZWxkIj4JTG93ZXJjYXNlRmllbGRzIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICAKPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0w3OCI+QXV0b0luY3JCaW5kVmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIEF1dG9JbmNyQmluZFZhbHVlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMODIiPkF1dG9JbmNySW5zZXJ0U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYzLjEuMDwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QiPlNub3dmbGFrZURpYWxlY3Q8L2E+KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTbm93Zmxha2VEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zbm93Zmxha2UuZ28jTDc0Ij5BdXRvSW5jclN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jclN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgQXV0b0luY3JTdHIoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgZW1wdHkgc3RyaW5nCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMDQiPkJpbmRWYXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgQmluZFZhcihpIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zICYjMzQ7JChpKzEpJiMzNDsKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0w5MSI+Q3JlYXRlSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIENyZWF0ZUluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMODciPkNyZWF0ZVRhYmxlU3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYzLjEuMDwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QiPlNub3dmbGFrZURpYWxlY3Q8L2E+KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBzdWZmaXgKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMOTUiPkRyb3BJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIERyb3BJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTbm93Zmxha2VEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zbm93Zmxha2UuZ28jTDE0MiI+SWZTY2hlbWFOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMMTQ2Ij5JZlRhYmxlRXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LklmVGFibGVFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMMTUwIj5JZlRhYmxlTm90RXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMMTA4Ij5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIEluc2VydEF1dG9JbmNyVG9UYXJnZXQoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFyZ2V0IGludGVyZmFjZXt9LCBwYXJhbXMgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxOCI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMjciPlF1b3RlRmllbGQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVvdGVGaWVsZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgUXVvdGVGaWVsZChmIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMzQiPlF1b3RlZFRhYmxlRm9yUXVlcnk8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5Ub1NxbFR5cGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wyMCI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LlRvU3FsVHlwZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0w5OSI+VHJ1bmNhdGVDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIFRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbEV4ZWN1dG9yIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9nb3JwLmdvI0w5MiI+U3FsRXhlY3V0b3I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbEV4ZWN1dG9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgU3FsRXhlY3V0b3IgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLldpdGhDb250ZXh0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVdpdGhDb250ZXh0KGN0eCA8YSBocmVmPSIvY29udGV4dCI+Y29udGV4dDwvYT4uPGEgaHJlZj0iL2NvbnRleHQjQ29udGV4dCI+Q29udGV4dDwvYT4pIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuR2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUdldChpIGludGVyZmFjZXt9LCBrZXlzIC4uLmludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUluc2VydChsaXN0IC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuVXBkYXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVVwZGF0ZShsaXN0IC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5EZWxldGUiIGRhdGEta2luZD0ibWV0aG9kIj4JRGVsZXRlKGxpc3QgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLkV4ZWMiIGRhdGEta2luZD0ibWV0aG9kIj4JRXhlYyhxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjUmVzdWx0Ij5SZXN1bHQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLlNlbGVjdCIgZGF0YS1raW5kPSJtZXRob2QiPglTZWxlY3QoaSBpbnRlcmZhY2V7fSwgcXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoW11pbnRlcmZhY2V7fSwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5TZWxlY3RJbnQiIGRhdGEta2luZD0ibWV0aG9kIj4JU2VsZWN0SW50KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJtZXRob2QiPglTZWxlY3ROdWxsSW50KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsSW50NjQiPk51bGxJbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuU2VsZWN0RmxvYXQiIGRhdGEta2luZD0ibWV0aG9kIj4JU2VsZWN0RmxvYXQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jZmxvYXQ2NCI+ZmxvYXQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuU2VsZWN0TnVsbEZsb2F0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNlbGVjdE51bGxGbG9hdChxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjTnVsbEZsb2F0NjQiPk51bGxGbG9hdDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5TZWxlY3RTdHIiIGRhdGEta2luZD0ibWV0aG9kIj4JU2VsZWN0U3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5TZWxlY3ROdWxsU3RyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNlbGVjdE51bGxTdHIocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI051bGxTdHJpbmciPk51bGxTdHJpbmc8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLlNlbGVjdE9uZSIgZGF0YS1raW5kPSJtZXRob2QiPglTZWxlY3RPbmUoaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4KPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5RdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiPglRdWVyeShxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI1Jvd3MiPlJvd3M8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLlF1ZXJ5Um93IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVF1ZXJ5Um93KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNSb3ciPlJvdzwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlNxbEV4ZWN1dG9yIGV4cG9zZXMgZ29ycCBvcGVyYXRpb25zIHRoYXQgY2FuIGJlIHJ1biBmcm9tIFByZS9Qb3N0Cmhvb2tzLiAgVGhpcyBoaWRlcyB3aGV0aGVyIHRoZSBjdXJyZW50IG9wZXJhdGlvbiB0aGF0IHRyaWdnZXJlZCB0aGUKaG9vayBpcyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+PHA+U2VlIHRoZSBEYk1hcCBmdW5jdGlvbiBkb2NzIGZvciBlYWNoIG9mIHRoZSBmdW5jdGlvbnMgYmVsb3cgZm9yIG1vcmUKaW5mb3JtYXRpb24uCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28jTDE3Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgU3FsU2VydmVyRGlhbGVjdCBzdHJ1Y3QgewoKPHNwYW4gaWQ9IlNxbFNlcnZlckRpYWxlY3QuVmVyc2lvbiIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJZiBzZXQgdG8gJiMzNDsyMDA1JiMzNDsgbGVnYWN5IGRhdGF0eXBlcyB3aWxsIGJlIHVzZWQ8L3NwYW4+Cjwvc3Bhbj4JVmVyc2lvbiA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KfTwvcHJlPgogICAgPC9kaXY+CiAgCjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMODUiPkF1dG9JbmNyQmluZFZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPlNxbFNlcnZlckRpYWxlY3Q8L2E+KSBBdXRvSW5jckJpbmRWYWx1ZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+RW1wdHkgc3RyaW5nIHJlbW92ZXMgYXV0b2luY3JlbWVudCBjb2x1bW5zIGZyb20gdGhlIElOU0VSVCBzdGF0ZW1lbnRzLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxTZXJ2ZXJEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28jTDg5Ij5BdXRvSW5jckluc2VydFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JTdHIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0w4MCI+QXV0b0luY3JTdHI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JTdHIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIEF1dG9JbmNyU3RyKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zIGF1dG9faW5jcmVtZW50CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMDAiPkJpbmRWYXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgQmluZFZhcihpIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zICYjMzQ7PyYjMzQ7CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkNyZWF0ZUluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTQ0Ij5DcmVhdGVJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgQ3JlYXRlSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0w5MyI+Q3JlYXRlVGFibGVTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIENyZWF0ZVRhYmxlU3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxTZXJ2ZXJEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28jTDE0NSI+RHJvcEluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgRHJvcEluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTIxIj5JZlNjaGVtYU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMjYiPklmVGFibGVFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSWZUYWJsZUV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMzUiPklmVGFibGVOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0Lkluc2VydEF1dG9JbmNyIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTA0Ij5JbnNlcnRBdXRvSW5jcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JbnNlcnRBdXRvSW5jciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSW5zZXJ0QXV0b0luY3IoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMTkiPlF1ZXJ5U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1ZXJ5U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPlNxbFNlcnZlckRpYWxlY3Q8L2E+KSBRdWVyeVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdC5RdW90ZUZpZWxkIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTA4Ij5RdW90ZUZpZWxkPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1b3RlRmllbGQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIFF1b3RlRmllbGQoZiA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTEyIj5RdW90ZWRUYWJsZUZvclF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuVG9TcWxUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMjMiPlRvU3FsVHlwZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5Ub1NxbFR5cGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIFRvU3FsVHlwZSh2YWwgPGEgaHJlZj0iL3JlZmxlY3QiPnJlZmxlY3Q8L2E+LjxhIGhyZWY9Ii9yZWZsZWN0I1R5cGUiPlR5cGU8L2E+LCBtYXhzaXplIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPiwgaXNBdXRvSW5jciA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMOTUiPlRydW5jYXRlQ2xhdXNlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPlNxbFNlcnZlckRpYWxlY3Q8L2E+KSBUcnVuY2F0ZUNsYXVzZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxUeXBlciIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMNDYiPlNxbFR5cGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxUeXBlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNxbFR5cGVyIGludGVyZmFjZSB7CjxzcGFuIGlkPSJTcWxUeXBlci5TcWxUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNxbFR5cGUoKSA8YSBocmVmPSIvZGF0YWJhc2Uvc3FsL2RyaXZlciI+ZHJpdmVyPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsL2RyaXZlciNWYWx1ZSI+VmFsdWU8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TcWxUeXBlciBpcyBhIHR5cGUgdGhhdCByZXR1cm5zIGl0cyBkYXRhYmFzZSB0eXBlLiAgTW9zdCBvZiB0aGUKdGltZSwgdGhlIHR5cGUgY2FuIGp1c3QgdXNlICYjMzQ7ZGF0YWJhc2Uvc3FsL2RyaXZlciYjMzQ7LlZhbHVlcjsgYnV0IHdoZW4KaXQgcmV0dXJucyBuaWwgZm9yIGl0cyBlbXB0eSB2YWx1ZSwgaXQgbmVlZHMgdG8gaW1wbGVtZW50IFNxbFR5cGVyCnRvIGhhdmUgaXRzIGNvbHVtbiB0eXBlIGRldGVjdGVkIHByb3Blcmx5IGR1cmluZyB0YWJsZSBjcmVhdGlvbi4KPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0IiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMMTIiPlNxbGl0ZURpYWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBTcWxpdGVEaWFsZWN0IHN0cnVjdCB7Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIAo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDU2Ij5BdXRvSW5jckJpbmRWYWx1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij5TcWxpdGVEaWFsZWN0PC9hPikgQXV0b0luY3JCaW5kVmFsdWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w2MCI+QXV0b0luY3JJbnNlcnRTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LkF1dG9JbmNyU3RyIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMNTIiPkF1dG9JbmNyU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkF1dG9JbmNyU3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBBdXRvSW5jclN0cigpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBhdXRvaW5jcmVtZW50CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w4NSI+QmluZFZhcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5CaW5kVmFyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBCaW5kVmFyKGkgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgJiMzNDs/JiMzNDsKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w2OSI+Q3JlYXRlSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIENyZWF0ZUluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMNjUiPkNyZWF0ZVRhYmxlU3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBzdWZmaXgKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMNzMiPkRyb3BJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIERyb3BJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDEwMiI+SWZTY2hlbWFOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMMTA2Ij5JZlRhYmxlRXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LklmVGFibGVFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMMTEwIj5JZlRhYmxlTm90RXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JbnNlcnRBdXRvSW5jciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDg5Ij5JbnNlcnRBdXRvSW5jcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5JbnNlcnRBdXRvSW5jciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij5TcWxpdGVEaWFsZWN0PC9hPikgSW5zZXJ0QXV0b0luY3IoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0wxNiI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w5MyI+UXVvdGVGaWVsZDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5RdW90ZUZpZWxkIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBRdW90ZUZpZWxkKGYgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDk4Ij5RdW90ZWRUYWJsZUZvclF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPnNxbGl0ZSBkb2VzIG5vdCBoYXZlIHNjaGVtYXMgbGlrZSBQb3N0Z3JlU1FMIGRvZXMsIHNvIGp1c3QgZXNjYXBlIGl0IGxpa2Ugbm9ybWFsCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LlRvU3FsVHlwZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDE4Ij5Ub1NxbFR5cGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuVG9TcWxUeXBlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBUb1NxbFR5cGUodmFsIDxhIGhyZWY9Ii9yZWZsZWN0Ij5yZWZsZWN0PC9hPi48YSBocmVmPSIvcmVmbGVjdCNUeXBlIj5UeXBlPC9hPiwgbWF4c2l6ZSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4sIGlzQXV0b0luY3IgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDgwIj5UcnVuY2F0ZUNsYXVzZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij5TcWxpdGVEaWFsZWN0PC9hPikgVHJ1bmNhdGVDbGF1c2UoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPldpdGggc3FsaXRlLCB0aGVyZSB0ZWNobmljYWxseSBpc24mIzM5O3QgYSBUUlVOQ0FURSBzdGF0ZW1lbnQsCmJ1dCBhIERFTEVURSBGUk9NIHVzZXMgYSB0cnVuY2F0ZSBvcHRpbWl6YXRpb246CjxhIGhyZWY9Imh0dHA6Ly93d3cuc3FsaXRlLm9yZy9sYW5nX2RlbGV0ZS5odG1sIj5odHRwOi8vd3d3LnNxbGl0ZS5vcmcvbGFuZ19kZWxldGUuaHRtbDwvYT4KPC9wPgoKICAKCiAgPC9kaXY+CiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVGFibGVNYXAiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RhYmxlLmdvI0wxNiI+VGFibGVNYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RhYmxlTWFwIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVGFibGVNYXAgc3RydWN0IHsKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOYW1lIG9mIGRhdGFiYXNlIHRhYmxlLjwvc3Bhbj4KPHNwYW4gaWQ9IlRhYmxlTWFwLlRhYmxlTmFtZSIgZGF0YS1raW5kPSJmaWVsZCI+CVRhYmxlTmFtZSAgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iVGFibGVNYXAuU2NoZW1hTmFtZSIgZGF0YS1raW5kPSJmaWVsZCI+CVNjaGVtYU5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj4KPHNwYW4gaWQ9IlRhYmxlTWFwLkNvbHVtbnMiIGRhdGEta2luZD0iZmllbGQiPglDb2x1bW5zIFtdKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlRhYmxlTWFwIHJlcHJlc2VudHMgYSBtYXBwaW5nIGJldHdlZW4gYSBHbyBzdHJ1Y3QgYW5kIGEgZGF0YWJhc2UgdGFibGUKVXNlIGRibWFwLkFkZFRhYmxlKCkgb3IgZGJtYXAuQWRkVGFibGVXaXRoTmFtZSgpIHRvIGNyZWF0ZSB0aGVzZQo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5BZGRJbmRleCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVGFibGVNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90YWJsZS5nbyNMMTM5Ij5BZGRJbmRleDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVGFibGVNYXAuQWRkSW5kZXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIEFkZEluZGV4KG5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBpZHh0eXBlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY29sdW1ucyBbXTxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNJbmRleE1hcCI+SW5kZXhNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5BZGRJbmRleCByZWdpc3RlcnMgdGhlIGluZGV4IHdpdGggZ29ycCBmb3Igc3BlY2lmaWVkIHRhYmxlIHdpdGggZ2l2ZW4gcGFyYW1ldGVycy4KVGhpcyBvcGVyYXRpb24gaXMgaWRlbXBvdGVudC4gSWYgaW5kZXggaXMgYWxyZWFkeSBtYXBwZWQsIHRoZQpleGlzdGluZyAqSW5kZXhNYXAgaXMgcmV0dXJuZWQKRnVuY3Rpb24gd2lsbCBwYW5pYyBpZiBvbmUgb2YgdGhlIGdpdmVuIGZvciBpbmRleCBjb2x1bW5zIGRvZXMgbm90IGV4aXN0cwo8L3A+PHA+QXV0b21hdGljYWxseSBjYWxscyBSZXNldFNxbCgpIHRvIGVuc3VyZSBTUUwgc3RhdGVtZW50cyBhcmUgcmVnZW5lcmF0ZWQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5Db2xNYXAiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDEwMiI+Q29sTWFwPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5Db2xNYXAiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIENvbE1hcChmaWVsZCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Db2xNYXAgcmV0dXJucyB0aGUgQ29sdW1uTWFwIHBvaW50ZXIgbWF0Y2hpbmcgdGhlIGdpdmVuIHN0cnVjdCBmaWVsZApuYW1lLiAgSXQgcGFuaWNzIGlmIHRoZSBzdHJ1Y3QgZG9lcyBub3QgY29udGFpbiBhIGZpZWxkIG1hdGNoaW5nIHRoaXMKbmFtZS4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhYmxlTWFwLkRyb3BJbmRleCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVGFibGVNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMMTgxIj5Ecm9wSW5kZXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RhYmxlTWFwLkRyb3BJbmRleCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgRHJvcEluZGV4KG5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5JZHhNYXAiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDEyMyI+SWR4TWFwPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5JZHhNYXAiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIElkeE1hcChmaWVsZCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjSW5kZXhNYXAiPkluZGV4TWFwPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+SWR4TWFwIHJldHVybnMgdGhlIEluZGV4TWFwIHBvaW50ZXIgbWF0Y2hpbmcgdGhlIGdpdmVuIGluZGV4IG5hbWUuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5SZXNldFNxbCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVGFibGVNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90YWJsZS5nbyNMMzYiPlJlc2V0U3FsPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5SZXNldFNxbCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgUmVzZXRTcWwoKTwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmVzZXRTcWwgcmVtb3ZlcyBjYWNoZWQgaW5zZXJ0L3VwZGF0ZS9zZWxlY3QvZGVsZXRlIFNRTCBzdHJpbmdzCmFzc29jaWF0ZWQgd2l0aCB0aGlzIFRhYmxlTWFwLiAgQ2FsbCB0aGlzIGlmIHlvdSYjMzk7dmUgbW9kaWZpZWQKYW55IGNvbHVtbiBuYW1lcyBvciB0aGUgdGFibGUgbmFtZSBpdHNlbGYuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5TZXRLZXlzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUYWJsZU1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RhYmxlLmdvI0w1MSI+U2V0S2V5czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVGFibGVNYXAuU2V0S2V5cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgU2V0S2V5cyhpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+LCBmaWVsZE5hbWVzIC4uLjxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRLZXlzIGxldHMgeW91IHNwZWNpZnkgdGhlIGZpZWxkcyBvbiBhIHN0cnVjdCB0aGF0IG1hcCB0byBwcmltYXJ5CmtleSBjb2x1bW5zIG9uIHRoZSB0YWJsZS4gIElmIGlzQXV0b0luY3IgaXMgc2V0LCByZXN1bHQuTGFzdEluc2VydElkKCkKd2lsbCBiZSB1c2VkIGFmdGVyIElOU0VSVCB0byBiaW5kIHRoZSBnZW5lcmF0ZWQgaWQgdG8gdGhlIEdvIHN0cnVjdC4KPC9wPjxwPkF1dG9tYXRpY2FsbHkgY2FsbHMgUmVzZXRTcWwoKSB0byBlbnN1cmUgU1FMIHN0YXRlbWVudHMgYXJlIHJlZ2VuZXJhdGVkLgo8L3A+PHA+UGFuaWNzIGlmIGlzQXV0b0luY3IgaXMgdHJ1ZSwgYW5kIGZpZWxkTmFtZXMgbGVuZ3RoICE9IDEKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhYmxlTWFwLlNldFVuaXF1ZVRvZ2V0aGVyIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUYWJsZU1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RhYmxlLmdvI0w3NyI+U2V0VW5pcXVlVG9nZXRoZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RhYmxlTWFwLlNldFVuaXF1ZVRvZ2V0aGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+KSBTZXRVbmlxdWVUb2dldGhlcihmaWVsZE5hbWVzIC4uLjxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRVbmlxdWVUb2dldGhlciBsZXRzIHlvdSBzcGVjaWZ5IHVuaXF1ZW5lc3MgY29uc3RyYWludHMgYWNyb3NzIG11bHRpcGxlCmNvbHVtbnMgb24gdGhlIHRhYmxlLiBFYWNoIGNhbGwgYWRkcyBhbiBhZGRpdGlvbmFsIGNvbnN0cmFpbnQgZm9yIHRoZQpzcGVjaWZpZWQgY29sdW1ucy4KPC9wPjxwPkF1dG9tYXRpY2FsbHkgY2FsbHMgUmVzZXRTcWwoKSB0byBlbnN1cmUgU1FMIHN0YXRlbWVudHMgYXJlIHJlZ2VuZXJhdGVkLgo8L3A+PHA+UGFuaWNzIGlmIGZpZWxkTmFtZXMgbGVuZ3RoICZsdDsgMi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhYmxlTWFwLlNldFZlcnNpb25Db2wiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDE2NCI+U2V0VmVyc2lvbkNvbDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVGFibGVNYXAuU2V0VmVyc2lvbkNvbCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgU2V0VmVyc2lvbkNvbChmaWVsZCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRWZXJzaW9uQ29sIHNldHMgdGhlIGNvbHVtbiB0byB1c2UgYXMgdGhlIFZlcnNpb24gZmllbGQuICBCeSBkZWZhdWx0CnRoZSAmIzM0O1ZlcnNpb24mIzM0OyBmaWVsZCBpcyB1c2VkLiAgUmV0dXJucyB0aGUgY29sdW1uIGZvdW5kLCBvciBwYW5pY3MKaWYgdGhlIHN0cnVjdCBkb2VzIG5vdCBjb250YWluIGEgZmllbGQgbWF0Y2hpbmcgdGhpcyBuYW1lLgo8L3A+PHA+QXV0b21hdGljYWxseSBjYWxscyBSZXNldFNxbCgpIHRvIGVuc3VyZSBTUUwgc3RhdGVtZW50cyBhcmUgcmVnZW5lcmF0ZWQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5TcWxGb3JDcmVhdGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDE3MyI+U3FsRm9yQ3JlYXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5TcWxGb3JDcmVhdGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIFNxbEZvckNyZWF0ZShpZk5vdEV4aXN0cyA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TcWxGb3JDcmVhdGVUYWJsZSBnZXRzIGEgc2VxdWVuY2Ugb2YgU1FMIGNvbW1hbmRzIHRoYXQgd2lsbCBjcmVhdGUKdGhlIHNwZWNpZmllZCB0YWJsZSBhbmQgYW55IGFzc29jaWF0ZWQgc2NoZW1hCjwvcD4KCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhcmdldFF1ZXJ5SW5zZXJ0ZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3QuZ28jTDkyIj5UYXJnZXRRdWVyeUluc2VydGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYXJnZXRRdWVyeUluc2VydGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVGFyZ2V0UXVlcnlJbnNlcnRlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVGFyZ2V0UXVlcnlJbnNlcnRlci5JbnNlcnRRdWVyeVRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUYXJnZXRRdWVyeUluc2VydGVyIHJ1bnMgYW4gaW5zZXJ0IG9wZXJhdGlvbiBhbmQgYXNzaWducyB0aGU8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHByaW1hcnkga2V5IHJldHJpdmVkIGJ5IHRoZSBxdWVyeTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBleHRyYWN0ZWQgZnJvbSB0aGUgR2VuZXJhdGVkSWRRdWVyeSBmaWVsZCBvZiB0aGUgaWQgY29sdW1uLjwvc3Bhbj4KCUluc2VydFF1ZXJ5VG9UYXJnZXQoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsLCBpZFNxbCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIHRhcmdldCBpbnRlcmZhY2V7fSwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlRhcmdldFF1ZXJ5SW5zZXJ0ZXIgaXMgaW1wbGVtZW50ZWQgYnkgZGlhbGVjdHMgdGhhdCBjYW4gcGVyZm9ybQphc3NpZ25tZW50IG9mIGludGVnZXIgcHJpbWFyeSBrZXkgdHlwZSBieSBleGVjdXRpbmcgYSBxdWVyeQpsaWtlICYjMzQ7c2VsZWN0IHNlcXVlbmNlLmN1cnJ2YWwgZnJvbSBkdWFsJiMzNDsuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0LmdvI0w4MSI+VGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBUYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXIgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IlRhcmdldGVkQXV0b0luY3JJbnNlcnRlci5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0IHJ1bnMgYW4gaW5zZXJ0IG9wZXJhdGlvbiBhbmQgYXNzaWducyB0aGU8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHByaW1hcnkga2V5IGRpcmVjdGx5IHRvIHRoZSBwYXNzZWQgaW48L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdGFyZ2V0LiAgVGhlIHRhcmdldCBzaG91bGQgYmUgYSBwb2ludGVyIHRvIHRoZSBwcmltYXJ5IGtleTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBmaWVsZCBvZiB0aGUgdmFsdWUgYmVpbmcgaW5zZXJ0ZWQuPC9zcGFuPgoJSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+LCBpbnNlcnRTcWwgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5UYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXIgaXMgaW1wbGVtZW50ZWQgYnkgZGlhbGVjdHMgdGhhdCBjYW4KcGVyZm9ybSBhdXRvbWF0aWMgYXNzaWdubWVudCBvZiBhbnkgcHJpbWFyeSBrZXkgdHlwZSAoaS5lLiBzdHJpbmdzCmZvciB1dWlkcywgaW50ZWdlcnMgZm9yIHNlcmlhbHMsIGV0YykuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24iIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wxNyI+VHJhbnNhY3Rpb248L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVHJhbnNhY3Rpb24gc3RydWN0IHsKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBjb250YWlucyBmaWx0ZXJlZCBvciB1bmV4cG9ydGVkIGZpZWxkczwvc3Bhbj4KfTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VHJhbnNhY3Rpb24gcmVwcmVzZW50cyBhIGRhdGFiYXNlIHRyYW5zYWN0aW9uLgpJbnNlcnQvVXBkYXRlL0RlbGV0ZS9HZXQvRXhlYyBvcGVyYXRpb25zIHdpbGwgYmUgcnVuIGluIHRoZSBjb250ZXh0Cm9mIHRoYXQgdHJhbnNhY3Rpb24uICBUcmFuc2FjdGlvbnMgc2hvdWxkIGJlIHRlcm1pbmF0ZWQgd2l0aAphIGNhbGwgdG8gQ29tbWl0KCkgb3IgUm9sbGJhY2soKQo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5Db21taXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDE0MiI+Q29tbWl0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5Db21taXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIENvbW1pdCgpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkNvbW1pdCBjb21taXRzIHRoZSB1bmRlcmx5aW5nIGRhdGFiYXNlIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uRGVsZXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0w0NyI+RGVsZXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5EZWxldGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIERlbGV0ZShsaXN0IC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkRlbGV0ZSBoYXMgdGhlIHNhbWUgYmVoYXZpb3IgYXMgRGJNYXAuRGVsZXRlKCksIGJ1dCBydW5zIGluIGEgdHJhbnNhY3Rpb24uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5FeGVjIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0w2NiI+RXhlYzwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uRXhlYyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgRXhlYyhxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjUmVzdWx0Ij5SZXN1bHQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+RXhlYyBoYXMgdGhlIHNhbWUgYmVoYXZpb3IgYXMgRGJNYXAuRXhlYygpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uR2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0w1MiI+R2V0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5HZXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIEdldChpIGludGVyZmFjZXt9LCBrZXlzIC4uLmludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5HZXQgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLkdldCgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wzMiI+SW5zZXJ0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5JbnNlcnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIEluc2VydChsaXN0IC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5JbnNlcnQgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLkluc2VydCgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uUHJlcGFyZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMjA5Ij5QcmVwYXJlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5QcmVwYXJlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBQcmVwYXJlKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKCo8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjU3RtdCI+U3RtdDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5QcmVwYXJlIGhhcyB0aGUgc2FtZSBiZWhhdmlvciBhcyBEYk1hcC5QcmVwYXJlKCksIGJ1dCBydW5zIGluIGEgdHJhbnNhY3Rpb24uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5RdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMjI5Ij5RdWVyeTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uUXVlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFF1ZXJ5KHEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoKjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNSb3dzIj5Sb3dzPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlF1ZXJ5Um93IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wyMTciPlF1ZXJ5Um93PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5RdWVyeVJvdyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgUXVlcnlSb3cocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI1JvdyI+Um93PC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uUmVsZWFzZVNhdmVwb2ludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTk4Ij5SZWxlYXNlU2F2ZXBvaW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5SZWxlYXNlU2F2ZXBvaW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBSZWxlYXNlU2F2ZXBvaW50KHNhdmVwb2ludCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJlbGVhc2VTYXZlcGludCByZWxlYXNlcyB0aGUgc2F2ZXBvaW50IHdpdGggdGhlIGdpdmVuIG5hbWUuIFRoZSBuYW1lIGlzCmludGVycG9sYXRlZCBkaXJlY3RseSBpbnRvIHRoZSBTUUwgU0FWRVBPSU5UIHN0YXRlbWVudCwgc28geW91IG11c3Qgc2FuaXRpemUKaXQgaWYgaXQgaXMgZGVyaXZlZCBmcm9tIHVzZXIgaW5wdXQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5Sb2xsYmFjayIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTU2Ij5Sb2xsYmFjazwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2siPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFJvbGxiYWNrKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+Um9sbGJhY2sgcm9sbHMgYmFjayB0aGUgdW5kZXJseWluZyBkYXRhYmFzZSB0cmFuc2FjdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlJvbGxiYWNrVG9TYXZlcG9pbnQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDE4NSI+Um9sbGJhY2tUb1NhdmVwb2ludDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2tUb1NhdmVwb2ludCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgUm9sbGJhY2tUb1NhdmVwb2ludChzYXZlcG9pbnQgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Sb2xsYmFja1RvU2F2ZXBvaW50IHJvbGxzIGJhY2sgdG8gdGhlIHNhdmVwb2ludCB3aXRoIHRoZSBnaXZlbiBuYW1lLiBUaGUKbmFtZSBpcyBpbnRlcnBvbGF0ZWQgZGlyZWN0bHkgaW50byB0aGUgU1FMIFNBVkVQT0lOVCBzdGF0ZW1lbnQsIHNvIHlvdSBtdXN0CnNhbml0aXplIGl0IGlmIGl0IGlzIGRlcml2ZWQgZnJvbSB1c2VyIGlucHV0Lgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2F2ZXBvaW50IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wxNzIiPlNhdmVwb2ludDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2F2ZXBvaW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTYXZlcG9pbnQobmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNhdmVwb2ludCBjcmVhdGVzIGEgc2F2ZXBvaW50IHdpdGggdGhlIGdpdmVuIG5hbWUuIFRoZSBuYW1lIGlzIGludGVycG9sYXRlZApkaXJlY3RseSBpbnRvIHRoZSBTUUwgU0FWRVBPSU5UIHN0YXRlbWVudCwgc28geW91IG11c3Qgc2FuaXRpemUgaXQgaWYgaXQgaXMKZGVyaXZlZCBmcm9tIHVzZXIgaW5wdXQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5TZWxlY3QiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDU3Ij5TZWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgU2VsZWN0KGkgaW50ZXJmYWNle30sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKFtdaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3QgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLlNlbGVjdCgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0RmxvYXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDk3Ij5TZWxlY3RGbG9hdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0RmxvYXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFNlbGVjdEZsb2F0KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2Zsb2F0NjQiPmZsb2F0NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0RmxvYXQgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3RGbG9hdCBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlNlbGVjdEludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMNzkiPlNlbGVjdEludDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0SW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTZWxlY3RJbnQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdEludCBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdEludCBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlNlbGVjdE51bGxGbG9hdCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTA2Ij5TZWxlY3ROdWxsRmxvYXQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxGbG9hdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgU2VsZWN0TnVsbEZsb2F0KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsRmxvYXQ2NCI+TnVsbEZsb2F0NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbEZsb2F0IGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0TnVsbEZsb2F0IGZ1bmN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMODgiPlNlbGVjdE51bGxJbnQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxJbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFNlbGVjdE51bGxJbnQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI051bGxJbnQ2NCI+TnVsbEludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxJbnQgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3ROdWxsSW50IGZ1bmN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0TnVsbFN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTI0Ij5TZWxlY3ROdWxsU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3ROdWxsU3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTZWxlY3ROdWxsU3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsU3RyaW5nIj5OdWxsU3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxTdHIgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3ROdWxsU3RyIGZ1bmN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0T25lIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wxMzMiPlNlbGVjdE9uZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0T25lIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTZWxlY3RPbmUoaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE9uZSBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdE9uZSBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlNlbGVjdFN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTE1Ij5TZWxlY3RTdHI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdFN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgU2VsZWN0U3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdFN0ciBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdFN0ciBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlVwZGF0ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMzciPlVwZGF0ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uVXBkYXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBVcGRhdGUobGlzdCAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5VcGRhdGUgaGFkIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLlVwZGF0ZSgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uVXBkYXRlQ29sdW1ucyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMNDIiPlVwZGF0ZUNvbHVtbnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlVwZGF0ZUNvbHVtbnMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFVwZGF0ZUNvbHVtbnMoZmlsdGVyIDxhIGhyZWY9IiNDb2x1bW5GaWx0ZXIiPkNvbHVtbkZpbHRlcjwvYT4sIGxpc3QgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VXBkYXRlQ29sdW1ucyBoYWQgdGhlIHNhbWUgYmVoYXZpb3IgYXMgRGJNYXAuVXBkYXRlQ29sdW1ucygpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uV2l0aENvbnRleHQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDI0Ij5XaXRoQ29udGV4dDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uV2l0aENvbnRleHQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFdpdGhDb250ZXh0KGN0eCA8YSBocmVmPSIvY29udGV4dCI+Y29udGV4dDwvYT4uPGEgaHJlZj0iL2NvbnRleHQjQ29udGV4dCI+Q29udGV4dDwvYT4pIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlR5cGVDb252ZXJ0ZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2dvcnAuZ28jTDcyIj5UeXBlQ29udmVydGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUeXBlQ29udmVydGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVHlwZUNvbnZlcnRlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVHlwZUNvbnZlcnRlci5Ub0RiIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUb0RiIGNvbnZlcnRzIHZhbCB0byBhbm90aGVyIHR5cGUuIENhbGxlZCBiZWZvcmUgSU5TRVJUL1VQREFURSBvcGVyYXRpb25zPC9zcGFuPgo8L3NwYW4+CVRvRGIodmFsIGludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCgo8c3BhbiBpZD0iVHlwZUNvbnZlcnRlci5Gcm9tRGIiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEZyb21EYiByZXR1cm5zIGEgQ3VzdG9tU2Nhbm5lciBhcHByb3ByaWF0ZSBmb3IgdGhpcyB0eXBlLiBUaGlzIHdpbGwgYmUgdXNlZDwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdG8gaG9sZCB2YWx1ZXMgcmV0dXJuZWQgZnJvbSBTRUxFQ1QgcXVlcmllcy48L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSW4gcGFydGljdWxhciB0aGUgQ3VzdG9tU2Nhbm5lciByZXR1cm5lZCBzaG91bGQgaW1wbGVtZW50IGEgQmluZGVyPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGZ1bmN0aW9uIGFwcHJvcHJpYXRlIGZvciB0aGUgR28gdHlwZSB5b3Ugd2lzaCB0byBjb252ZXJ0IHRoZSBkYiB2YWx1ZSB0bzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJZiBib29sPT1mYWxzZSwgdGhlbiBubyBjdXN0b20gc2Nhbm5lciB3aWxsIGJlIHVzZWQgZm9yIHRoaXMgZmllbGQuPC9zcGFuPgoJRnJvbURiKHRhcmdldCBpbnRlcmZhY2V7fSkgKDxhIGhyZWY9IiNDdXN0b21TY2FubmVyIj5DdXN0b21TY2FubmVyPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pCn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlRoZSBUeXBlQ29udmVydGVyIGludGVyZmFjZSBwcm92aWRlcyBhIHdheSB0byBtYXAgYSB2YWx1ZSBvZiBvbmUKdHlwZSB0byBhbm90aGVyIHR5cGUgd2hlbiBwZXJzaXN0aW5nIHRvLCBvciBsb2FkaW5nIGZyb20sIGEgZGF0YWJhc2UuCjwvcD48cD5FeGFtcGxlIHVzZSBjYXNlczogSW1wbGVtZW50IHR5cGUgY29udmVydGVyIHRvIGNvbnZlcnQgYm9vbCB0eXBlcyB0byAmIzM0O3kmIzM0Oy8mIzM0O24mIzM0OyBzdHJpbmdzLApvciBzZXJpYWxpemUgYSBzdHJ1Y3QgbWVtYmVyIGFzIGEgSlNPTiBibG9iLgo8L3A+CgogIAoKICAgIDwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgoKCgoKCiAgICAgIAogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAgIAogICAgICAKICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdEZpbGVzIGpzLXVuaXRGaWxlcyI+CiAgICA8aDIgY2xhc3M9IlVuaXRGaWxlcy10aXRsZSIgaWQ9InNlY3Rpb24tc291cmNlZmlsZXMiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9pbnNlcnRfZHJpdmVfZmlsZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3RyZWUvdjMuMS4wIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+VmlldyBhbGw8L2E+CiAgICA8L2Rpdj4KICAgIDxkaXY+CiAgICAgIDx1bCBjbGFzcz0iVW5pdEZpbGVzLWZpbGVMaXN0Ij48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvY29sdW1uLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImNvbHVtbi5nbyI+Y29sdW1uLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGIuZ28iPmRiLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdC5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkaWFsZWN0LmdvIj5kaWFsZWN0LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkaWFsZWN0X215c3FsLmdvIj5kaWFsZWN0X215c3FsLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9vcmFjbGUuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9vcmFjbGUuZ28iPmRpYWxlY3Rfb3JhY2xlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkaWFsZWN0X3Bvc3RncmVzLmdvIj5kaWFsZWN0X3Bvc3RncmVzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zbm93Zmxha2UuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9zbm93Zmxha2UuZ28iPmRpYWxlY3Rfc25vd2ZsYWtlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9zcWxpdGUuZ28iPmRpYWxlY3Rfc3FsaXRlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9zcWxzZXJ2ZXIuZ28iPmRpYWxlY3Rfc3Fsc2VydmVyLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZG9jLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImRvYy5nbyI+ZG9jLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZXJyb3JzLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImVycm9ycy5nbyI+ZXJyb3JzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJnb3JwLmdvIj5nb3JwLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvaG9va3MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iaG9va3MuZ28iPmhvb2tzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvaW5kZXguZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iaW5kZXguZ28iPmluZGV4LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbG9ja2Vycm9yLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImxvY2tlcnJvci5nbyI+bG9ja2Vycm9yLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbG9nZ2luZy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJsb2dnaW5nLmdvIj5sb2dnaW5nLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbnVsbHR5cGVzLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im51bGx0eXBlcy5nbyI+bnVsbHR5cGVzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvc2VsZWN0LmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9InNlbGVjdC5nbyI+c2VsZWN0LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0idGFibGUuZ28iPnRhYmxlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGVfYmluZGluZ3MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0idGFibGVfYmluZGluZ3MuZ28iPnRhYmxlX2JpbmRpbmdzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0idHJhbnNhY3Rpb24uZ28iPnRyYW5zYWN0aW9uLmdvPC9hPgogICAgICAgICAgPC9saT48L3VsPgogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAKICAgICAgCiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9hcnRpY2xlPgogICAgPGZvb3RlciBjbGFzcz0iZ28tTWFpbi1mb290ZXIiPjwvZm9vdGVyPgogIDwvbWFpbj4KCiAgICAKICA8Zm9vdGVyIGNsYXNzPSJnby1Gb290ZXIiPgogICAgCiAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua3MiPgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgV2h5IEdvCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyN1c2UtY2FzZXMiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBVc2UgQ2FzZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI2Nhc2Utc3R1ZGllcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIENhc2UgU3R1ZGllcwogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2xlYXJuLmdvLmRldi8iIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBHZXQgU3RhcnRlZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BsYXkuZ29sYW5nLm9yZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFBsYXlncm91bmQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90b3VyLmdvbGFuZy5vcmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBUb3VyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zL3RhZ2dlZC9nbz90YWI9TmV3ZXN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU3RhY2sgT3ZlcmZsb3cKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvaGVscCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEhlbHAKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgUGFja2FnZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iL3N0ZCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFN0YW5kYXJkIExpYnJhcnkKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iL2dvbGFuZy5vcmcveCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFN1Yi1yZXBvc2l0b3JpZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2L2Fib3V0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQWJvdXQgR28gUGFja2FnZXMKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvcHJvamVjdCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEFib3V0CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2RsLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj5Eb3dubG9hZDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9ibG9nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkJsb2c8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9pc3N1ZXMiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBJc3N1ZSBUcmFja2VyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2RvYy9kZXZlbC9yZWxlYXNlLmh0bWwiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBSZWxlYXNlIE5vdGVzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYmxvZy5nb2xhbmcub3JnL2dvLWJyYW5kIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQnJhbmQgR3VpZGVsaW5lcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9jb25kdWN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ29kZSBvZiBDb25kdWN0CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnR3aXR0ZXIuY29tL2dvbGFuZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIENvbm5lY3QKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgVHdpdHRlcgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkdpdEh1YjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2ludml0ZS5zbGFjay5nb2xhbmdicmlkZ2Uub3JnLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFNsYWNrCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcmVkZGl0LmNvbS9yL2dvbGFuZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIHIvZ29sYW5nCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1lZXR1cC5jb20vcHJvL2dvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgTWVldHVwCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nd2Vla2x5LmNvbS8iIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBHb2xhbmcgV2Vla2x5CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWJvdHRvbSI+CiAgICAgIDxpbWcgY2xhc3M9ImdvLUZvb3Rlci1nb3BoZXIiICB3aWR0aD0iMTQzMSIgaGVpZ2h0PSI5MDEiCiAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2dvcGhlci9waWxvdC1idXN0LTE0MzF4OTAxLnN2ZyIgYWx0PSJHb3BoZXIgaW4gZmxpZ2h0IGdvZ2dsZXMiPgogICAgICA8dWwgY2xhc3M9ImdvLUZvb3Rlci1saXN0Um93Ij4KICAgICAgICA8bGkgY2xhc3M9ImdvLUZvb3Rlci1saXN0SXRlbSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9jb3B5cmlnaHQiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkNvcHlyaWdodDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3RvcyIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+VGVybXMgb2YgU2VydmljZTwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuZ29vZ2xlLmNvbS9pbnRsL2VuL3BvbGljaWVzL3ByaXZhY3kvIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIgogICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgICAgUHJpdmFjeSBQb2xpY3kKICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3MvcGtnc2l0ZS1mZWVkYmFjayIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiCiAgICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICAgIFJlcG9ydCBhbiBJc3N1ZQogICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0tdGV4dCBnby1Gb290ZXItdG9nZ2xlVGhlbWUganMtdG9nZ2xlVGhlbWUiIGFyaWEtbGFiZWw9IlRvZ2dsZSB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0iYXV0byIgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2JyaWdodG5lc3NfNl9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IlN5c3RlbSB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0iZGFyayIgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2JyaWdodG5lc3NfMl9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IkRhcmsgdGhlbWUiPgogICAgICAgICAgICA8aW1nIGRhdGEtdmFsdWU9ImxpZ2h0IiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbGlnaHRfbW9kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IkxpZ2h0IHRoZW1lIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0tdGV4dCBnby1Gb290ZXIta2V5Ym9hcmQganMtb3BlblNob3J0Y3V0cyIgYXJpYS1sYWJlbD0iT3BlbiBzaG9yY3V0cyBtb2RhbCI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2tleWJvYXJkX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvbGk+CiAgICAgIDwvdWw+CiAgICAgIDxhIGNsYXNzPSJnby1Gb290ZXItZ29vZ2xlTG9nbyIgaHJlZj0iaHR0cHM6Ly9nb29nbGUuY29tIiB0YXJnZXQ9Il9ibGFuayJyZWw9Im5vb3BlbmVyIgogICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgPGltZyBjbGFzcz0iZ28tRm9vdGVyLWdvb2dsZUxvZ29JbWciIGhlaWdodD0iMjQiIHdpZHRoPSI3MiIKICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvb2dsZS13aGl0ZS5zdmciIGFsdD0iR29vZ2xlIGxvZ28iPgogICAgICA8L2E+CiAgICA8L2Rpdj4KICA8L2Zvb3Rlcj4KCiAgICAKICA8ZGlhbG9nIGlkPSJqdW1wLXRvLW1vZGFsIiBjbGFzcz0iSnVtcERpYWxvZyBnby1Nb2RhbCBnby1Nb2RhbC0tbWQganMtbW9kYWwiPgogICAgPGZvcm0gbWV0aG9kPSJkaWFsb2ciIGRhdGEtZ210Yz0ianVtcCB0byBmb3JtIiBhcmlhLWxhYmVsPSJKdW1wIHRvIElkZW50aWZpZXIiPgogICAgICA8ZGl2IGNsYXNzPSJEaWFsb2ctdGl0bGUgZ28tTW9kYWwtaGVhZGVyIj4KICAgICAgICA8aDI+SnVtcCB0bzwvaDI+CiAgICAgICAgPGJ1dHRvbgogICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSIKICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgIGRhdGEtbW9kYWwtY2xvc2UKICAgICAgICAgIGRhdGEtZ3RtYz0ibW9kYWwgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iQ2xvc2UiCiAgICAgICAgPgogICAgICAgICAgPGltZwogICAgICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICAgICAgaGVpZ2h0PSIyNCIKICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2xvc2VfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1maWx0ZXIiPgogICAgICAgIDxpbnB1dCBjbGFzcz0iSnVtcERpYWxvZy1pbnB1dCBnby1JbnB1dCIgYXV0b2NvbXBsZXRlPSJvZmYiIHR5cGU9InRleHQiPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1ib2R5IGdvLU1vZGFsLWJvZHkiPgogICAgICAgIDxkaXYgY2xhc3M9Ikp1bXBEaWFsb2ctbGlzdCI+PC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24iIGRhdGEtdGVzdC1pZD0iY2xvc2UtZGlhbG9nIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KCiAgPGRpYWxvZyBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nIGdvLU1vZGFsIGdvLU1vZGFsLS1zbSBqcy1tb2RhbCI+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyI+CiAgICAgIDxkaXYgY2xhc3M9ImdvLU1vZGFsLWhlYWRlciI+CiAgICAgICAgPGgyPktleWJvYXJkIHNob3J0Y3V0czwvaDI+CiAgICAgICAgPGJ1dHRvbgogICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSIKICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgIGRhdGEtbW9kYWwtY2xvc2UKICAgICAgICAgIGRhdGEtZ3RtYz0ibW9kYWwgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iQ2xvc2UiCiAgICAgICAgPgogICAgICAgICAgPGltZwogICAgICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICAgICAgaGVpZ2h0PSIyNCIKICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2xvc2VfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtYm9keSI+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgPHRib2R5PgogICAgICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij4KICAgICAgICAgICAgICA8c3Ryb25nPj88L3N0cm9uZz48L3RkPjx0ZD4gOiBUaGlzIG1lbnU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij4KICAgICAgICAgICAgICA8c3Ryb25nPi88L3N0cm9uZz48L3RkPjx0ZD4gOiBTZWFyY2ggc2l0ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Zjwvc3Ryb25nPiBvciA8c3Ryb25nPkY8L3N0cm9uZz48L3RkPjx0ZD4gOiBKdW1wIHRvPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgIDx0ZCBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nLWtleSI+PHN0cm9uZz55PC9zdHJvbmc+IG9yIDxzdHJvbmc+WTwvc3Ryb25nPjwvdGQ+CiAgICAgICAgICAgICAgPHRkPiA6IENhbm9uaWNhbCBVUkw8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgPC90Ym9keT4KICAgICAgICA8L3RhYmxlPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtYWN0aW9ucyI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIiBkYXRhLXRlc3QtaWQ9ImNsb3NlLWRpYWxvZyI+Q2xvc2U8L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaWFsb2c+CgogICAgCiAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb29raWUtbm90aWNlIGpzLWNvb2tpZU5vdGljZSI+CiAgICAgICAgPGRpdj5nby5kZXYgdXNlcyBjb29raWVzIGZyb20gR29vZ2xlIHRvIGRlbGl2ZXIgYW5kIGVuaGFuY2UgdGhlIHF1YWxpdHkgb2YgaXRzIHNlcnZpY2VzIGFuZCB0bwogICAgICAgIGFuYWx5emUgdHJhZmZpYy4gPGEgdGFyZ2V0PV9ibGFuayBocmVmPSJodHRwczovL3BvbGljaWVzLmdvb2dsZS5jb20vdGVjaG5vbG9naWVzL2Nvb2tpZXMiPkxlYXJuIG1vcmUuPC9hPjwvZGl2PgogICAgICAgIDxkaXY+PGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIj5Pa2F5PC9idXR0b24+PC9kaXY+CiAgICAgIDwvc2VjdGlvbj4KICAgIAogICAgCiAgICAgIDxzY3JpcHQ+CiAgICAgICAgLy8gdGhpcyB3aWxsIHRocm93IGlmIHRoZSBxdWVyeVNlbGVjdG9yIGNhbuKAmXQgZmluZCB0aGUgZWxlbWVudAogICAgICAgIGNvbnN0IGd0bUlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWd0bUlEJykuZGF0YXNldC5ndG1pZDsKICAgICAgICBpZiAoIWd0bUlkKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dvb2dsZSBUYWcgTWFuYWdlciBJRCBub3QgZm91bmQnKTsKICAgICAgICB9CiAgICAgICAgbG9hZFNjcmlwdChgaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPSR7Z3RtSWR9YCk7CiAgICAgIDwvc2NyaXB0PgogICAgICA8bm9zY3JpcHQ+CiAgICAgICAgPGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVc4TVZRWEciCiAgICAgICAgICAgICAgICBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj4KICAgICAgICA8L2lmcmFtZT4KICAgICAgPC9ub3NjcmlwdD4KICAgIAogICAgCiAgCiAgPGRpdiBjbGFzcz0ianMtY2Fub25pY2FsVVJMUGF0aCIgZGF0YS1jYW5vbmljYWwtdXJsLXBhdGg9Ii9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92M0B2My4xLjAiIGhpZGRlbj48L2Rpdj4KICA8ZGl2IGNsYXNzPSJqcy1wbGF5Z3JvdW5kVmFycyIgZGF0YS1tb2R1bGVwYXRoPSJnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIgZGF0YS12ZXJzaW9uPSJ2My4xLjAiIGhpZGRlbj48L2Rpdj4KICA8c2NyaXB0PgogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9mcm9udGVuZC91bml0L21haW4vbWFpbi5qcycpCiAgPC9zY3JpcHQ+CgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCcvc3RhdGljL2Zyb250ZW5kL3VuaXQvdW5pdC5qcycpCiAgPC9zY3JpcHQ+CgogIDwvYm9keT4KPC9odG1sPgo=
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '315800334629005572'
      X-Datadog-Parent-Id:
      - '300676214133912691'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=389
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Mon, 17 Jul 2023 21:26:47 GMT
      Expires:
      - Mon, 17 Jul 2023 21:33:16 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Content-Length:
      - '176'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'not found: github.com/go-gorp/gorp/v3@v3.0.0: invalid version: go.mod
        has non-.../v3 module path "github.com/go-gorp/gorp" (and .../v3/go.mod does
        not exist) at revision v3.0.0'
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2907642808462992892'
      X-Datadog-Parent-Id:
      - '1916838649575037837'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 17 Jul 2023 21:26:47 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.2.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '51049242447802710'
      X-Datadog-Parent-Id:
      - '3719882431970635941'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Mon, 17 Jul 2023 18:36:00 GMT
      Expires:
      - Mon, 17 Jul 2023 21:36:00 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '10247'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.2","Time":"2020-03-29T15:52:21Z"}'
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '484293931751107191'
      X-Datadog-Parent-Id:
      - '461367209186894262'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 17 Jul 2023 21:26:47 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.0.5.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '955743171970593813'
      X-Datadog-Parent-Id:
      - '3772143996191922619'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '188'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Mon, 17 Jul 2023 19:16:12 GMT
      Expires:
      - Mon, 17 Jul 2023 22:16:12 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '7835'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.5","Time":"2022-10-18T17:59:22Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.0.5","Hash":"f7ee81ce258e18e2feeb9a646217184b7b6833a4"}}'
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/go-gorp/gorp/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3383462599439466917'
      X-Datadog-Parent-Id:
      - '2229120780302201776'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 17 Jul 2023 21:26:47 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iIGRhdGEtbGF5b3V0PSJyZXNwb25zaXZlIiBkYXRhLWxvY2FsPSIiPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB3aW5kb3cuX19lcnI9ZnVuY3Rpb24gZihlKXtmLnA9Zi5wfHxbXTtmLnAucHVzaChlKX0pOwogICAgPC9zY3JpcHQ+CiAgICA8c2NyaXB0PgogICAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgY29uc3QgdGhlbWUgPSBkb2N1bWVudC5jb29raWUubWF0Y2goL3ByZWZlcnMtY29sb3Itc2NoZW1lPShsaWdodHxkYXJrfGF1dG8pLyk/LlsxXQogICAgICAgIGlmICh0aGVtZSkgewogICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpLnNldEF0dHJpYnV0ZSgnZGF0YS10aGVtZScsIHRoZW1lKTsKICAgICAgICB9CiAgICAgIH0oKSkKICAgIDwvc2NyaXB0PgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDxtZXRhIG5hbWU9IkRlc2NyaXB0aW9uIiBjb250ZW50PSJQYWNrYWdlIGdvcnAgcHJvdmlkZXMgYSBzaW1wbGUgd2F5IHRvIG1hcnNoYWwgR28gc3RydWN0cyB0byBhbmQgZnJvbSBTUUwgZGF0YWJhc2VzLiI+CiAgICAKICAgIDxtZXRhIGNsYXNzPSJqcy1ndG1JRCIgZGF0YS1ndG1pZD0iR1RNLVc4TVZRWEciPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvc3RhdGljL3NoYXJlZC9pY29uL2Zhdmljb24uaWNvIj4KICAgIAogIAogICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyI+CiAgCgogICAgPGxpbmsgaHJlZj0iL3N0YXRpYy9mcm9udGVuZC9mcm9udGVuZC5taW4uY3NzP3ZlcnNpb249cHJvZC1mcm9udGVuZC0wMDA3OS1wZXgiIHJlbD0ic3R5bGVzaGVldCI+CiAgICAKICA8dGl0bGU+Z29ycCBwYWNrYWdlIC0gZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjMgLSBHbyBQYWNrYWdlczwvdGl0bGU+CgogICAgCiAgPGxpbmsgaHJlZj0iL3N0YXRpYy9mcm9udGVuZC91bml0L3VuaXQubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNzktcGV4IiByZWw9InN0eWxlc2hlZXQiPgogIAogIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvdW5pdC9tYWluL21haW4ubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNzktcGV4IiByZWw9InN0eWxlc2hlZXQiPgoKCiAgPC9oZWFkPgogIDxib2R5PgogICAgCiAgICA8c2NyaXB0PgogICAgICBmdW5jdGlvbiBsb2FkU2NyaXB0KHNyYywgbW9kID0gdHJ1ZSkgewogICAgICAgIGxldCBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICAgICAgcy5zcmMgPSBzcmM7CiAgICAgICAgaWYgKG1vZCkgewogICAgICAgICAgcy50eXBlID0gJ21vZHVsZSc7CiAgICAgICAgICBzLmFzeW5jID0gdHJ1ZTsKICAgICAgICAgIHMuZGVmZXIgPSB0cnVlCiAgICAgICAgfQogICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocyk7CiAgICAgIH0KICAgICAgbG9hZFNjcmlwdCgiL3RoaXJkX3BhcnR5L2RpYWxvZy1wb2x5ZmlsbC9kaWFsb2ctcG9seWZpbGwuanMiLCBmYWxzZSkKICAgICAgbG9hZFNjcmlwdCgiL3N0YXRpYy9mcm9udGVuZC9mcm9udGVuZC5qcyIpOwogICAgPC9zY3JpcHQ+CiAgICAKICA8aGVhZGVyIGNsYXNzPSJnby1IZWFkZXIgZ28tSGVhZGVyLS1mdWxsIGpzLXNpdGVIZWFkZXIiPgogICAgPGRpdiBjbGFzcz0iZ28tSGVhZGVyLWlubmVyIGdvLUhlYWRlci1pbm5lci0tZGFyayI+CiAgICAgIDxuYXYgY2xhc3M9ImdvLUhlYWRlci1uYXYiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgY2xhc3M9ImpzLWhlYWRlckxvZ28iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiCiAgICAgICAgICAgIGRhdGEtdGVzdC1pZD0iZ28taGVhZGVyLWxvZ28tbGluayI+CiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1IZWFkZXItbG9nbyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLXdoaXRlLnN2ZyIgYWx0PSJHbyI+CiAgICAgICAgPC9hPgogICAgICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1yaWdodENvbnRlbnQiPgogICAgICAgICAgCjxkaXYgY2xhc3M9ImdvLVNlYXJjaEZvcm0ganMtc2VhcmNoRm9ybSI+CiAgPGZvcm0KICAgIGNsYXNzPSJnby1JbnB1dEdyb3VwIGdvLVNob3J0Y3V0S2V5IGdvLVNlYXJjaEZvcm0tZm9ybSIKICAgIGFjdGlvbj0iL3NlYXJjaCIKICAgIGRhdGEtc2hvcnRjdXQ9Ii8iCiAgICBkYXRhLXNob3J0Y3V0LWFsdD0ic2VhcmNoIgogICAgZGF0YS1ndG1jPSJzZWFyY2ggZm9ybSIKICAgIGFyaWEtbGFiZWw9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIgogICAgcm9sZT0ic2VhcmNoIgogID4KICAgIDxpbnB1dCBuYW1lPSJxIiBjbGFzcz0iZ28tSW5wdXQganMtc2VhcmNoRm9jdXMiIGFyaWEtbGFiZWw9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIiB0eXBlPSJzZWFyY2giCiAgICAgICAgYXV0b2NhcGl0YWxpemU9Im9mZiIgYXV0b2NvbXBsZXRlPSJvZmYiIGF1dG9jb3JyZWN0PSJvZmYiIHNwZWxsY2hlY2s9ImZhbHNlIgogICAgICAgIHBsYWNlaG9sZGVyPSJTZWFyY2ggcGFja2FnZXMgb3Igc3ltYm9scyIKICAgICAgICB2YWx1ZT0iIiAvPgogICAgPGlucHV0IG5hbWU9Im0iIHZhbHVlPSIiIGhpZGRlbj4KICAgIDxidXR0b24gY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWludmVydGVkIiBhcmlhLWxhYmVsPSJTdWJtaXQgc2VhcmNoIj4KICAgICAgPGltZwogICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgIGhlaWdodD0iMjQiCiAgICAgICAgd2lkdGg9IjI0IgogICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9zZWFyY2hfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICBhbHQ9IiIKICAgICAgLz4KICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KICA8YnV0dG9uIGNsYXNzPSJnby1TZWFyY2hGb3JtLWV4cGFuZFNlYXJjaCBqcy1leHBhbmRTZWFyY2giIGRhdGEtZ3RtYz0ibmF2IGJ1dHRvbiIKICAgICAgYXJpYS1sYWJlbD0iT3BlbiBzZWFyY2giIGRhdGEtdGVzdC1pZD0iZXhwYW5kLXNlYXJjaCI+CiAgICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL3NlYXJjaF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CgogIDwvYnV0dG9uPgo8L2Rpdj4KCiAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1tZW51Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1kZXNrdG9wLW1lbnUtaG92ZXIiIGhyZWY9IiMiIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPgogICAgICAgICAgICAgICAgV2h5IEdvCiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9hcnJvd19kcm9wX2Rvd25fZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJzdWJtZW51IGRyb3Bkb3duIGljb24iPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51IGdvLUhlYWRlci1zdWJtZW51LS13aHkganMtZGVza3RvcC1zdWJtZW51LWhvdmVyIiBhcmlhLWxhYmVsPSJzdWJtZW51Ij4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjY2FzZS1zdHVkaWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPkNhc2UgU3R1ZGllczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8cD5Db21tb24gcHJvYmxlbXMgY29tcGFuaWVzIHNvbHZlIHdpdGggR288L3A+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI3VzZS1jYXNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5Vc2UgQ2FzZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHA+U3RvcmllcyBhYm91dCBob3cgYW5kIHdoeSBjb21wYW5pZXMgdXNlIEdvPC9wPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NlY3VyaXR5L3BvbGljeS8iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+U2VjdXJpdHkgUG9saWN5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwPkhvdyBHbyBjYW4gaGVscCBrZWVwIHlvdSBzZWN1cmUgYnkgZGVmYXVsdDwvcD4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIiBkYXRhLWd0bWM9Im5hdiBsaW5rIj5MZWFybjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1kZXNrdG9wLW1lbnUtaG92ZXIiIGhyZWY9IiMiIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPgogICAgICAgICAgICAgICAgRG9jcwogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYXJyb3dfZHJvcF9kb3duX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0ic3VibWVudSBkcm9wZG93biBpY29uIj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPHVsIGNsYXNzPSJnby1IZWFkZXItc3VibWVudSBnby1IZWFkZXItc3VibWVudS0tZG9jcyBqcy1kZXNrdG9wLXN1Ym1lbnUtaG92ZXIiIGFyaWEtbGFiZWw9InN1Ym1lbnUiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2RvYy9lZmZlY3RpdmVfZ28iPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RWZmZWN0aXZlIEdvPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxwPlRpcHMgZm9yIHdyaXRpbmcgY2xlYXIsIHBlcmZvcm1hbnQsIGFuZCBpZGlvbWF0aWMgR28gY29kZTwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jLyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5HbyBVc2VyIE1hbnVhbDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5BIGNvbXBsZXRlIGludHJvZHVjdGlvbiB0byBidWlsZGluZyBzb2Z0d2FyZSB3aXRoIEdvPC9wPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYvc3RkIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlN0YW5kYXJkIGxpYnJhcnk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHA+UmVmZXJlbmNlIGRvY3VtZW50YXRpb24gZm9yIEdvJ3Mgc3RhbmRhcmQgbGlicmFyeTwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jL2RldmVsL3JlbGVhc2UiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UmVsZWFzZSBOb3Rlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5MZWFybiB3aGF0J3MgbmV3IGluIGVhY2ggR28gcmVsZWFzZTwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0gZ28tSGVhZGVyLW1lbnVJdGVtLS1hY3RpdmUiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPlBhY2thZ2VzPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWRlc2t0b3AtbWVudS1ob3ZlciIgaHJlZj0iIyIgZGF0YS1ndG1jPSJuYXYgbGluayI+CiAgICAgICAgICAgICAgICBDb21tdW5pdHkKICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2Fycm93X2Ryb3BfZG93bl9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9InN1Ym1lbnUgZHJvcGRvd24gaWNvbiI+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnUgZ28tSGVhZGVyLXN1Ym1lbnUtLWNvbW11bml0eSBqcy1kZXNrdG9wLXN1Ym1lbnUtaG92ZXIiIGFyaWEtbGFiZWw9InN1Ym1lbnUiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3RhbGtzLyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5SZWNvcmRlZCBUYWxrczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5WaWRlb3MgZnJvbSBwcmlvciBldmVudHM8L3A+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1lZXR1cC5jb20vcHJvL2dvIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk1lZXR1cHM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbGF1bmNoX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5NZWV0IG90aGVyIGxvY2FsIEdvIGRldmVsb3BlcnM8L3A+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmcvZ28vd2lraS9Db25mZXJlbmNlcyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Db25mZXJlbmNlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9sYXVuY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxwPkxlYXJuIGFuZCBuZXR3b3JrIHdpdGggR28gZGV2ZWxvcGVycyBmcm9tIGFyb3VuZCB0aGUgd29ybGQ8L3A+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Jsb2ciPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+R28gYmxvZzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8cD5UaGUgR28gcHJvamVjdCdzIG9mZmljaWFsIGJsb2cuPC9wPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9oZWxwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkdvIHByb2plY3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHA+R2V0IGhlbHAgYW5kIHN0YXkgaW5mb3JtZWQgZnJvbSBHbzwvcD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1zdWJtZW51SXRlbSI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgR2V0IGNvbm5lY3RlZAogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHA+PC9wPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbnMiPgogICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2cvZ29sYW5nLW51dHMiPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC9nb29nbGUtZ3JvdXBzLnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC9naXRodWIuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbiIgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9nb2xhbmciPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC90d2l0dGVyLnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vd3d3LnJlZGRpdC5jb20vci9nb2xhbmcvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvcmVkZGl0LnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvc2xhY2suc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbiIgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9jb2xsZWN0aXZlcy9nbyI+PGltZyBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vc29jaWFsL3N0YWNrLW92ZXJmbG93LnN2ZyIgLz48L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICAgIDxidXR0b24gY2xhc3M9ImdvLUhlYWRlci1uYXZPcGVuIGpzLWhlYWRlck1lbnVCdXR0b24gZ28tSGVhZGVyLW5hdk9wZW4tLXdoaXRlIiBkYXRhLWd0bWM9Im5hdiBidXR0b24iIGFyaWEtbGFiZWw9Ik9wZW4gbmF2aWdhdGlvbiI+CiAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9uYXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KICA8YXNpZGUgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXIganMtaGVhZGVyIj4KICAgIDxuYXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1oZWFkZXIiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyI+CiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxvZ28iIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby1ibHVlLnN2ZyIgYWx0PSJHby4iPgogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDx1bCBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSBqcy1tb2JpbGUtc3VibmF2LXRyaWdnZXIgZ28tTmF2aWdhdGlvbkRyYXdlci1oYXNTdWJuYXYiPgogICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICA8c3Bhbj5XaHkgR288L3NwYW4+CiAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL25hdmlnYXRlX25leHRfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlciBnby1OYXZpZ2F0aW9uRHJhd2VyLXN1Ym1lbnVJdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLW5hdiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWhlYWRlciI+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9uYXZpZ2F0ZV9iZWZvcmVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgICAgV2h5IEdvCiAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3QiPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyNjYXNlLXN0dWRpZXMiPgogICAgICAgICAgICAgICAgICAgICAgQ2FzZSBTdHVkaWVzCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyN1c2UtY2FzZXMiPgogICAgICAgICAgICAgICAgICAgICAgVXNlIENhc2VzCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NlY3VyaXR5L3BvbGljeS8iPgogICAgICAgICAgICAgICAgICAgICAgU2VjdXJpdHkgUG9saWN5CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIj5MZWFybjwvYT4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0ganMtbW9iaWxlLXN1Ym5hdi10cmlnZ2VyIGdvLU5hdmlnYXRpb25EcmF3ZXItaGFzU3VibmF2Ij4KICAgICAgICAgICAgPGEgaHJlZj0iIyI+CiAgICAgICAgICAgICAgPHNwYW4+RG9jczwvc3Bhbj4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPgogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IgogICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbmF2aWdhdGVfbmV4dF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICA8L2E+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyIGdvLU5hdmlnYXRpb25EcmF3ZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+PGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiCiAgICAgICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbmF2aWdhdGVfYmVmb3JlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICA8L2k+CiAgICAgICAgICAgICAgICAgICAgRG9jcwogICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9kb2MvZWZmZWN0aXZlX2dvIj4KICAgICAgICAgICAgICAgICAgICAgIEVmZmVjdGl2ZSBHbwogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9kb2MvIj4KICAgICAgICAgICAgICAgICAgICAgIEdvIFVzZXIgTWFudWFsCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9zdGQiPgogICAgICAgICAgICAgICAgICAgICAgU3RhbmRhcmQgbGlicmFyeQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9kb2MvZGV2ZWwvcmVsZWFzZSI+CiAgICAgICAgICAgICAgICAgICAgICBSZWxlYXNlIE5vdGVzCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIGdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0tLWFjdGl2ZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iPlBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSBqcy1tb2JpbGUtc3VibmF2LXRyaWdnZXIgZ28tTmF2aWdhdGlvbkRyYXdlci1oYXNTdWJuYXYiPgogICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICA8c3Bhbj5Db21tdW5pdHk8L3NwYW4+CiAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL25hdmlnYXRlX25leHRfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyIGdvLU5hdmlnYXRpb25EcmF3ZXItc3VibWVudUl0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL25hdmlnYXRlX2JlZm9yZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgIENvbW11bml0eQogICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi90YWxrcy8iPgogICAgICAgICAgICAgICAgICAgICAgUmVjb3JkZWQgVGFsa3MKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iPgogICAgICAgICAgICAgICAgICAgICAgTWVldHVwcwogICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbGF1bmNoX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby93aWtpL0NvbmZlcmVuY2VzIj4KICAgICAgICAgICAgICAgICAgICAgIENvbmZlcmVuY2VzCiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9sYXVuY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgPC9pPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9ibG9nIj4KICAgICAgICAgICAgICAgICAgICAgIEdvIGJsb2cKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvaGVscCI+CiAgICAgICAgICAgICAgICAgICAgICBHbyBwcm9qZWN0CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgIDxkaXY+R2V0IGNvbm5lY3RlZDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJnby1IZWFkZXItc29jaWFsSWNvbiIgaHJlZj0iaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9nL2dvbGFuZy1udXRzIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvZ29vZ2xlLWdyb3Vwcy5zdmciIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciPjxpbWcgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL3NvY2lhbC9naXRodWIuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2dvbGFuZyI+PGltZyBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vc29jaWFsL3R3aXR0ZXIuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL3d3dy5yZWRkaXQuY29tL3IvZ29sYW5nLyI+PGltZyBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vc29jaWFsL3JlZGRpdC5zdmciIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZ28tSGVhZGVyLXNvY2lhbEljb24iIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvc2xhY2suc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImdvLUhlYWRlci1zb2NpYWxJY29uIiBocmVmPSJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2NvbGxlY3RpdmVzL2dvIj48aW1nIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9zb2NpYWwvc3RhY2stb3ZlcmZsb3cuc3ZnIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgIDwvbmF2PgogIDwvYXNpZGU+CiAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1zY3JpbSBqcy1zY3JpbSIgcm9sZT0icHJlc2VudGF0aW9uIj48L2Rpdj4KCiAgICAKICA8bWFpbiBjbGFzcz0iZ28tTWFpbiI+CiAgICA8ZGl2IGNsYXNzPSJnby1NYWluLWJhbm5lciIgcm9sZT0iYWxlcnQiPjwvZGl2PgogICAgPGhlYWRlciBjbGFzcz0iZ28tTWFpbi1oZWFkZXIganMtbWFpbkhlYWRlciI+CiAgCiAgCiAgPG5hdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJCcmVhZGNydW1iIGdvLUJyZWFkY3J1bWIiIGFyaWEtbGFiZWw9IkJyZWFkY3J1bWIiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iIj4KICAgIDxvbD4KICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGkgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyIgZGF0YS1ndG1jPSJicmVhZGNydW1iIGxpbmsiPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICA8YSBocmVmPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjNAdjMuMS4wIiBkYXRhLWd0bWM9ImJyZWFkY3J1bWIgbGluayIgYXJpYS1jdXJyZW50PSJsb2NhdGlvbiIKICAgICAgICAgICAgICBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItYnJlYWRjcnVtYkN1cnJlbnQiPgogICAgICAgICAgICBnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MwogICAgICAgICAgPC9hPgogICAgICAgICAgCiAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICAgICAgdGl0bGU9IkNvcHkgcGF0aCB0byBjbGlwYm9hcmQuJiMxMDsmIzEwO2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzIgogICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICAgICAgZGF0YS10by1jb3B5PSJnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIKICAgICAgICAgICAgICBkYXRhLWd0bWM9ImJyZWFkY3J1bWJzIGJ1dHRvbiIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkIgogICAgICAgICAgICAgICAgaGVpZ2h0PSIyNCIKICAgICAgICAgICAgICAgIHdpZHRoPSIyNCIKICAgICAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb250ZW50X2NvcHlfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgICAgIGFsdD0iIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAKICAgICAgICAKICAgICAgPC9saT4KICAgIDwvb2w+CiAgPC9uYXY+CgogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyQ29udGVudCI+CiAgICAKICA8ZGl2IGNsYXNzPSJnby1NYWluLWhlYWRlclRpdGxlIGpzLXN0aWNreUhlYWRlciI+CiAgICA8YSBjbGFzcz0iZ28tTWFpbi1oZWFkZXJMb2dvIiBocmVmPSJodHRwczovL2dvLmRldi8iIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiIGFyaWEtbGFiZWw9IkxpbmsgdG8gR28gSG9tZXBhZ2UiPgogICAgICA8aW1nIGhlaWdodD0iNzgiIHdpZHRoPSIyMDciIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby1ibHVlLnN2ZyIgYWx0PSJHbyI+CiAgICA8L2E+CiAgICA8aDEgY2xhc3M9IlVuaXRIZWFkZXItdGl0bGVIZWFkaW5nIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItdGl0bGUiPmdvcnA8L2gxPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5wYWNrYWdlPC9zcGFuPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5tb2R1bGU8L3NwYW4+CiAgICAKICAgIAogICAgICAKICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICB0aXRsZT0iQ29weSBwYXRoIHRvIGNsaXBib2FyZC4mIzEwOyYjMTA7Z2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjMiCiAgICAgICAgICBhcmlhLWxhYmVsPSJDb3B5IFBhdGggdG8gQ2xpcGJvYXJkIgogICAgICAgICAgZGF0YS10by1jb3B5PSJnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIKICAgICAgICAgIGRhdGEtZ3RtYz0idGl0bGUgYnV0dG9uIgogICAgICAgICAgdGFiaW5kZXg9Ii0xIgogICAgICAgID4KICAgICAgICAgIDxpbWcKICAgICAgICAgICAgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0tYWNjZW50ZWQiCiAgICAgICAgICAgIGhlaWdodD0iMjQiCiAgICAgICAgICAgIHdpZHRoPSIyNCIKICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2NvbnRlbnRfY29weV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIAogICAgCiAgPC9kaXY+CgogICAgCiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxzIj4KICAgIAogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItdmVyc2lvbiI+CiAgICA8YSBocmVmPSI/dGFiPXZlcnNpb25zIiBhcmlhLWxhYmVsPSJHbyB0byBWZXJzaW9ucyIgZGF0YS1ndG1jPSJoZWFkZXIgbGluayI+PHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPlZlcnNpb246IDwvc3Bhbj52My4xLjA8L2E+CiAgICAKICAgIDxzcGFuIGNsYXNzPSJEZXRhaWxzSGVhZGVyLWJhZGdlLS1sYXRlc3QiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1taW5vclZlcnNpb25CYW5uZXIiPgogICAgICA8c3BhbiBjbGFzcz0iZ28tQ2hpcCBEZXRhaWxzSGVhZGVyLXNwYW4tLWxhdGVzdCI+TGF0ZXN0PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iZ28tQ2hpcCBEZXRhaWxzSGVhZGVyLXNwYW4tLW5vdEF0TGF0ZXN0Ij4KICAgICAgICBMYXRlc3QKICAgICAgICAKICA8ZGV0YWlscyBjbGFzcz0iZ28tVG9vbHRpcCBqcy10b29sdGlwIiBkYXRhLWd0bWM9InRvb2x0aXAiPgogICAgPHN1bW1hcnk+CiAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2FsZXJ0X2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iV2FybmluZyI+CiAgICA8L3N1bW1hcnk+CiAgICA8cD5UaGlzIHBhY2thZ2UgaXMgbm90IGluIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBpdHMgbW9kdWxlLjwvcD4KICA8L2RldGFpbHM+CgogICAgICA8L3NwYW4+CiAgICAgIDxhIGhyZWY9Ii9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIgYXJpYS1sYWJlbD0iR28gdG8gTGF0ZXN0IFZlcnNpb24iIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWFsZXJ0IERldGFpbHNIZWFkZXItc3Bhbi0tZ29Ub0xhdGVzdCI+R28gdG8gbGF0ZXN0PC9zcGFuPgogICAgICA8L2E+CiAgICA8L3NwYW4+CiAgPC9zcGFuPgoKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWNvbW1pdFRpbWUiPgogICAgUHVibGlzaGVkOiBPY3QgMTgsIDIwMjIKICA8L3NwYW4+CgogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZXMiPgogICAgTGljZW5zZTogPGEgaHJlZj0iL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzP3RhYj1saWNlbnNlcyIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWxpY2Vuc2UiCiAgICAgICAgICAgIGFyaWEtbGFiZWw9IkdvIHRvIExpY2Vuc2VzIiBkYXRhLWd0bWM9ImhlYWRlciBsaW5rIj5NSVQ8L2E+CiAgICAgIAogICAgCiAgPC9zcGFuPgoKICAgICAgCiAgICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWltcG9ydHMiPgogICAgPGEgaHJlZj0iL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzP3RhYj1pbXBvcnRzIiBhcmlhLWxhYmVsPSJHbyB0byBJbXBvcnRzIgogICAgICAgIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICA8c3BhbiBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+SW1wb3J0czogPC9zcGFuPjEzCiAgICA8L2E+CiAgPC9zcGFuPgoKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0ZWRieSI+CiAgICA8YSBocmVmPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjM/dGFiPWltcG9ydGVkYnkiIGFyaWEtbGFiZWw9IkdvIHRvIEltcG9ydGVkIEJ5IgogICAgICAgIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgPHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPkltcG9ydGVkIGJ5OiA8L3NwYW4+MTkKICAgIDwvYT4KICA8L3NwYW4+CgogICAgICAKICAgIAogIDwvZGl2PgogIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dDb250YWluZXIiPgogICAgPHN2ZyBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd0ltYWdlIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgd2lkdGg9IjI0Ij4KICAgICAgPHBhdGggZD0iTTAgMGgyNHYyNEgweiIgZmlsbD0ibm9uZSIvPgogICAgICA8cGF0aCBkPSJNMTIgOGMxLjEgMCAyLS45IDItMnMtLjktMi0yLTItMiAuOS0yIDIgLjkgMiAyIDJ6bTAgMmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTAgNmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6Ii8+CiAgICA8L3N2Zz4KICAgIDxzZWxlY3QgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dTZWxlY3QganMtc2VsZWN0TmF2IiB0YWJpbmRleD0iLTEiPgogICAgICA8b3B0aW9uIHZhbHVlPSIvIj5NYWluPC9vcHRpb24+CiAgICAgIDxvcHRpb24gdmFsdWU9Ii9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92Mz90YWI9dmVyc2lvbnMiPgogICAgICAgIFZlcnNpb25zCiAgICAgIDwvb3B0aW9uPgogICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjM/dGFiPWxpY2Vuc2VzIj4KICAgICAgICBMaWNlbnNlcwogICAgICA8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3YzP3RhYj1pbXBvcnRzIj4KICAgICAgICAgIEltcG9ydHMKICAgICAgICA8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvdjM/dGFiPWltcG9ydGVkYnkiPgogICAgICAgICAgSW1wb3J0ZWQgQnkKICAgICAgICA8L29wdGlvbj4KICAgICAgCiAgICA8L3NlbGVjdD4KICA8L2Rpdj4KCgogIDwvZGl2PgoKPC9oZWFkZXI+CiAgICA8YXNpZGUgY2xhc3M9ImdvLU1haW4tYXNpZGUgIGpzLW1haW5Bc2lkZSI+CiAgCiAgPGRpdiBjbGFzcz0iVW5pdE1ldGEiPgogICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPkRldGFpbHM8L2gyPgogICAgCiAgPHVsIGNsYXNzPSJVbml0TWV0YS1kZXRhaWxzIj4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVmFsaWQgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC90cmVlL3YzLjEuMC9nby5tb2QiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj5nby5tb2Q8L2E+IGZpbGUKICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD4KICAgICAgICAgIFRoZSBHbyBtb2R1bGUgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkIGluIEdvIDEuMTEgYW5kIGlzIHRoZSBvZmZpY2lhbCBkZXBlbmRlbmN5IG1hbmFnZW1lbnQKICAgICAgICAgIHNvbHV0aW9uIGZvciBHby4KICAgICAgICA8L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1hY2NlbnRlZCJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2hlY2tfY2lyY2xlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vaGVscF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgICAgICA8L3N1bW1hcnk+CiAgICAgICAgPHA+CiAgICAgICAgICBSZWRpc3RyaWJ1dGFibGUgbGljZW5zZXMgcGxhY2UgbWluaW1hbCByZXN0cmljdGlvbnMgb24gaG93IHNvZnR3YXJlIGNhbiBiZSB1c2VkLAogICAgICAgICAgbW9kaWZpZWQsIGFuZCByZWRpc3RyaWJ1dGVkLgogICAgICAgIDwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5Nb2R1bGVzIHdpdGggdGFnZ2VkIHZlcnNpb25zIGdpdmUgaW1wb3J0ZXJzIG1vcmUgcHJlZGljdGFibGUgYnVpbGRzLjwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgU3RhYmxlIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5XaGVuIGEgcHJvamVjdCByZWFjaGVzIG1ham9yIHZlcnNpb24gdjEgaXQgaXMgY29uc2lkZXJlZCBzdGFibGUuPC9wPgogICAgICA8L2RldGFpbHM+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJVbml0TWV0YS1kZXRhaWxzTGVhcm4iPgogICAgICA8YSBocmVmPSIvYWJvdXQjYmVzdC1wcmFjdGljZXMtaDIiIGRhdGEtZ3RtYz0ibWV0YSBsaW5rIj5MZWFybiBtb3JlPC9hPgogICAgPC9saT4KICA8L3VsPgoKICAgIDxoMiBjbGFzcz0iZ28tdGV4dExhYmVsIj5SZXBvc2l0b3J5PC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRNZXRhLXJlcG8iPgogICAgICAKICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPgogICAgICAgICAgZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAKICAgICAgICA8L2E+CiAgICAgIAogICAgPC9kaXY+CiAgICAKICAgICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPkxpbmtzPC9oMj4KICAgICAgPHVsIGNsYXNzPSJVbml0TWV0YS1saW5rcyI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGVwcy5kZXYvZ28vZ2l0aHViLmNvbSUyRmdvLWdvcnAlMkZnb3JwJTJGdjMvdjMuMS4wIiB0aXRsZT0iVmlldyB0aGlzIG1vZHVsZSBvbiBPcGVuIFNvdXJjZSBJbnNpZ2h0cyIKICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgZGF0YS10ZXN0LWlkPSJtZXRhLWxpbmstZGVwc2RldiI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iZGVwc2Rldi1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vZGVwc2Rldi1sb2dvLnN2ZyIKICAgICAgICAgICAgICAgIGFsdD0iT3BlbiBTb3VyY2UgSW5zaWdodHMgTG9nbyIgLz4KICAgICAgICAgICAgICBPcGVuIFNvdXJjZSBJbnNpZ2h0cwogICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgIAogIAoKICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICA8L3VsPgogICAgCiAgPC9kaXY+Cgo8L2FzaWRlPgogICAgPG5hdiBjbGFzcz0iZ28tTWFpbi1uYXYgZ28tTWFpbi1uYXYtLXN0aWNreSBqcy1tYWluTmF2IiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdkRlc2t0b3AiPgogICAgCiAgPGRpdiBjbGFzcz0iVW5pdE91dGxpbmUtanVtcFRvIj4KICAgIDxidXR0b24gY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUb0lucHV0IGdvLVNob3J0Y3V0S2V5IGpzLWp1bXBUb0lucHV0IgogICAgICAgIGFyaWEtY29udHJvbHM9Imp1bXAtdG8tbW9kYWwiCiAgICAgICAgYXJpYS1sYWJlbD0iT3BlbiBKdW1wIHRvIElkZW50aWZpZXIiCiAgICAgICAgZGF0YS1zaG9ydGN1dD0iZiIKICAgICAgICBkYXRhLXNob3J0Y3V0LWFsdD0iZmluZCIKICAgICAgICBkYXRhLXRlc3QtaWQ9Imp1bXAtdG8tYnV0dG9uIiBkYXRhLWd0bWM9Im91dGxpbmUgYnV0dG9uIj4KICAgICAgSnVtcCB0byAuLi4KICAgIDwvYnV0dG9uPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iZ28tVHJlZSBqcy10cmVlIiByb2xlPSJ0cmVlIiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICAgIAogICAgICA8bGkgY2xhc3M9ImpzLXJlYWRtZU91dGxpbmUiPgogICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgUkVBRE1FCiAgICAgICAgPC9hPgogICAgICAgIAogIDx1bCBpZD0icmVhZG1lLW91dGxpbmUiPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXVwZGF0ZS0yMDE2LTExLTEzLWZ1dHVyZS12ZXJzaW9ucyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFVwZGF0ZSAyMDE2LTExLTEzOiBGdXR1cmUgdmVyc2lvbnMKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWludHJvZHVjdGlvbiIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEludHJvZHVjdGlvbgogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtaW5zdGFsbGF0aW9uIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgSW5zdGFsbGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS12ZXJzaW9uaW5nIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgVmVyc2lvbmluZwogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc3VwcG9ydGVkLWdvLXZlcnNpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgU3VwcG9ydGVkIEdvIHZlcnNpb25zCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1taWdyYXRpb24tZ3VpZGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBNaWdyYXRpb24gZ3VpZGUKICAgICAgICA8L2E+CiAgICAgICAgCiAgICAgICAgICA8dWw+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtcHJlLXYyLXRvLXYyIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBQcmUtdjIgdG8gdjIKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1oZWxwLXN1cHBvcnQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBIZWxwL1N1cHBvcnQKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXF1aWNrc3RhcnQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBRdWlja3N0YXJ0CiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1leGFtcGxlcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEV4YW1wbGVzCiAgICAgICAgPC9hPgogICAgICAgIAogICAgICAgICAgPHVsPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW1hcHBpbmctc3RydWN0cy10by10YWJsZXMiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIE1hcHBpbmcgc3RydWN0cyB0byB0YWJsZXMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXN0cnVjdC1lbWJlZGRpbmciIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIFN0cnVjdCBFbWJlZGRpbmcKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWNyZWF0ZS1kcm9wLXRhYmxlcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgQ3JlYXRlL0Ryb3AgVGFibGVzCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1zcWwtbG9nZ2luZyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgU1FMIExvZ2dpbmcKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWluc2VydCIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgSW5zZXJ0CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS11cGRhdGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIFVwZGF0ZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtZGVsZXRlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBEZWxldGUKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXNlbGVjdC1ieS1rZXkiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIFNlbGVjdCBieSBLZXkKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWFkLWhvYy1zcWwiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIEFkIEhvYyBTUUwKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc2VsZWN0IiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgIFNFTEVDVAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXNlbGVjdC1zdHJpbmctb3ItaW50NjQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgU0VMRUNUIHN0cmluZyBvciBpbnQ2NAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW5hbWVkLWJpbmQtcGFyYW1ldGVycyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lZCBiaW5kIHBhcmFtZXRlcnMKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS11cGRhdGUtZGVsZXRlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgIFVQREFURSAvIERFTEVURQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXRyYW5zYWN0aW9ucyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgVHJhbnNhY3Rpb25zCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1ob29rcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgSG9va3MKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW9wdGltaXN0aWMtbG9ja2luZyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgT3B0aW1pc3RpYyBMb2NraW5nCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW5vdGUtdGhhdC10aGlzLWJlaGF2aW91ci1oYXMtY2hhbmdlZC1pbi12Mi1zZWUtbWlncmF0aW9uLWd1aWRlLW1pZ3JhdGlvbi1ndWlkZSIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBOb3RlIHRoYXQgdGhpcyBiZWhhdmlvdXIgaGFzIGNoYW5nZWQgaW4gdjIuIFNlZSBNaWdyYXRpb24gR3VpZGUuCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtYWRkaW5nLWluZGV4LWVzLW9uLWNvbHVtbi1zLWJleW9uZC10aGUtcHJpbWFyeS1rZXkiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIEFkZGluZyBJTkRFWChlcykgb24gY29sdW1uKHMpIGJleW9uZCB0aGUgcHJpbWFyeSBrZXkKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1kYXRhYmFzZS1kcml2ZXJzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgRGF0YWJhc2UgRHJpdmVycwogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc3FsaXRlMy1leHRlbnNpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgU3FsaXRlMyBFeHRlbnNpb25zCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1rbm93bi1pc3N1ZXMiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBLbm93biBJc3N1ZXMKICAgICAgICA8L2E+CiAgICAgICAgCiAgICAgICAgICA8dWw+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtc3FsLXBsYWNlaG9sZGVyLXBvcnRhYmlsaXR5IiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBTUUwgcGxhY2Vob2xkZXIgcG9ydGFiaWxpdHkKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXRpbWUtdGltZS1hbmQtdGltZS16b25lcyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgdGltZS5UaW1lIGFuZCB0aW1lIHpvbmVzCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgIAogICAgICAgICAgPC91bD4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtcnVubmluZy10aGUtdGVzdHMiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBSdW5uaW5nIHRoZSB0ZXN0cwogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtcGVyZm9ybWFuY2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBQZXJmb3JtYW5jZQogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtY29udHJpYnV0b3JzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgQ29udHJpYnV0b3JzCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgICAKICA8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIiBkYXRhLWd0bWM9Im91dGxpbmUgbGluayI+CiAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgIAo8dWw+CiAgCiAgICA8bGk+CiAgICAgIDxhIGhyZWY9IiNwa2ctb3ZlcnZpZXciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+T3ZlcnZpZXc8L2E+CiAgICA8L2xpPgogIDxsaSBjbGFzcz0iRG9jTmF2LW92ZXJ2aWV3Ij4KICAgICAgPGEgaHJlZj0iI3BrZy1pbmRleCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIENvbnN0YW50cwogICAgICA8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgVmFyaWFibGVzCiAgICAgIDwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICAKICAgICAgICA8dWw+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNOb25GYXRhbEVycm9yIiB0aXRsZT0iTm9uRmF0YWxFcnJvcihlcnIpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTm9uRmF0YWxFcnJvcihlcnIpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjU2VsZWN0RmxvYXQiIHRpdGxlPSJTZWxlY3RGbG9hdChlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3RGbG9hdChlLCBxdWVyeSwgYXJncykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNTZWxlY3RJbnQiIHRpdGxlPSJTZWxlY3RJbnQoZSwgcXVlcnksIGFyZ3MpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgU2VsZWN0SW50KGUsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE51bGxGbG9hdCIgdGl0bGU9IlNlbGVjdE51bGxGbG9hdChlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3ROdWxsRmxvYXQoZSwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjU2VsZWN0TnVsbEludCIgdGl0bGU9IlNlbGVjdE51bGxJbnQoZSwgcXVlcnksIGFyZ3MpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgU2VsZWN0TnVsbEludChlLCBxdWVyeSwgYXJncykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNTZWxlY3ROdWxsU3RyIiB0aXRsZT0iU2VsZWN0TnVsbFN0cihlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3ROdWxsU3RyKGUsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE9uZSIgdGl0bGU9IlNlbGVjdE9uZShtLCBlLCBob2xkZXIsIHF1ZXJ5LCBhcmdzKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFNlbGVjdE9uZShtLCBlLCBob2xkZXIsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NlbGVjdFN0ciIgdGl0bGU9IlNlbGVjdFN0cihlLCBxdWVyeSwgYXJncykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBTZWxlY3RTdHIoZSwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgPC91bD4KICAgICAgCiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdHlwZXMiPgogICAgICA8YSBocmVmPSIjcGtnLXR5cGVzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIFR5cGVzCiAgICAgIDwvYT4KICAgICAgPHVsPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5GaWx0ZXIiIHRpdGxlPSJ0eXBlIENvbHVtbkZpbHRlciIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIENvbHVtbkZpbHRlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcCIgdGl0bGU9InR5cGUgQ29sdW1uTWFwIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgQ29sdW1uTWFwCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuUmVuYW1lIiB0aXRsZT0iKGMpIFJlbmFtZShjb2xuYW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBSZW5hbWUoY29sbmFtZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuU2V0TWF4U2l6ZSIgdGl0bGU9IihjKSBTZXRNYXhTaXplKHNpemUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFNldE1heFNpemUoc2l6ZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuU2V0Tm90TnVsbCIgdGl0bGU9IihjKSBTZXROb3ROdWxsKG5uKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBTZXROb3ROdWxsKG5uKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRUcmFuc2llbnQiIHRpdGxlPSIoYykgU2V0VHJhbnNpZW50KGIpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFNldFRyYW5zaWVudChiKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRVbmlxdWUiIHRpdGxlPSIoYykgU2V0VW5pcXVlKGIpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFNldFVuaXF1ZShiKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0N1c3RvbVNjYW5uZXIiIHRpdGxlPSJ0eXBlIEN1c3RvbVNjYW5uZXIiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBDdXN0b21TY2FubmVyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDdXN0b21TY2FubmVyLkJpbmQiIHRpdGxlPSIobWUpIEJpbmQoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtZSkgQmluZCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAiIHRpdGxlPSJ0eXBlIERiTWFwIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgRGJNYXAKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkFkZFRhYmxlIiB0aXRsZT0iKG0pIEFkZFRhYmxlKGkpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIEFkZFRhYmxlKGkpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQWRkVGFibGVEeW5hbWljIiB0aXRsZT0iKG0pIEFkZFRhYmxlRHluYW1pYyhpbnAsIHNjaGVtYSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgQWRkVGFibGVEeW5hbWljKGlucCwgc2NoZW1hKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkFkZFRhYmxlV2l0aE5hbWUiIHRpdGxlPSIobSkgQWRkVGFibGVXaXRoTmFtZShpLCBuYW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBBZGRUYWJsZVdpdGhOYW1lKGksIG5hbWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYSIgdGl0bGU9IihtKSBBZGRUYWJsZVdpdGhOYW1lQW5kU2NoZW1hKGksIHNjaGVtYSwgbmFtZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYShpLCBzY2hlbWEsIG5hbWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQmVnaW4iIHRpdGxlPSIobSkgQmVnaW4oKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBCZWdpbigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQ3JlYXRlSW5kZXgiIHRpdGxlPSIobSkgQ3JlYXRlSW5kZXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBDcmVhdGVJbmRleCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQ3JlYXRlVGFibGVzIiB0aXRsZT0iKG0pIENyZWF0ZVRhYmxlcygpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIENyZWF0ZVRhYmxlcygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMiIHRpdGxlPSIobSkgQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBDcmVhdGVUYWJsZXNJZk5vdEV4aXN0cygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRGVsZXRlIiB0aXRsZT0iKG0pIERlbGV0ZShsaXN0KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEZWxldGUobGlzdCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5Ecm9wVGFibGUiIHRpdGxlPSIobSkgRHJvcFRhYmxlKHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEcm9wVGFibGUodGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRHJvcFRhYmxlSWZFeGlzdHMiIHRpdGxlPSIobSkgRHJvcFRhYmxlSWZFeGlzdHModGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIERyb3BUYWJsZUlmRXhpc3RzKHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkRyb3BUYWJsZXMiIHRpdGxlPSIobSkgRHJvcFRhYmxlcygpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIERyb3BUYWJsZXMoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkRyb3BUYWJsZXNJZkV4aXN0cyIgdGl0bGU9IihtKSBEcm9wVGFibGVzSWZFeGlzdHMoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEcm9wVGFibGVzSWZFeGlzdHMoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkR5bmFtaWNUYWJsZUZvciIgdGl0bGU9IihtKSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lLCBjaGVja1BLKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lLCBjaGVja1BLKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkV4ZWMiIHRpdGxlPSIobSkgRXhlYyhxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgRXhlYyhxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5HZXQiIHRpdGxlPSIobSkgR2V0KGksIGtleXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIEdldChpLCBrZXlzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkluc2VydCIgdGl0bGU9IihtKSBJbnNlcnQobGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgSW5zZXJ0KGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUHJlcGFyZSIgdGl0bGU9IihtKSBQcmVwYXJlKHF1ZXJ5KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBQcmVwYXJlKHF1ZXJ5KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlF1ZXJ5IiB0aXRsZT0iKG0pIFF1ZXJ5KHEsIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFF1ZXJ5KHEsIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUXVlcnlSb3ciIHRpdGxlPSIobSkgUXVlcnlSb3cocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFF1ZXJ5Um93KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdCIgdGl0bGU9IihtKSBTZWxlY3QoaSwgcXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFNlbGVjdChpLCBxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3RGbG9hdCIgdGl0bGU9IihtKSBTZWxlY3RGbG9hdChxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0RmxvYXQocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0SW50IiB0aXRsZT0iKG0pIFNlbGVjdEludChxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0SW50KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdE51bGxGbG9hdCIgdGl0bGU9IihtKSBTZWxlY3ROdWxsRmxvYXQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFNlbGVjdE51bGxGbG9hdChxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsSW50IiB0aXRsZT0iKG0pIFNlbGVjdE51bGxJbnQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFNlbGVjdE51bGxJbnQocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0TnVsbFN0ciIgdGl0bGU9IihtKSBTZWxlY3ROdWxsU3RyKHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBTZWxlY3ROdWxsU3RyKHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdE9uZSIgdGl0bGU9IihtKSBTZWxlY3RPbmUoaG9sZGVyLCBxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0T25lKGhvbGRlciwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0U3RyIiB0aXRsZT0iKG0pIFNlbGVjdFN0cihxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgU2VsZWN0U3RyKHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlRhYmxlRm9yIiB0aXRsZT0iKG0pIFRhYmxlRm9yKHQsIGNoZWNrUEspIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG0pIFRhYmxlRm9yKHQsIGNoZWNrUEspCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJhY2VPZmYiIHRpdGxlPSIobSkgVHJhY2VPZmYoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBUcmFjZU9mZigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJhY2VPbiIgdGl0bGU9IihtKSBUcmFjZU9uKHByZWZpeCwgbG9nZ2VyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBUcmFjZU9uKHByZWZpeCwgbG9nZ2VyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlRydW5jYXRlVGFibGVzIiB0aXRsZT0iKG0pIFRydW5jYXRlVGFibGVzKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgVHJ1bmNhdGVUYWJsZXMoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlVwZGF0ZSIgdGl0bGU9IihtKSBVcGRhdGUobGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgVXBkYXRlKGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVXBkYXRlQ29sdW1ucyIgdGl0bGU9IihtKSBVcGRhdGVDb2x1bW5zKGZpbHRlciwgbGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobSkgVXBkYXRlQ29sdW1ucyhmaWx0ZXIsIGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuV2l0aENvbnRleHQiIHRpdGxlPSIobSkgV2l0aENvbnRleHQoY3R4KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChtKSBXaXRoQ29udGV4dChjdHgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGlhbGVjdCIgdGl0bGU9InR5cGUgRGlhbGVjdCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIERpYWxlY3QKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEeW5hbWljVGFibGUiIHRpdGxlPSJ0eXBlIER5bmFtaWNUYWJsZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIER5bmFtaWNUYWJsZQogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0dvcnBMb2dnZXIiIHRpdGxlPSJ0eXBlIEdvcnBMb2dnZXIiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBHb3JwTG9nZ2VyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSGFzUG9zdERlbGV0ZSIgdGl0bGU9InR5cGUgSGFzUG9zdERlbGV0ZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIEhhc1Bvc3REZWxldGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNIYXNQb3N0R2V0IiB0aXRsZT0idHlwZSBIYXNQb3N0R2V0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgSGFzUG9zdEdldAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0hhc1Bvc3RJbnNlcnQiIHRpdGxlPSJ0eXBlIEhhc1Bvc3RJbnNlcnQiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBIYXNQb3N0SW5zZXJ0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSGFzUG9zdFVwZGF0ZSIgdGl0bGU9InR5cGUgSGFzUG9zdFVwZGF0ZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIEhhc1Bvc3RVcGRhdGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNIYXNQcmVEZWxldGUiIHRpdGxlPSJ0eXBlIEhhc1ByZURlbGV0ZSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIEhhc1ByZURlbGV0ZQogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0hhc1ByZUluc2VydCIgdGl0bGU9InR5cGUgSGFzUHJlSW5zZXJ0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgSGFzUHJlSW5zZXJ0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSGFzUHJlVXBkYXRlIiB0aXRsZT0idHlwZSBIYXNQcmVVcGRhdGUiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBIYXNQcmVVcGRhdGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNJbmRleE1hcCIgdGl0bGU9InR5cGUgSW5kZXhNYXAiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBJbmRleE1hcAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuUmVuYW1lIiB0aXRsZT0iKGlkeCkgUmVuYW1lKGluZG5hbWUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGlkeCkgUmVuYW1lKGluZG5hbWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuU2V0SW5kZXhUeXBlIiB0aXRsZT0iKGlkeCkgU2V0SW5kZXhUeXBlKGluZHR5cGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGlkeCkgU2V0SW5kZXhUeXBlKGluZHR5cGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuU2V0VW5pcXVlIiB0aXRsZT0iKGlkeCkgU2V0VW5pcXVlKGIpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGlkeCkgU2V0VW5pcXVlKGIpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSW50ZWdlckF1dG9JbmNySW5zZXJ0ZXIiIHRpdGxlPSJ0eXBlIEludGVnZXJBdXRvSW5jckluc2VydGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgSW50ZWdlckF1dG9JbmNySW5zZXJ0ZXIKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNMb2dnZXIiIHRpdGxlPSJ0eXBlIExvZ2dlciIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIExvZ2dlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdCIgdGl0bGU9InR5cGUgTXlTUUxEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgTXlTUUxEaWFsZWN0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIHRpdGxlPSIoZCkgQXV0b0luY3JCaW5kVmFsdWUoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jckJpbmRWYWx1ZSgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5BdXRvSW5jclN0ciIgdGl0bGU9IihkKSBBdXRvSW5jclN0cigpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyU3RyKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQmluZFZhciIgdGl0bGU9IihkKSBCaW5kVmFyKGkpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEJpbmRWYXIoaSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiB0aXRsZT0iKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQ3JlYXRlVGFibGVTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgRHJvcEluZGV4U3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgRHJvcEluZGV4U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LklmVGFibGVFeGlzdHMiIHRpdGxlPSIoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0Lkluc2VydEF1dG9JbmNyIiB0aXRsZT0iKGQpIEluc2VydEF1dG9JbmNyKGV4ZWMsIGluc2VydFNxbCwgcGFyYW1zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJbnNlcnRBdXRvSW5jcihleGVjLCBpbnNlcnRTcWwsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuUXVlcnlTdWZmaXgiIHRpdGxlPSIoZCkgUXVlcnlTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdWVyeVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlF1b3RlRmllbGQiIHRpdGxlPSIoZCkgUXVvdGVGaWVsZChmKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZUZpZWxkKGYpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlNsZWVwQ2xhdXNlIiB0aXRsZT0iKGQpIFNsZWVwQ2xhdXNlKHMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFNsZWVwQ2xhdXNlKHMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LlRvU3FsVHlwZSIgdGl0bGU9IihkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgdGl0bGU9IihkKSBUcnVuY2F0ZUNsYXVzZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRydW5jYXRlQ2xhdXNlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNOb0ZpZWxkSW5UeXBlRXJyb3IiIHRpdGxlPSJ0eXBlIE5vRmllbGRJblR5cGVFcnJvciIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIE5vRmllbGRJblR5cGVFcnJvcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIiB0aXRsZT0iKGVycikgRXJyb3IoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChlcnIpIEVycm9yKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNOdWxsVGltZSIgdGl0bGU9InR5cGUgTnVsbFRpbWUiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBOdWxsVGltZQogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTnVsbFRpbWUuU2NhbiIgdGl0bGU9IihudCkgU2Nhbih2YWx1ZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobnQpIFNjYW4odmFsdWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTnVsbFRpbWUuVmFsdWUiIHRpdGxlPSIobnQpIFZhbHVlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAobnQpIFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcHRpbWlzdGljTG9ja0Vycm9yIiB0aXRsZT0idHlwZSBPcHRpbWlzdGljTG9ja0Vycm9yIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgT3B0aW1pc3RpY0xvY2tFcnJvcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3B0aW1pc3RpY0xvY2tFcnJvci5FcnJvciIgdGl0bGU9IihlKSBFcnJvcigpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGUpIEVycm9yKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0IiB0aXRsZT0idHlwZSBPcmFjbGVEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgT3JhY2xlRGlhbGVjdAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQXV0b0luY3JTdHIiIHRpdGxlPSIoZCkgQXV0b0luY3JTdHIoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jclN0cigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Lkluc2VydFF1ZXJ5VG9UYXJnZXQiIHRpdGxlPSIoZCkgSW5zZXJ0UXVlcnlUb1RhcmdldChleGVjLCBpbnNlcnRTcWwsIGlkU3FsLCB0YXJnZXQsIHBhcmFtcykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSW5zZXJ0UXVlcnlUb1RhcmdldChleGVjLCBpbnNlcnRTcWwsIGlkU3FsLCB0YXJnZXQsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlF1ZXJ5U3VmZml4IiB0aXRsZT0iKGQpIFF1ZXJ5U3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVlcnlTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVGaWVsZCIgdGl0bGU9IihkKSBRdW90ZUZpZWxkKGYpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1b3RlRmllbGQoZikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5Ub1NxbFR5cGUiIHRpdGxlPSIoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiB0aXRsZT0iKGQpIFRydW5jYXRlQ2xhdXNlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVHJ1bmNhdGVDbGF1c2UoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZVN0cmluZyIgdGl0bGU9InR5cGUgT3JhY2xlU3RyaW5nIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgT3JhY2xlU3RyaW5nCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVTdHJpbmcuU2NhbiIgdGl0bGU9IihvcykgU2Nhbih2YWx1ZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAob3MpIFNjYW4odmFsdWUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlU3RyaW5nLlZhbHVlIiB0aXRsZT0iKG9zKSBWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKG9zKSBWYWx1ZSgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0IiB0aXRsZT0idHlwZSBQb3N0Z3Jlc0RpYWxlY3QiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBQb3N0Z3Jlc0RpYWxlY3QKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiIHRpdGxlPSIoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkF1dG9JbmNyU3RyIiB0aXRsZT0iKGQpIEF1dG9JbmNyU3RyKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JTdHIoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVJbmRleFN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZUluZGV4U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlVGFibGVTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSWZUYWJsZUV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSW5zZXJ0QXV0b0luY3JUb1RhcmdldCIgdGl0bGU9IihkKSBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0KGV4ZWMsIGluc2VydFNxbCwgdGFyZ2V0LCBwYXJhbXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEluc2VydEF1dG9JbmNyVG9UYXJnZXQoZXhlYywgaW5zZXJ0U3FsLCB0YXJnZXQsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVlcnlTdWZmaXgiIHRpdGxlPSIoZCkgUXVlcnlTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdWVyeVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlRmllbGQiIHRpdGxlPSIoZCkgUXVvdGVGaWVsZChmKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZUZpZWxkKGYpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlNsZWVwQ2xhdXNlIiB0aXRsZT0iKGQpIFNsZWVwQ2xhdXNlKHMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFNsZWVwQ2xhdXNlKHMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlRvU3FsVHlwZSIgdGl0bGU9IihkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgdGl0bGU9IihkKSBUcnVuY2F0ZUNsYXVzZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRydW5jYXRlQ2xhdXNlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0IiB0aXRsZT0idHlwZSBTbm93Zmxha2VEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgU25vd2ZsYWtlRGlhbGVjdAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JTdHIiIHRpdGxlPSIoZCkgQXV0b0luY3JTdHIoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jclN0cigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiIHRpdGxlPSIoZCkgSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjLCBpbnNlcnRTcWwsIHRhcmdldCwgcGFyYW1zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0KGV4ZWMsIGluc2VydFNxbCwgdGFyZ2V0LCBwYXJhbXMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5RdWVyeVN1ZmZpeCIgdGl0bGU9IihkKSBRdWVyeVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1ZXJ5U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LlF1b3RlRmllbGQiIHRpdGxlPSIoZCkgUXVvdGVGaWVsZChmKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZUZpZWxkKGYpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5IiB0aXRsZT0iKGQpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuVG9TcWxUeXBlIiB0aXRsZT0iKGQpIFRvU3FsVHlwZSh2YWwsIG1heHNpemUsIGlzQXV0b0luY3IpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRvU3FsVHlwZSh2YWwsIG1heHNpemUsIGlzQXV0b0luY3IpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgdGl0bGU9IihkKSBUcnVuY2F0ZUNsYXVzZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFRydW5jYXRlQ2xhdXNlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxFeGVjdXRvciIgdGl0bGU9InR5cGUgU3FsRXhlY3V0b3IiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBTcWxFeGVjdXRvcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiIHRpdGxlPSJ0eXBlIFNxbFNlcnZlckRpYWxlY3QiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBTcWxTZXJ2ZXJEaWFsZWN0CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiB0aXRsZT0iKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JCaW5kVmFsdWUoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiIHRpdGxlPSIoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5BdXRvSW5jclN0ciIgdGl0bGU9IihkKSBBdXRvSW5jclN0cigpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyU3RyKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkJpbmRWYXIiIHRpdGxlPSIoZCkgQmluZFZhcihpKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBCaW5kVmFyKGkpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVJbmRleFN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZUluZGV4U3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiB0aXRsZT0iKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQ3JlYXRlVGFibGVTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuRHJvcEluZGV4U3VmZml4IiB0aXRsZT0iKGQpIERyb3BJbmRleFN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIERyb3BJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVFeGlzdHMiIHRpdGxlPSIoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSW5zZXJ0QXV0b0luY3IiIHRpdGxlPSIoZCkgSW5zZXJ0QXV0b0luY3IoZXhlYywgaW5zZXJ0U3FsLCBwYXJhbXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEluc2VydEF1dG9JbmNyKGV4ZWMsIGluc2VydFNxbCwgcGFyYW1zKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuUXVlcnlTdWZmaXgiIHRpdGxlPSIoZCkgUXVlcnlTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdWVyeVN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5RdW90ZUZpZWxkIiB0aXRsZT0iKGQpIFF1b3RlRmllbGQoZikiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVvdGVGaWVsZChmKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSIgdGl0bGU9IihkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlRvU3FsVHlwZSIgdGl0bGU9IihkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUb1NxbFR5cGUodmFsLCBtYXhzaXplLCBpc0F1dG9JbmNyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiIHRpdGxlPSIoZCkgVHJ1bmNhdGVDbGF1c2UoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBUcnVuY2F0ZUNsYXVzZSgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsVHlwZXIiIHRpdGxlPSJ0eXBlIFNxbFR5cGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgU3FsVHlwZXIKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0IiB0aXRsZT0idHlwZSBTcWxpdGVEaWFsZWN0IiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgU3FsaXRlRGlhbGVjdAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgdGl0bGU9IihkKSBBdXRvSW5jckJpbmRWYWx1ZSgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIEF1dG9JbmNyQmluZFZhbHVlKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiB0aXRsZT0iKGQpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQXV0b0luY3JTdHIiIHRpdGxlPSIoZCkgQXV0b0luY3JTdHIoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBBdXRvSW5jclN0cigpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5CaW5kVmFyIiB0aXRsZT0iKGQpIEJpbmRWYXIoaSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgQmluZFZhcihpKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIHRpdGxlPSIoZCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBDcmVhdGVJbmRleFN1ZmZpeCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCIgdGl0bGU9IihkKSBDcmVhdGVUYWJsZVN1ZmZpeCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIENyZWF0ZVRhYmxlU3VmZml4KCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgdGl0bGU9IihkKSBEcm9wSW5kZXhTdWZmaXgoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBEcm9wSW5kZXhTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIHRpdGxlPSIoZCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiB0aXRsZT0iKGQpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgdGl0bGU9IihkKSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Lkluc2VydEF1dG9JbmNyIiB0aXRsZT0iKGQpIEluc2VydEF1dG9JbmNyKGV4ZWMsIGluc2VydFNxbCwgcGFyYW1zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBJbnNlcnRBdXRvSW5jcihleGVjLCBpbnNlcnRTcWwsIHBhcmFtcykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1ZXJ5U3VmZml4IiB0aXRsZT0iKGQpIFF1ZXJ5U3VmZml4KCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgUXVlcnlTdWZmaXgoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuUXVvdGVGaWVsZCIgdGl0bGU9IihkKSBRdW90ZUZpZWxkKGYpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKGQpIFF1b3RlRmllbGQoZikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIHRpdGxlPSIoZCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEsIHRhYmxlKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgIChkKSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSwgdGFibGUpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5Ub1NxbFR5cGUiIHRpdGxlPSIoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVG9TcWxUeXBlKHZhbCwgbWF4c2l6ZSwgaXNBdXRvSW5jcikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiB0aXRsZT0iKGQpIFRydW5jYXRlQ2xhdXNlKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAoZCkgVHJ1bmNhdGVDbGF1c2UoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwIiB0aXRsZT0idHlwZSBUYWJsZU1hcCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIFRhYmxlTWFwCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5BZGRJbmRleCIgdGl0bGU9Iih0KSBBZGRJbmRleChuYW1lLCBpZHh0eXBlLCBjb2x1bW5zKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBBZGRJbmRleChuYW1lLCBpZHh0eXBlLCBjb2x1bW5zKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLkNvbE1hcCIgdGl0bGU9Iih0KSBDb2xNYXAoZmllbGQpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIENvbE1hcChmaWVsZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5Ecm9wSW5kZXgiIHRpdGxlPSIodCkgRHJvcEluZGV4KG5hbWUpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIERyb3BJbmRleChuYW1lKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLklkeE1hcCIgdGl0bGU9Iih0KSBJZHhNYXAoZmllbGQpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIElkeE1hcChmaWVsZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5SZXNldFNxbCIgdGl0bGU9Iih0KSBSZXNldFNxbCgpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFJlc2V0U3FsKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5TZXRLZXlzIiB0aXRsZT0iKHQpIFNldEtleXMoaXNBdXRvSW5jciwgZmllbGROYW1lcykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgU2V0S2V5cyhpc0F1dG9JbmNyLCBmaWVsZE5hbWVzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlNldFVuaXF1ZVRvZ2V0aGVyIiB0aXRsZT0iKHQpIFNldFVuaXF1ZVRvZ2V0aGVyKGZpZWxkTmFtZXMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNldFVuaXF1ZVRvZ2V0aGVyKGZpZWxkTmFtZXMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuU2V0VmVyc2lvbkNvbCIgdGl0bGU9Iih0KSBTZXRWZXJzaW9uQ29sKGZpZWxkKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZXRWZXJzaW9uQ29sKGZpZWxkKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlNxbEZvckNyZWF0ZSIgdGl0bGU9Iih0KSBTcWxGb3JDcmVhdGUoaWZOb3RFeGlzdHMpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNxbEZvckNyZWF0ZShpZk5vdEV4aXN0cykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYXJnZXRRdWVyeUluc2VydGVyIiB0aXRsZT0idHlwZSBUYXJnZXRRdWVyeUluc2VydGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgVGFyZ2V0UXVlcnlJbnNlcnRlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhcmdldGVkQXV0b0luY3JJbnNlcnRlciIgdGl0bGU9InR5cGUgVGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgVGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24iIHRpdGxlPSJ0eXBlIFRyYW5zYWN0aW9uIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgIHR5cGUgVHJhbnNhY3Rpb24KICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkNvbW1pdCIgdGl0bGU9Iih0KSBDb21taXQoKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBDb21taXQoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkRlbGV0ZSIgdGl0bGU9Iih0KSBEZWxldGUobGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgRGVsZXRlKGxpc3QpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uRXhlYyIgdGl0bGU9Iih0KSBFeGVjKHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBFeGVjKHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkdldCIgdGl0bGU9Iih0KSBHZXQoaSwga2V5cykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgR2V0KGksIGtleXMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uSW5zZXJ0IiB0aXRsZT0iKHQpIEluc2VydChsaXN0KSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBJbnNlcnQobGlzdCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5QcmVwYXJlIiB0aXRsZT0iKHQpIFByZXBhcmUocXVlcnkpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFByZXBhcmUocXVlcnkpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUXVlcnkiIHRpdGxlPSIodCkgUXVlcnkocSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUXVlcnkocSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5RdWVyeVJvdyIgdGl0bGU9Iih0KSBRdWVyeVJvdyhxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUXVlcnlSb3cocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUmVsZWFzZVNhdmVwb2ludCIgdGl0bGU9Iih0KSBSZWxlYXNlU2F2ZXBvaW50KHNhdmVwb2ludCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUmVsZWFzZVNhdmVwb2ludChzYXZlcG9pbnQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2siIHRpdGxlPSIodCkgUm9sbGJhY2soKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBSb2xsYmFjaygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2tUb1NhdmVwb2ludCIgdGl0bGU9Iih0KSBSb2xsYmFja1RvU2F2ZXBvaW50KHNhdmVwb2ludCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgUm9sbGJhY2tUb1NhdmVwb2ludChzYXZlcG9pbnQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2F2ZXBvaW50IiB0aXRsZT0iKHQpIFNhdmVwb2ludChuYW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTYXZlcG9pbnQobmFtZSkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3QiIHRpdGxlPSIodCkgU2VsZWN0KGksIHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZWxlY3QoaSwgcXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0RmxvYXQiIHRpdGxlPSIodCkgU2VsZWN0RmxvYXQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdEZsb2F0KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdEludCIgdGl0bGU9Iih0KSBTZWxlY3RJbnQocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdEludChxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3ROdWxsRmxvYXQiIHRpdGxlPSIodCkgU2VsZWN0TnVsbEZsb2F0KHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZWxlY3ROdWxsRmxvYXQocXVlcnksIGFyZ3MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0TnVsbEludCIgdGl0bGU9Iih0KSBTZWxlY3ROdWxsSW50KHF1ZXJ5LCBhcmdzKSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgICAgICh0KSBTZWxlY3ROdWxsSW50KHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxTdHIiIHRpdGxlPSIodCkgU2VsZWN0TnVsbFN0cihxdWVyeSwgYXJncykiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgU2VsZWN0TnVsbFN0cihxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RPbmUiIHRpdGxlPSIodCkgU2VsZWN0T25lKGhvbGRlciwgcXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdE9uZShob2xkZXIsIHF1ZXJ5LCBhcmdzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdFN0ciIgdGl0bGU9Iih0KSBTZWxlY3RTdHIocXVlcnksIGFyZ3MpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFNlbGVjdFN0cihxdWVyeSwgYXJncykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5VcGRhdGUiIHRpdGxlPSIodCkgVXBkYXRlKGxpc3QpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFVwZGF0ZShsaXN0KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlVwZGF0ZUNvbHVtbnMiIHRpdGxlPSIodCkgVXBkYXRlQ29sdW1ucyhmaWx0ZXIsIGxpc3QpIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgKHQpIFVwZGF0ZUNvbHVtbnMoZmlsdGVyLCBsaXN0KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLldpdGhDb250ZXh0IiB0aXRsZT0iKHQpIFdpdGhDb250ZXh0KGN0eCkiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAodCkgV2l0aENvbnRleHQoY3R4KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1R5cGVDb252ZXJ0ZXIiIHRpdGxlPSJ0eXBlIFR5cGVDb252ZXJ0ZXIiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBUeXBlQ29udmVydGVyCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAgCiAgICAgIDwvdWw+CiAgICA8L2xpPgogIAogIAo8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1zb3VyY2VmaWxlcyIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgU291cmNlIEZpbGVzCiAgICAgICAgPC9hPgogICAgICA8L2xpPgogICAgCiAgICAKICA8L3VsPgoKICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdk1vYmlsZSBqcy1tYWluTmF2TW9iaWxlIj4KICAgIDxsYWJlbCBjbGFzcz0iZ28tTGFiZWwiPgogICAgICA8c2VsZWN0IGNsYXNzPSJnby1TZWxlY3QiPgogICAgICAgIAogICAgICAgICAgPG9wdGlvbiBzZWxlY3RlZCBkaXNhYmxlZD5SRUFETUU8L29wdGlvbj4KICAgICAgICAKICAgICAgPC9zZWxlY3Q+CiAgICA8L2xhYmVsPgogIDwvZGl2Pgo8L25hdj4KICAgIDxhcnRpY2xlIGNsYXNzPSJnby1NYWluLWFydGljbGUganMtbWFpbkNvbnRlbnQiPgogIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzIiBkYXRhLXRlc3QtaWQ9IlVuaXREZXRhaWxzIiBzdHlsZT0iZGlzcGxheTogYmxvY2s7Ij4KICAgIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzLWNvbnRlbnQganMtdW5pdERldGFpbHNDb250ZW50IiBkYXRhLXRlc3QtaWQ9IlVuaXREZXRhaWxzLWNvbnRlbnQiPgogICAgICAKICAgICAgICAKICA8ZGl2IGNsYXNzPSJVbml0UmVhZG1lIFVuaXRSZWFkbWUtLWV4cGFuZGVkIGpzLXJlYWRtZSI+CiAgICA8aDIgY2xhc3M9IlVuaXRSZWFkbWUtdGl0bGUiIGlkPSJzZWN0aW9uLXJlYWRtZSI+CiAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2Nocm9tZV9yZWFkZXJfbW9kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFJFQURNRQogICAgICA8YSBjbGFzcz0iVW5pdFJlYWRtZS1pZExpbmsiIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSI+wrY8L2E+CiAgICA8L2gyPgogICAgCiAgICAgIDxkaXYgY2xhc3M9IlVuaXRSZWFkbWUtY29udGVudCIgZGF0YS10ZXN0LWlkPSJVbml0LXJlYWRtZUNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9Ik92ZXJ2aWV3LXJlYWRtZUNvbnRlbnQganMtcmVhZG1lQ29udGVudCI+PGgzIGNsYXNzPSJoMSIgaWQ9InJlYWRtZS1nby1yZWxhdGlvbmFsLXBlcnNpc3RlbmNlIj5HbyBSZWxhdGlvbmFsIFBlcnNpc3RlbmNlPC9oMz4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9hY3Rpb25zIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9hY3Rpb25zL3dvcmtmbG93cy9nby55bWwvYmFkZ2Uuc3ZnIiBhbHQ9ImJ1aWxkIHN0YXR1cyIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9pc3N1ZXMiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9pc3N1ZXMvZ28tZ29ycC9nb3JwLnN2ZyIgYWx0PSJpc3N1ZXMiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vcGtnLmdvLmRldi9iYWRnZS9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92My5zdmciIGFsdD0iR28gUmVmZXJlbmNlIi8+PC9hPjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS11cGRhdGUtMjAxNi0xMS0xMy1mdXR1cmUtdmVyc2lvbnMiPlVwZGF0ZSAyMDE2LTExLTEzOiBGdXR1cmUgdmVyc2lvbnM8L2g1Pgo8cD5BcyBtYW55IG9mIHRoZSBtYWludGFpbmVycyBoYXZlIGJlY29tZSBidXN5IHdpdGggb3RoZXIgcHJvamVjdHMsCnByb2dyZXNzIHRvd2FyZCB0aGUgZXZlci1lbHVzaXZlIHYyIGhhcyBzbG93ZWQgdG8gdGhlIHBvaW50IHRoYXQgd2UmIzM5O3JlCm9ubHkgb2NjYXNpb25hbGx5IG1ha2luZyBwcm9ncmVzcyBvdXRzaWRlIG9mIG1lcmdpbmcgcHVsbCByZXF1ZXN0cy4KSW4gdGhlIGludGVyZXN0IG9mIGNvbnRpbnVpbmcgdG8gcmVsZWFzZSwgSSYjMzk7ZCBsaWtlIHRvIGxlYW4gdG93YXJkIGEKbW9yZSBtYWludGFpbmFibGUgcGF0aCBmb3J3YXJkLjwvcD4KPHA+Rm9yIHRoZSBtb21lbnQsIEkgYW0gcmVsZWFzaW5nIGEgdjIgdGFnIHdpdGggdGhlIGN1cnJlbnQgZmVhdHVyZSBzZXQKZnJvbSBtYXN0ZXIsIGFzIHNvbWUgb2YgdGhvc2UgZmVhdHVyZXMgaGF2ZSBiZWVuIGFjdGl2ZWx5IHVzZWQgYW5kCnJlbGllZCBvbiBieSBtb3JlIHRoYW4gb25lIHByb2plY3QuICBPdXIgbmV4dCBnb2FsIGlzIHRvIGNvbnRpbnVlCmNsZWFuaW5nIHVwIHRoZSBjb2RlIGJhc2Ugd2l0aCBub24tYnJlYWtpbmcgY2hhbmdlcyBhcyBtdWNoIGFzCnBvc3NpYmxlLCBidXQgaWYvd2hlbiBhIGJyZWFraW5nIGNoYW5nZSBpcyBuZWVkZWQsIHdlJiMzOTtsbCBqdXN0IHJlbGVhc2UKbmV3IHZlcnNpb25zLiAgVGhpcyBhbGxvd3MgdXMgdG8gY29udGludWUgZGV2ZWxvcG1lbnQgYXQgd2hhdGV2ZXIgcGFjZQp3ZSYjMzk7cmUgY2FwYWJsZSBvZiwgd2l0aG91dCBkZWxheWluZyB0aGUgcmVsZWFzZSBvZiBmZWF0dXJlcyBvciByZWZ1c2luZwpQUnMuPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWludHJvZHVjdGlvbiI+SW50cm9kdWN0aW9uPC9oND4KPHA+SSBoZXNpdGF0ZSB0byBjYWxsIGdvcnAgYW4gT1JNLiAgR28gZG9lc24mIzM5O3QgcmVhbGx5IGhhdmUgb2JqZWN0cywgYXQKbGVhc3Qgbm90IGluIHRoZSBjbGFzc2ljIFNtYWxsdGFsay9KYXZhIHNlbnNlLiAgVGhlcmUgZ29lcyB0aGUgJiMzNDtPJiMzNDsuCmdvcnAgZG9lc24mIzM5O3Qga25vdyBhbnl0aGluZyBhYm91dCB0aGUgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHlvdXIKc3RydWN0cyAoYXQgbGVhc3Qgbm90IHlldCkuICBTbyB0aGUgJiMzNDtSJiMzNDsgaXMgcXVlc3Rpb25hYmxlIHRvbyAoYnV0IEkgdXNlCml0IGluIHRoZSBuYW1lIGJlY2F1c2UsIHdlbGwsIGl0IHNlZW1lZCBtb3JlIGNsZXZlcikuPC9wPgo8cD5UaGUgJiMzNDtNJiMzNDsgaXMgYWxpdmUgYW5kIHdlbGwuICBHaXZlbiBzb21lIEdvIHN0cnVjdHMgYW5kIGEgZGF0YWJhc2UsIGdvcnAKc2hvdWxkIHJlbW92ZSBhIGZhaXIgYW1vdW50IG9mIGJvaWxlcnBsYXRlIGJ1c3ktd29yayBmcm9tIHlvdXIgY29kZS48L3A+CjxwPkkgaG9wZSB0aGF0IGdvcnAgc2F2ZXMgeW91IHRpbWUsIG1pbmltaXplcyB0aGUgZHJ1ZGdlcnkgb2YgZ2V0dGluZwpkYXRhIGluIGFuZCBvdXQgb2YgeW91ciBkYXRhYmFzZSwgYW5kIGhlbHBzIHlvdXIgY29kZSBmb2N1cyBvbgphbGdvcml0aG1zLCBub3QgaW5mcmFzdHJ1Y3R1cmUuPC9wPgo8dWw+CjxsaT5CaW5kIHN0cnVjdCBmaWVsZHMgdG8gdGFibGUgY29sdW1ucyB2aWEgQVBJIG9yIHRhZzwvbGk+CjxsaT5TdXBwb3J0IGZvciBlbWJlZGRlZCBzdHJ1Y3RzPC9saT4KPGxpPlN1cHBvcnQgZm9yIHRyYW5zYWN0aW9uczwvbGk+CjxsaT5Gb3J3YXJkIGVuZ2luZWVyIGRiIHNjaGVtYSBmcm9tIHN0cnVjdHMgKGdyZWF0IGZvciB1bml0IHRlc3RzKTwvbGk+CjxsaT5QcmUvcG9zdCBpbnNlcnQvdXBkYXRlL2RlbGV0ZSBob29rczwvbGk+CjxsaT5BdXRvbWF0aWNhbGx5IGdlbmVyYXRlIGluc2VydC91cGRhdGUvZGVsZXRlIHN0YXRlbWVudHMgZm9yIGEgc3RydWN0PC9saT4KPGxpPkF1dG9tYXRpYyBiaW5kaW5nIG9mIGF1dG8gaW5jcmVtZW50IFBLcyBiYWNrIHRvIHN0cnVjdCBhZnRlciBpbnNlcnQ8L2xpPgo8bGk+RGVsZXRlIGJ5IHByaW1hcnkga2V5KHMpPC9saT4KPGxpPlNlbGVjdCBieSBwcmltYXJ5IGtleShzKTwvbGk+CjxsaT5PcHRpb25hbCB0cmFjZSBzcWwgbG9nZ2luZzwvbGk+CjxsaT5CaW5kIGFyYml0cmFyeSBTUUwgcXVlcmllcyB0byBhIHN0cnVjdDwvbGk+CjxsaT5CaW5kIHNsaWNlIHRvIFNFTEVDVCBxdWVyeSByZXN1bHRzIHdpdGhvdXQgdHlwZSBhc3NlcnRpb25zPC9saT4KPGxpPlVzZSBwb3NpdGlvbmFsIG9yIG5hbWVkIGJpbmQgcGFyYW1ldGVycyBpbiBjdXN0b20gU0VMRUNUIHF1ZXJpZXM8L2xpPgo8bGk+T3B0aW9uYWwgb3B0aW1pc3RpYyBsb2NraW5nIHVzaW5nIGEgdmVyc2lvbiBjb2x1bW4gKGZvcgp1cGRhdGUvZGVsZXRlcyk8L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWluc3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uPC9oND4KPHA+VXNlIDxjb2RlPmdvIGdldDwvY29kZT4gb3IgeW91ciBmYXZvcml0ZSB2ZW5kb3JpbmcgdG9vbCwgdXNpbmcgd2hpY2hldmVyIGltcG9ydApwYXRoIHlvdSYjMzk7ZCBsaWtlLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS12ZXJzaW9uaW5nIj5WZXJzaW9uaW5nPC9oND4KPHA+V2UgdXNlIHNlbWFudGljIHZlcnNpb24gdGFncy4gIEZlZWwgZnJlZSB0byBpbXBvcnQgdGhyb3VnaCA8Y29kZT5nb3BrZy5pbjwvY29kZT4KKGUuZy4gPGNvZGU+Z29wa2cuaW4vZ29ycC52MjwvY29kZT4pIHRvIGdldCB0aGUgbGF0ZXN0IHRhZyBmb3IgYSBtYWpvciB2ZXJzaW9uLApvciBjaGVjayBvdXQgdGhlIHRhZyB1c2luZyB5b3VyIGZhdm9yaXRlIHZlbmRvcmluZyB0b29sLjwvcD4KPHA+RGV2ZWxvcG1lbnQgaXMgbm90IHZlcnkgYWN0aXZlIHJpZ2h0IG5vdywgYnV0IHdlIGhhdmUgcGxhbnMgdG8KcmVzdHJ1Y3R1cmUgPGNvZGU+Z29ycDwvY29kZT4gYXMgd2UgY29udGludWUgdG8gbW92ZSB0b3dhcmQgYSBtb3JlIGV4dGVuc2libGUKc3lzdGVtLiAgV2hlbmV2ZXIgYSBicmVha2luZyBjaGFuZ2UgaXMgbmVlZGVkLCB0aGUgbWFqb3IgdmVyc2lvbiB3aWxsCmJlIGJ1bXBlZC48L3A+CjxwPlRoZSA8Y29kZT5tYXN0ZXI8L2NvZGU+IGJyYW5jaCBpcyB3aGVyZSBhbGwgZGV2ZWxvcG1lbnQgaXMgZG9uZSwgYW5kIGJyZWFraW5nCmNoYW5nZXMgbWF5IGhhcHBlbiBmcm9tIHRpbWUgdG8gdGltZS4gIFRoYXQgc2FpZCwgaWYgeW91IHdhbnQgdG8gbGl2ZQpvbiB0aGUgYmxlZWRpbmcgZWRnZSBhbmQgYXJlIGNvbWZvcnRhYmxlIHVwZGF0aW5nIHlvdXIgY29kZSB3aGVuIHdlCm1ha2UgYSBicmVha2luZyBjaGFuZ2UsIHlvdSBtYXkgdXNlIDxjb2RlPmdpdGh1Yi5jb20vZ28tZ29ycC9nb3JwPC9jb2RlPiBhcyB5b3VyCmltcG9ydCBwYXRoLjwvcD4KPHA+Q2hlY2sgdGhlIHZlcnNpb24gdGFncyB0byBzZWUgd2hhdCYjMzk7cyBhdmFpbGFibGUuICBXZSYjMzk7bGwgbWFrZSBhIGdvb2QKZmFpdGggZWZmb3J0IHRvIGFkZCBiYWRnZXMgZm9yIG5ldyB2ZXJzaW9ucywgYnV0IHdlIG1ha2Ugbm8KZ3VhcmFudGVlcy48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtc3VwcG9ydGVkLWdvLXZlcnNpb25zIj5TdXBwb3J0ZWQgR28gdmVyc2lvbnM8L2g0Pgo8cD5UaGlzIHBhY2thZ2UgaXMgZ3VhcmFudGVlZCB0byBiZSBjb21wYXRpYmxlIHdpdGggdGhlIGxhdGVzdCAyIG1ham9yCnZlcnNpb25zIG9mIEdvLjwvcD4KPHA+QW55IGVhcmxpZXIgdmVyc2lvbnMgYXJlIG9ubHkgc3VwcG9ydGVkIG9uIGEgYmVzdCBlZmZvcnQgYmFzaXMgYW5kIGNhbgpiZSBkcm9wcGVkIGFueSB0aW1lLiAgR28gaGFzIGEgZ3JlYXQgY29tcGF0aWJpbGl0eSBwcm9taXNlLiBVcGdyYWRpbmcKeW91ciBwcm9ncmFtIHRvIGEgbmV3ZXIgdmVyc2lvbiBvZiBHbyBzaG91bGQgbmV2ZXIgcmVhbGx5IGJlIGEKcHJvYmxlbS48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtbWlncmF0aW9uLWd1aWRlIj5NaWdyYXRpb24gZ3VpZGU8L2g0Pgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLXByZS12Mi10by12MiI+UHJlLXYyIHRvIHYyPC9oNj4KPHA+QXV0b21hdGljIG1hcHBpbmcgb2YgdGhlIHZlcnNpb24gY29sdW1uIHVzZWQgaW4gb3B0aW1pc3RpYyBsb2NraW5nIGhhcwpiZWVuIHJlbW92ZWQgYXMgaXQgY291bGQgY2F1c2UgcHJvYmxlbXMgaWYgdGhlIHR5cGUgd2FzIG5vdCBpbnQuIFRoZQp2ZXJzaW9uIGNvbHVtbiBtdXN0IG5vdyBleHBsaWNpdGx5IGJlIHNldCB3aXRoCjxjb2RlPnRhYmxlbWFwLlNldFZlcnNpb25Db2woKTwvY29kZT4uPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWhlbHAtc3VwcG9ydCI+SGVscC9TdXBwb3J0PC9oND4KPHA+VXNlIG91ciA8YSBocmVmPSJodHRwczovL2dpdHRlci5pbS9nby1nb3JwL2dvcnAiIHJlbD0ibm9mb2xsb3ciPjxjb2RlPmdpdHRlcjwvY29kZT4gY2hhbm5lbDwvYT4uICBXZSB1c2VkCnRvIHVzZSBJUkMsIGJ1dCB3aXRoIG1vc3Qgb2YgdXMgYmVpbmcgcHVsbGVkIGluIG1hbnkgZGlyZWN0aW9ucywgd2UKb2Z0ZW4gbmVlZCB0aGUgZW1haWwgbm90aWZpY2F0aW9ucyBmcm9tIDxjb2RlPmdpdHRlcjwvY29kZT4gdG8geWVsbCBhdCB1cyB0byBzaWduCmluLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1xdWlja3N0YXJ0Ij5RdWlja3N0YXJ0PC9oND4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCiAgICAmIzM0O2RhdGFiYXNlL3NxbCYjMzQ7CiAgICAmIzM0O2dvcGtnLmluL2dvcnAudjEmIzM0OwogICAgXyAmIzM0O2dpdGh1Yi5jb20vbWF0dG4vZ28tc3FsaXRlMyYjMzQ7CiAgICAmIzM0O2xvZyYjMzQ7CiAgICAmIzM0O3RpbWUmIzM0OwopCgpmdW5jIG1haW4oKSB7CiAgICAvLyBpbml0aWFsaXplIHRoZSBEYk1hcAogICAgZGJtYXAgOj0gaW5pdERiKCkKICAgIGRlZmVyIGRibWFwLkRiLkNsb3NlKCkKCiAgICAvLyBkZWxldGUgYW55IGV4aXN0aW5nIHJvd3MKICAgIGVyciA6PSBkYm1hcC5UcnVuY2F0ZVRhYmxlcygpCiAgICBjaGVja0VycihlcnIsICYjMzQ7VHJ1bmNhdGVUYWJsZXMgZmFpbGVkJiMzNDspCgogICAgLy8gY3JlYXRlIHR3byBwb3N0cwogICAgcDEgOj0gbmV3UG9zdCgmIzM0O0dvIDEuMSByZWxlYXNlZCEmIzM0OywgJiMzNDtMb3JlbSBpcHN1bSBsb3JlbSBpcHN1bSYjMzQ7KQogICAgcDIgOj0gbmV3UG9zdCgmIzM0O0dvIDEuMiByZWxlYXNlZCEmIzM0OywgJiMzNDtMb3JlbSBpcHN1bSBsb3JlbSBpcHN1bSYjMzQ7KQoKICAgIC8vIGluc2VydCByb3dzIC0gYXV0byBpbmNyZW1lbnQgUEtzIHdpbGwgYmUgc2V0IHByb3Blcmx5IGFmdGVyIHRoZSBpbnNlcnQKICAgIGVyciA9IGRibWFwLkluc2VydCgmYW1wO3AxLCAmYW1wO3AyKQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O0luc2VydCBmYWlsZWQmIzM0OykKCiAgICAvLyB1c2UgY29udmVuaWVuY2UgU2VsZWN0SW50CiAgICBjb3VudCwgZXJyIDo9IGRibWFwLlNlbGVjdEludCgmIzM0O3NlbGVjdCBjb3VudCgqKSBmcm9tIHBvc3RzJiMzNDspCiAgICBjaGVja0VycihlcnIsICYjMzQ7c2VsZWN0IGNvdW50KCopIGZhaWxlZCYjMzQ7KQogICAgbG9nLlByaW50bG4oJiMzNDtSb3dzIGFmdGVyIGluc2VydGluZzomIzM0OywgY291bnQpCgogICAgLy8gdXBkYXRlIGEgcm93CiAgICBwMi5UaXRsZSA9ICYjMzQ7R28gMS4yIGlzIGJldHRlciB0aGFuIGV2ZXImIzM0OwogICAgY291bnQsIGVyciA9IGRibWFwLlVwZGF0ZSgmYW1wO3AyKQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O1VwZGF0ZSBmYWlsZWQmIzM0OykKICAgIGxvZy5QcmludGxuKCYjMzQ7Um93cyB1cGRhdGVkOiYjMzQ7LCBjb3VudCkKCiAgICAvLyBmZXRjaCBvbmUgcm93IC0gbm90ZSB1c2Ugb2YgJiMzNDtwb3N0X2lkJiMzNDsgaW5zdGVhZCBvZiAmIzM0O0lkJiMzNDsgc2luY2UgY29sdW1uIGlzIGFsaWFzZWQKICAgIC8vCiAgICAvLyBQb3N0Z3JlcyB1c2VycyBzaG91bGQgdXNlICQxIGluc3RlYWQgb2YgPyBwbGFjZWhvbGRlcnMKICAgIC8vIFNlZSAmIzM5O0tub3duIElzc3VlcyYjMzk7IGJlbG93CiAgICAvLwogICAgZXJyID0gZGJtYXAuU2VsZWN0T25lKCZhbXA7cDIsICYjMzQ7c2VsZWN0ICogZnJvbSBwb3N0cyB3aGVyZSBwb3N0X2lkPT8mIzM0OywgcDIuSWQpCiAgICBjaGVja0VycihlcnIsICYjMzQ7U2VsZWN0T25lIGZhaWxlZCYjMzQ7KQogICAgbG9nLlByaW50bG4oJiMzNDtwMiByb3c6JiMzNDssIHAyKQoKICAgIC8vIGZldGNoIGFsbCByb3dzCiAgICB2YXIgcG9zdHMgW11Qb3N0CiAgICBfLCBlcnIgPSBkYm1hcC5TZWxlY3QoJmFtcDtwb3N0cywgJiMzNDtzZWxlY3QgKiBmcm9tIHBvc3RzIG9yZGVyIGJ5IHBvc3RfaWQmIzM0OykKICAgIGNoZWNrRXJyKGVyciwgJiMzNDtTZWxlY3QgZmFpbGVkJiMzNDspCiAgICBsb2cuUHJpbnRsbigmIzM0O0FsbCByb3dzOiYjMzQ7KQogICAgZm9yIHgsIHAgOj0gcmFuZ2UgcG9zdHMgewogICAgICAgIGxvZy5QcmludGYoJiMzNDsgICAgJWQ6ICV2XG4mIzM0OywgeCwgcCkKICAgIH0KCiAgICAvLyBkZWxldGUgcm93IGJ5IFBLCiAgICBjb3VudCwgZXJyID0gZGJtYXAuRGVsZXRlKCZhbXA7cDEpCiAgICBjaGVja0VycihlcnIsICYjMzQ7RGVsZXRlIGZhaWxlZCYjMzQ7KQogICAgbG9nLlByaW50bG4oJiMzNDtSb3dzIGRlbGV0ZWQ6JiMzNDssIGNvdW50KQoKICAgIC8vIGRlbGV0ZSByb3cgbWFudWFsbHkgdmlhIEV4ZWMKICAgIF8sIGVyciA9IGRibWFwLkV4ZWMoJiMzNDtkZWxldGUgZnJvbSBwb3N0cyB3aGVyZSBwb3N0X2lkPT8mIzM0OywgcDIuSWQpCiAgICBjaGVja0VycihlcnIsICYjMzQ7RXhlYyBmYWlsZWQmIzM0OykKCiAgICAvLyBjb25maXJtIGNvdW50IGlzIHplcm8KICAgIGNvdW50LCBlcnIgPSBkYm1hcC5TZWxlY3RJbnQoJiMzNDtzZWxlY3QgY291bnQoKikgZnJvbSBwb3N0cyYjMzQ7KQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O3NlbGVjdCBjb3VudCgqKSBmYWlsZWQmIzM0OykKICAgIGxvZy5QcmludGxuKCYjMzQ7Um93IGNvdW50IC0gc2hvdWxkIGJlIHplcm86JiMzNDssIGNvdW50KQoKICAgIGxvZy5QcmludGxuKCYjMzQ7RG9uZSEmIzM0OykKfQoKdHlwZSBQb3N0IHN0cnVjdCB7CiAgICAvLyBkYiB0YWcgbGV0cyB5b3Ugc3BlY2lmeSB0aGUgY29sdW1uIG5hbWUgaWYgaXQgZGlmZmVycyBmcm9tIHRoZSBzdHJ1Y3QgZmllbGQKICAgIElkICAgICAgaW50NjQgIGBkYjomIzM0O3Bvc3RfaWQmIzM0O2AKICAgIENyZWF0ZWQgaW50NjQKICAgIFRpdGxlICAgc3RyaW5nIGBkYjomIzM0OyxzaXplOjUwJiMzNDtgICAgICAgICAgICAgICAgLy8gQ29sdW1uIHNpemUgc2V0IHRvIDUwCiAgICBCb2R5ICAgIHN0cmluZyBgZGI6JiMzNDthcnRpY2xlX2JvZHksc2l6ZToxMDI0JiMzNDtgIC8vIFNldCBib3RoIGNvbHVtbiBuYW1lIGFuZCBzaXplCn0KCmZ1bmMgbmV3UG9zdCh0aXRsZSwgYm9keSBzdHJpbmcpIFBvc3QgewogICAgcmV0dXJuIFBvc3R7CiAgICAgICAgQ3JlYXRlZDogdGltZS5Ob3coKS5Vbml4TmFubygpLAogICAgICAgIFRpdGxlOiAgIHRpdGxlLAogICAgICAgIEJvZHk6ICAgIGJvZHksCiAgICB9Cn0KCmZ1bmMgaW5pdERiKCkgKmdvcnAuRGJNYXAgewogICAgLy8gY29ubmVjdCB0byBkYiB1c2luZyBzdGFuZGFyZCBHbyBkYXRhYmFzZS9zcWwgQVBJCiAgICAvLyB1c2Ugd2hhdGV2ZXIgZGF0YWJhc2Uvc3FsIGRyaXZlciB5b3Ugd2lzaAogICAgZGIsIGVyciA6PSBzcWwuT3BlbigmIzM0O3NxbGl0ZTMmIzM0OywgJiMzNDsvdG1wL3Bvc3RfZGIuYmluJiMzNDspCiAgICBjaGVja0VycihlcnIsICYjMzQ7c3FsLk9wZW4gZmFpbGVkJiMzNDspCgogICAgLy8gY29uc3RydWN0IGEgZ29ycCBEYk1hcAogICAgZGJtYXAgOj0gJmFtcDtnb3JwLkRiTWFwe0RiOiBkYiwgRGlhbGVjdDogZ29ycC5TcWxpdGVEaWFsZWN0e319CgogICAgLy8gYWRkIGEgdGFibGUsIHNldHRpbmcgdGhlIHRhYmxlIG5hbWUgdG8gJiMzOTtwb3N0cyYjMzk7IGFuZAogICAgLy8gc3BlY2lmeWluZyB0aGF0IHRoZSBJZCBwcm9wZXJ0eSBpcyBhbiBhdXRvIGluY3JlbWVudGluZyBQSwogICAgZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQb3N0e30sICYjMzQ7cG9zdHMmIzM0OykuU2V0S2V5cyh0cnVlLCAmIzM0O0lkJiMzNDspCgogICAgLy8gY3JlYXRlIHRoZSB0YWJsZS4gaW4gYSBwcm9kdWN0aW9uIHN5c3RlbSB5b3UmIzM5O2QgZ2VuZXJhbGx5CiAgICAvLyB1c2UgYSBtaWdyYXRpb24gdG9vbCwgb3IgY3JlYXRlIHRoZSB0YWJsZXMgdmlhIHNjcmlwdHMKICAgIGVyciA9IGRibWFwLkNyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkKICAgIGNoZWNrRXJyKGVyciwgJiMzNDtDcmVhdGUgdGFibGVzIGZhaWxlZCYjMzQ7KQoKICAgIHJldHVybiBkYm1hcAp9CgpmdW5jIGNoZWNrRXJyKGVyciBlcnJvciwgbXNnIHN0cmluZykgewogICAgaWYgZXJyICE9IG5pbCB7CiAgICAgICAgbG9nLkZhdGFsbG4obXNnLCBlcnIpCiAgICB9Cn0KPC9jb2RlPjwvcHJlPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWV4YW1wbGVzIj5FeGFtcGxlczwvaDQ+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtbWFwcGluZy1zdHJ1Y3RzLXRvLXRhYmxlcyI+TWFwcGluZyBzdHJ1Y3RzIHRvIHRhYmxlczwvaDU+CjxwPkZpcnN0IGRlZmluZSBzb21lIHR5cGVzOjwvcD4KPHByZT48Y29kZT50eXBlIEludm9pY2Ugc3RydWN0IHsKICAgIElkICAgICAgIGludDY0CiAgICBDcmVhdGVkICBpbnQ2NAogICAgVXBkYXRlZCAgaW50NjQKICAgIE1lbW8gICAgIHN0cmluZwogICAgUGVyc29uSWQgaW50NjQKfQoKdHlwZSBQZXJzb24gc3RydWN0IHsKICAgIElkICAgICAgaW50NjQKICAgIENyZWF0ZWQgaW50NjQKICAgIFVwZGF0ZWQgaW50NjQKICAgIEZOYW1lICAgc3RyaW5nCiAgICBMTmFtZSAgIHN0cmluZwp9CgovLyBFeGFtcGxlIG9mIHVzaW5nIHRhZ3MgdG8gYWxpYXMgZmllbGRzIHRvIGNvbHVtbiBuYW1lcwovLyBUaGUgJiMzOTtkYiYjMzk7IHZhbHVlIGlzIHRoZSBjb2x1bW4gbmFtZQovLwovLyBBIGh5cGhlbiB3aWxsIGNhdXNlIGdvcnAgdG8gc2tpcCB0aGlzIGZpZWxkLCBzaW1pbGFyIHRvIHRoZQovLyBHbyBqc29uIHBhY2thZ2UuCi8vCi8vIFRoaXMgaXMgZXF1aXZhbGVudCB0byB1c2luZyB0aGUgQ29sTWFwIG1ldGhvZHM6Ci8vCi8vICAgdGFibGUgOj0gZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQcm9kdWN0e30sICYjMzQ7cHJvZHVjdCYjMzQ7KQovLyAgIHRhYmxlLkNvbE1hcCgmIzM0O0lkJiMzNDspLlJlbmFtZSgmIzM0O3Byb2R1Y3RfaWQmIzM0OykKLy8gICB0YWJsZS5Db2xNYXAoJiMzNDtQcmljZSYjMzQ7KS5SZW5hbWUoJiMzNDt1bml0X3ByaWNlJiMzNDspCi8vICAgdGFibGUuQ29sTWFwKCYjMzQ7SWdub3JlTWUmIzM0OykuU2V0VHJhbnNpZW50KHRydWUpCi8vCi8vIFlvdSBjYW4gb3B0aW9uYWxseSBkZWNsYXJlIHRoZSBmaWVsZCB0byBiZSBhIHByaW1hcnkga2V5IGFuZC9vciBhdXRvaW5jcmVtZW50Ci8vCnR5cGUgUHJvZHVjdCBzdHJ1Y3QgewogICAgSWQgICAgICAgICBpbnQ2NCAgICAgYGRiOiYjMzQ7cHJvZHVjdF9pZCwgcHJpbWFyeWtleSwgYXV0b2luY3JlbWVudCYjMzQ7YAogICAgUHJpY2UgICAgICBpbnQ2NCAgICAgYGRiOiYjMzQ7dW5pdF9wcmljZSYjMzQ7YAogICAgSWdub3JlTWUgICBzdHJpbmcgICAgYGRiOiYjMzQ7LSYjMzQ7YAp9CjwvY29kZT48L3ByZT4KPHA+VGhlbiBjcmVhdGUgYSBtYXBwZXIsIHR5cGljYWxseSB5b3UmIzM5O2QgZG8gdGhpcyBvbmUgdGltZSBhdCBhcHAgc3RhcnR1cDo8L3A+CjxwcmU+PGNvZGU+Ly8gY29ubmVjdCB0byBkYiB1c2luZyBzdGFuZGFyZCBHbyBkYXRhYmFzZS9zcWwgQVBJCi8vIHVzZSB3aGF0ZXZlciBkYXRhYmFzZS9zcWwgZHJpdmVyIHlvdSB3aXNoCmRiLCBlcnIgOj0gc3FsLk9wZW4oJiMzNDtteW15c3FsJiMzNDssICYjMzQ7dGNwOmxvY2FsaG9zdDozMzA2Km15ZGIvbXl1c2VyL215cGFzc3dvcmQmIzM0OykKCi8vIGNvbnN0cnVjdCBhIGdvcnAgRGJNYXAKZGJtYXAgOj0gJmFtcDtnb3JwLkRiTWFwe0RiOiBkYiwgRGlhbGVjdDogZ29ycC5NeVNRTERpYWxlY3R7JiMzNDtJbm5vREImIzM0OywgJiMzNDtVVEY4JiMzNDt9fQoKLy8gcmVnaXN0ZXIgdGhlIHN0cnVjdHMgeW91IHdpc2ggdG8gdXNlIHdpdGggZ29ycAovLyB5b3UgY2FuIGFsc28gdXNlIHRoZSBzaG9ydGVyIGRibWFwLkFkZFRhYmxlKCkgaWYgeW91Ci8vIGRvbiYjMzk7dCB3YW50IHRvIG92ZXJyaWRlIHRoZSB0YWJsZSBuYW1lCi8vCi8vIFNldEtleXModHJ1ZSkgbWVhbnMgd2UgaGF2ZSBhIGF1dG8gaW5jcmVtZW50IHByaW1hcnkga2V5LCB3aGljaAovLyB3aWxsIGdldCBhdXRvbWF0aWNhbGx5IGJvdW5kIHRvIHlvdXIgc3RydWN0IHBvc3QtaW5zZXJ0Ci8vCnQxIDo9IGRibWFwLkFkZFRhYmxlV2l0aE5hbWUoSW52b2ljZXt9LCAmIzM0O2ludm9pY2VfdGVzdCYjMzQ7KS5TZXRLZXlzKHRydWUsICYjMzQ7SWQmIzM0OykKdDIgOj0gZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQZXJzb257fSwgJiMzNDtwZXJzb25fdGVzdCYjMzQ7KS5TZXRLZXlzKHRydWUsICYjMzQ7SWQmIzM0OykKdDMgOj0gZGJtYXAuQWRkVGFibGVXaXRoTmFtZShQcm9kdWN0e30sICYjMzQ7cHJvZHVjdF90ZXN0JiMzNDspLlNldEtleXModHJ1ZSwgJiMzNDtJZCYjMzQ7KQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtc3RydWN0LWVtYmVkZGluZyI+U3RydWN0IEVtYmVkZGluZzwvaDU+CjxwPmdvcnAgc3VwcG9ydHMgZW1iZWRkaW5nIHN0cnVjdHMuICBGb3IgZXhhbXBsZTo8L3A+CjxwcmU+PGNvZGU+dHlwZSBOYW1lcyBzdHJ1Y3QgewogICAgRmlyc3ROYW1lIHN0cmluZwogICAgTGFzdE5hbWUgIHN0cmluZwp9Cgp0eXBlIFdpdGhFbWJlZGRlZFN0cnVjdCBzdHJ1Y3QgewogICAgSWQgaW50NjQKICAgIE5hbWVzCn0KCmVzIDo9ICZhbXA7V2l0aEVtYmVkZGVkU3RydWN0ey0xLCBOYW1lc3tGaXJzdE5hbWU6ICYjMzQ7QWxpY2UmIzM0OywgTGFzdE5hbWU6ICYjMzQ7U21pdGgmIzM0O319CmVyciA6PSBkYm1hcC5JbnNlcnQoZXMpCjwvY29kZT48L3ByZT4KPHA+U2VlIHRoZSA8Y29kZT5UZXN0V2l0aEVtYmVkZGVkU3RydWN0PC9jb2RlPiBmdW5jdGlvbiBpbiA8Y29kZT5nb3JwX3Rlc3QuZ288L2NvZGU+IGZvciBhIGZ1bGwgZXhhbXBsZS48L3A+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtY3JlYXRlLWRyb3AtdGFibGVzIj5DcmVhdGUvRHJvcCBUYWJsZXM8L2g1Pgo8cD5BdXRvbWF0aWNhbGx5IGNyZWF0ZSAvIGRyb3AgcmVnaXN0ZXJlZCB0YWJsZXMuICBUaGlzIGlzIHVzZWZ1bCBmb3IgdW5pdCB0ZXN0cwpidXQgaXMgZW50aXJlbHkgb3B0aW9uYWwuICBZb3UgY2FuIG9mIGNvdXJzZSB1c2UgZ29ycCB3aXRoIHRhYmxlcyBjcmVhdGVkIG1hbnVhbGx5LApvciB3aXRoIGEgc2VwYXJhdGUgbWlncmF0aW9uIHRvb2wgKGxpa2UgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3J1YmVudi9zcWwtbWlncmF0ZSIgcmVsPSJub2ZvbGxvdyI+c3FsLW1pZ3JhdGU8L2E+LCA8YSBocmVmPSJodHRwczovL2JpdGJ1Y2tldC5vcmcvbGlhbXN0YXNrL2dvb3NlIiByZWw9Im5vZm9sbG93Ij5nb29zZTwvYT4gb3IgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21hdHRlcy9taWdyYXRlIiByZWw9Im5vZm9sbG93Ij5taWdyYXRlPC9hPikuPC9wPgo8cHJlPjxjb2RlPi8vIGNyZWF0ZSBhbGwgcmVnaXN0ZXJlZCB0YWJsZXMKZGJtYXAuQ3JlYXRlVGFibGVzKCkKCi8vIHNhbWUgYXMgYWJvdmUsIGJ1dCB1c2VzICYjMzQ7aWYgbm90IGV4aXN0cyYjMzQ7IGNsYXVzZSB0byBza2lwIHRhYmxlcyB0aGF0IGFyZQovLyBhbHJlYWR5IGRlZmluZWQKZGJtYXAuQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMoKQoKLy8gZHJvcApkYm1hcC5Ecm9wVGFibGVzKCkKPC9jb2RlPjwvcHJlPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLXNxbC1sb2dnaW5nIj5TUUwgTG9nZ2luZzwvaDU+CjxwPk9wdGlvbmFsbHkgeW91IGNhbiBwYXNzIGluIGEgbG9nZ2VyIHRvIHRyYWNlIGFsbCBTUUwgc3RhdGVtZW50cy4KSSByZWNvbW1lbmQgZW5hYmxpbmcgdGhpcyBpbml0aWFsbHkgd2hpbGUgeW91JiMzOTtyZSBnZXR0aW5nIHRoZSBmZWVsIGZvciB3aGF0CmdvcnAgaXMgZG9pbmcgb24geW91ciBiZWhhbGYuPC9wPgo8cD5Hb3JwIGRlZmluZXMgYSA8Y29kZT5Hb3JwTG9nZ2VyPC9jb2RlPiBpbnRlcmZhY2UgdGhhdCBHbyYjMzk7cyBidWlsdCBpbiA8Y29kZT5sb2cuTG9nZ2VyPC9jb2RlPiBzYXRpc2ZpZXMuCkhvd2V2ZXIsIHlvdSBjYW4gd3JpdGUgeW91ciBvd24gPGNvZGU+R29ycExvZ2dlcjwvY29kZT4gaW1wbGVtZW50YXRpb24sIG9yIHVzZSBhIHBhY2thZ2Ugc3VjaAphcyA8Y29kZT5nbG9nPC9jb2RlPiBpZiB5b3Ugd2FudCBtb3JlIGNvbnRyb2wgb3ZlciBob3cgc3RhdGVtZW50cyBhcmUgbG9nZ2VkLjwvcD4KPHByZT48Y29kZT4vLyBXaWxsIGxvZyBhbGwgU1FMIHN0YXRlbWVudHMgKyBhcmdzIGFzIHRoZXkgYXJlIHJ1bgovLyBUaGUgZmlyc3QgYXJnIGlzIGEgc3RyaW5nIHByZWZpeCB0byBwcmVwZW5kIHRvIGFsbCBsb2cgbWVzc2FnZXMKZGJtYXAuVHJhY2VPbigmIzM0O1tnb3JwXSYjMzQ7LCBsb2cuTmV3KG9zLlN0ZG91dCwgJiMzNDtteWFwcDomIzM0OywgbG9nLkxtaWNyb3NlY29uZHMpKQoKLy8gVHVybiBvZmYgdHJhY2luZwpkYm1hcC5UcmFjZU9mZigpCjwvY29kZT48L3ByZT4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1pbnNlcnQiPkluc2VydDwvaDU+CjxwcmU+PGNvZGU+Ly8gTXVzdCBkZWNsYXJlIGFzIHBvaW50ZXJzIHNvIG9wdGlvbmFsIGNhbGxiYWNrIGhvb2tzCi8vIGNhbiBvcGVyYXRlIG9uIHlvdXIgZGF0YSwgbm90IGNvcGllcwppbnYxIDo9ICZhbXA7SW52b2ljZXswLCAxMDAsIDIwMCwgJiMzNDtmaXJzdCBvcmRlciYjMzQ7LCAwfQppbnYyIDo9ICZhbXA7SW52b2ljZXswLCAxMDAsIDIwMCwgJiMzNDtzZWNvbmQgb3JkZXImIzM0OywgMH0KCi8vIEluc2VydCB5b3VyIHJvd3MKZXJyIDo9IGRibWFwLkluc2VydChpbnYxLCBpbnYyKQoKLy8gQmVjYXVzZSB3ZSBjYWxsZWQgU2V0S2V5cyh0cnVlKSBvbiBJbnZvaWNlLCB0aGUgSWQgZmllbGQKLy8gd2lsbCBiZSBwb3B1bGF0ZWQgYWZ0ZXIgdGhlIEluc2VydCgpIGF1dG9tYXRpY2FsbHkKZm10LlByaW50ZigmIzM0O2ludjEuSWQ9JWQgIGludjIuSWQ9JWRcbiYjMzQ7LCBpbnYxLklkLCBpbnYyLklkKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtdXBkYXRlIj5VcGRhdGU8L2g1Pgo8cD5Db250aW51aW5nIHRoZSBhYm92ZSBleGFtcGxlLCB1c2UgdGhlIDxjb2RlPlVwZGF0ZTwvY29kZT4gbWV0aG9kIHRvIG1vZGlmeSBhbiBJbnZvaWNlOjwvcD4KPHByZT48Y29kZT4vLyBjb3VudCBpcyB0aGUgIyBvZiByb3dzIHVwZGF0ZWQsIHdoaWNoIHNob3VsZCBiZSAxIGluIHRoaXMgZXhhbXBsZQpjb3VudCwgZXJyIDo9IGRibWFwLlVwZGF0ZShpbnYxKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtZGVsZXRlIj5EZWxldGU8L2g1Pgo8cD5JZiB5b3UgaGF2ZSBwcmltYXJ5IGtleShzKSBkZWZpbmVkIGZvciBhIHN0cnVjdCwgeW91IGNhbiB1c2UgdGhlIDxjb2RlPkRlbGV0ZTwvY29kZT4KbWV0aG9kIHRvIHJlbW92ZSByb3dzOjwvcD4KPHByZT48Y29kZT5jb3VudCwgZXJyIDo9IGRibWFwLkRlbGV0ZShpbnYxKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtc2VsZWN0LWJ5LWtleSI+U2VsZWN0IGJ5IEtleTwvaDU+CjxwPlVzZSB0aGUgPGNvZGU+R2V0PC9jb2RlPiBtZXRob2QgdG8gZmV0Y2ggYSBzaW5nbGUgcm93IGJ5IHByaW1hcnkga2V5LiAgSXQgcmV0dXJucwpuaWwgaWYgbm8gcm93IGlzIGZvdW5kLjwvcD4KPHByZT48Y29kZT4vLyBmZXRjaCBJbnZvaWNlIHdpdGggSWQ9OTkKb2JqLCBlcnIgOj0gZGJtYXAuR2V0KEludm9pY2V7fSwgOTkpCmludiA6PSBvYmouKCpJbnZvaWNlKQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtYWQtaG9jLXNxbCI+QWQgSG9jIFNRTDwvaDU+CjxoNiBjbGFzcz0iaDQiIGlkPSJyZWFkbWUtc2VsZWN0Ij5TRUxFQ1Q8L2g2Pgo8cD48Y29kZT5TZWxlY3QoKTwvY29kZT4gYW5kIDxjb2RlPlNlbGVjdE9uZSgpPC9jb2RlPiBwcm92aWRlIGEgc2ltcGxlIHdheSB0byBiaW5kIGFyYml0cmFyeSBxdWVyaWVzIHRvIGEgc2xpY2UKb3IgYSBzaW5nbGUgc3RydWN0LjwvcD4KPHByZT48Y29kZT4vLyBTZWxlY3QgYSBzbGljZSAtIGZpcnN0IHJldHVybiB2YWx1ZSBpcyBub3QgbmVlZGVkIHdoZW4gYSBzbGljZSBwb2ludGVyIGlzIHBhc3NlZCB0byBTZWxlY3QoKQp2YXIgcG9zdHMgW11Qb3N0Cl8sIGVyciA6PSBkYm1hcC5TZWxlY3QoJmFtcDtwb3N0cywgJiMzNDtzZWxlY3QgKiBmcm9tIHBvc3Qgb3JkZXIgYnkgaWQmIzM0OykKCi8vIFlvdSBjYW4gYWxzbyB1c2UgcHJpbWl0aXZlIHR5cGVzCnZhciBpZHMgW11zdHJpbmcKXywgZXJyIDo9IGRibWFwLlNlbGVjdCgmYW1wO2lkcywgJiMzNDtzZWxlY3QgaWQgZnJvbSBwb3N0JiMzNDspCgovLyBTZWxlY3QgYSBzaW5nbGUgcm93LgovLyBSZXR1cm5zIGFuIGVycm9yIGlmIG5vIHJvdyBmb3VuZCwgb3IgaWYgbW9yZSB0aGFuIG9uZSByb3cgaXMgZm91bmQKdmFyIHBvc3QgUG9zdAplcnIgOj0gZGJtYXAuU2VsZWN0T25lKCZhbXA7cG9zdCwgJiMzNDtzZWxlY3QgKiBmcm9tIHBvc3Qgd2hlcmUgaWQ9PyYjMzQ7LCBpZCkKPC9jb2RlPjwvcHJlPgo8cD5XYW50IHRvIGRvIGpvaW5zPyAgSnVzdCB3cml0ZSB0aGUgU1FMIGFuZCB0aGUgc3RydWN0LiBnb3JwIHdpbGwgYmluZCB0aGVtOjwvcD4KPHByZT48Y29kZT4vLyBEZWZpbmUgYSB0eXBlIGZvciB5b3VyIGpvaW4KLy8gSXQgKm11c3QqIGNvbnRhaW4gYWxsIHRoZSBjb2x1bW5zIGluIHlvdXIgU0VMRUNUIHN0YXRlbWVudAovLwovLyBUaGUgbmFtZXMgaGVyZSBzaG91bGQgbWF0Y2ggdGhlIGFsaWFzZWQgY29sdW1uIG5hbWVzIHlvdSBzcGVjaWZ5Ci8vIGluIHlvdXIgU1FMIC0gbm8gYWRkaXRpb25hbCBiaW5kaW5nIHdvcmsgcmVxdWlyZWQuICBzaW1wbGUuCi8vCnR5cGUgSW52b2ljZVBlcnNvblZpZXcgc3RydWN0IHsKICAgIEludm9pY2VJZCAgIGludDY0CiAgICBQZXJzb25JZCAgICBpbnQ2NAogICAgTWVtbyAgICAgICAgc3RyaW5nCiAgICBGTmFtZSAgICAgICBzdHJpbmcKfQoKLy8gQ3JlYXRlIHNvbWUgcm93cwpwMSA6PSAmYW1wO1BlcnNvbnswLCAwLCAwLCAmIzM0O2JvYiYjMzQ7LCAmIzM0O3NtaXRoJiMzNDt9CmVyciA9IGRibWFwLkluc2VydChwMSkKY2hlY2tFcnIoZXJyLCAmIzM0O0luc2VydCBmYWlsZWQmIzM0OykKCi8vIG5vdGljZSBob3cgd2UgY2FuIHdpcmUgdXAgcDEuSWQgdG8gdGhlIGludm9pY2UgZWFzaWx5CmludjEgOj0gJmFtcDtJbnZvaWNlezAsIDAsIDAsICYjMzQ7eG1hcyBvcmRlciYjMzQ7LCBwMS5JZH0KZXJyID0gZGJtYXAuSW5zZXJ0KGludjEpCmNoZWNrRXJyKGVyciwgJiMzNDtJbnNlcnQgZmFpbGVkJiMzNDspCgovLyBSdW4geW91ciBxdWVyeQpxdWVyeSA6PSAmIzM0O3NlbGVjdCBpLklkIEludm9pY2VJZCwgcC5JZCBQZXJzb25JZCwgaS5NZW1vLCBwLkZOYW1lICYjMzQ7ICsKCSYjMzQ7ZnJvbSBpbnZvaWNlX3Rlc3QgaSwgcGVyc29uX3Rlc3QgcCAmIzM0OyArCgkmIzM0O3doZXJlIGkuUGVyc29uSWQgPSBwLklkJiMzNDsKCi8vIHBhc3MgYSBzbGljZSB0byBTZWxlY3QoKQp2YXIgbGlzdCBbXUludm9pY2VQZXJzb25WaWV3Cl8sIGVyciA6PSBkYm1hcC5TZWxlY3QoJmFtcDtsaXN0LCBxdWVyeSkKCi8vIHRoaXMgc2hvdWxkIHRlc3QgdHJ1ZQpleHBlY3RlZCA6PSBJbnZvaWNlUGVyc29uVmlld3tpbnYxLklkLCBwMS5JZCwgaW52MS5NZW1vLCBwMS5GTmFtZX0KaWYgcmVmbGVjdC5EZWVwRXF1YWwobGlzdFswXSwgZXhwZWN0ZWQpIHsKICAgIGZtdC5QcmludGxuKCYjMzQ7V29vdCEgTXkgam9pbiB3b3JrZWQhJiMzNDspCn0KPC9jb2RlPjwvcHJlPgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLXNlbGVjdC1zdHJpbmctb3ItaW50NjQiPlNFTEVDVCBzdHJpbmcgb3IgaW50NjQ8L2g2Pgo8cD5nb3JwIHByb3ZpZGVzIGEgZmV3IGNvbnZlbmllbmNlIG1ldGhvZHMgZm9yIHNlbGVjdGluZyBhIHNpbmdsZSBzdHJpbmcgb3IgaW50NjQuPC9wPgo8cHJlPjxjb2RlPi8vIHNlbGVjdCBzaW5nbGUgaW50NjQgZnJvbSBkYiAodXNlICQxIGluc3RlYWQgb2YgPyBmb3IgcG9zdGdyZXNxbCkKaTY0LCBlcnIgOj0gZGJtYXAuU2VsZWN0SW50KCYjMzQ7c2VsZWN0IGNvdW50KCopIGZyb20gZm9vIHdoZXJlIGJsYWg9PyYjMzQ7LCBibGFoVmFsKQoKLy8gc2VsZWN0IHNpbmdsZSBzdHJpbmcgZnJvbSBkYjoKcywgZXJyIDo9IGRibWFwLlNlbGVjdFN0cigmIzM0O3NlbGVjdCBuYW1lIGZyb20gZm9vIHdoZXJlIGJsYWg9PyYjMzQ7LCBibGFoVmFsKQoKPC9jb2RlPjwvcHJlPgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLW5hbWVkLWJpbmQtcGFyYW1ldGVycyI+TmFtZWQgYmluZCBwYXJhbWV0ZXJzPC9oNj4KPHA+WW91IG1heSB1c2UgYSBtYXAgb3Igc3RydWN0IHRvIGJpbmQgcGFyYW1ldGVycyBieSBuYW1lLiAgVGhpcyBpcyBjdXJyZW50bHkKb25seSBzdXBwb3J0ZWQgaW4gU0VMRUNUIHF1ZXJpZXMuPC9wPgo8cHJlPjxjb2RlPl8sIGVyciA6PSBkYm0uU2VsZWN0KCZhbXA7ZGVzdCwgJiMzNDtzZWxlY3QgKiBmcm9tIEZvbyB3aGVyZSBuYW1lID0gOm5hbWUgYW5kIGFnZSA9IDphZ2UmIzM0OywgbWFwW3N0cmluZ11pbnRlcmZhY2V7fXsKICAmIzM0O25hbWUmIzM0OzogJiMzNDtSb2ImIzM0OywKICAmIzM0O2FnZSYjMzQ7OiAzMSwKfSkKPC9jb2RlPjwvcHJlPgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLXVwZGF0ZS1kZWxldGUiPlVQREFURSAvIERFTEVURTwvaDY+CjxwPllvdSBjYW4gZXhlY3V0ZSByYXcgU1FMIGlmIHlvdSB3aXNoLiAgUGFydGljdWxhcmx5IGdvb2QgZm9yIGJhdGNoIG9wZXJhdGlvbnMuPC9wPgo8cHJlPjxjb2RlPnJlcywgZXJyIDo9IGRibWFwLkV4ZWMoJiMzNDtkZWxldGUgZnJvbSBpbnZvaWNlX3Rlc3Qgd2hlcmUgUGVyc29uSWQ9PyYjMzQ7LCAxMCkKPC9jb2RlPjwvcHJlPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLXRyYW5zYWN0aW9ucyI+VHJhbnNhY3Rpb25zPC9oNT4KPHA+WW91IGNhbiBiYXRjaCBvcGVyYXRpb25zIGludG8gYSB0cmFuc2FjdGlvbjo8L3A+CjxwcmU+PGNvZGU+ZnVuYyBJbnNlcnRJbnYoZGJtYXAgKkRiTWFwLCBpbnYgKkludm9pY2UsIHBlciAqUGVyc29uKSBlcnJvciB7CiAgICAvLyBTdGFydCBhIG5ldyB0cmFuc2FjdGlvbgogICAgdHJhbnMsIGVyciA6PSBkYm1hcC5CZWdpbigpCiAgICBpZiBlcnIgIT0gbmlsIHsKICAgICAgICByZXR1cm4gZXJyCiAgICB9CgogICAgZXJyID0gdHJhbnMuSW5zZXJ0KHBlcikKICAgIGNoZWNrRXJyKGVyciwgJiMzNDtJbnNlcnQgZmFpbGVkJiMzNDspCgogICAgaW52LlBlcnNvbklkID0gcGVyLklkCiAgICBlcnIgPSB0cmFucy5JbnNlcnQoaW52KQogICAgY2hlY2tFcnIoZXJyLCAmIzM0O0luc2VydCBmYWlsZWQmIzM0OykKCiAgICAvLyBpZiB0aGUgY29tbWl0IGlzIHN1Y2Nlc3NmdWwsIGEgbmlsIGVycm9yIGlzIHJldHVybmVkCiAgICByZXR1cm4gdHJhbnMuQ29tbWl0KCkKfQo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtaG9va3MiPkhvb2tzPC9oNT4KPHA+VXNlIGhvb2tzIHRvIHVwZGF0ZSBkYXRhIGJlZm9yZS9hZnRlciBzYXZpbmcgdG8gdGhlIGRiLiBHb29kIGZvciB0aW1lc3RhbXBzOjwvcD4KPHByZT48Y29kZT4vLyBpbXBsZW1lbnQgdGhlIFByZUluc2VydCBhbmQgUHJlVXBkYXRlIGhvb2tzCmZ1bmMgKGkgKkludm9pY2UpIFByZUluc2VydChzIGdvcnAuU3FsRXhlY3V0b3IpIGVycm9yIHsKICAgIGkuQ3JlYXRlZCA9IHRpbWUuTm93KCkuVW5peE5hbm8oKQogICAgaS5VcGRhdGVkID0gaS5DcmVhdGVkCiAgICByZXR1cm4gbmlsCn0KCmZ1bmMgKGkgKkludm9pY2UpIFByZVVwZGF0ZShzIGdvcnAuU3FsRXhlY3V0b3IpIGVycm9yIHsKICAgIGkuVXBkYXRlZCA9IHRpbWUuTm93KCkuVW5peE5hbm8oKQogICAgcmV0dXJuIG5pbAp9CgovLyBZb3UgY2FuIHVzZSB0aGUgU3FsRXhlY3V0b3IgdG8gY2FzY2FkZSBhZGRpdGlvbmFsIFNRTAovLyBUYWtlIGNhcmUgdG8gYXZvaWQgY3ljbGVzLiBnb3JwIHdvbiYjMzk7dCBwcmV2ZW50IHRoZW0uCi8vCi8vIEhlcmUmIzM5O3MgYW4gZXhhbXBsZSBvZiBhIGNhc2NhZGluZyBkZWxldGUKLy8KZnVuYyAocCAqUGVyc29uKSBQcmVEZWxldGUocyBnb3JwLlNxbEV4ZWN1dG9yKSBlcnJvciB7CiAgICBxdWVyeSA6PSAmIzM0O2RlbGV0ZSBmcm9tIGludm9pY2VfdGVzdCB3aGVyZSBQZXJzb25JZD0/JiMzNDsKICAgIAogICAgXywgZXJyIDo9IHMuRXhlYyhxdWVyeSwgcC5JZCkKICAgIAogICAgaWYgZXJyICE9IG5pbCB7CiAgICAgICAgcmV0dXJuIGVycgogICAgfQogICAgcmV0dXJuIG5pbAp9CjwvY29kZT48L3ByZT4KPHA+RnVsbCBsaXN0IG9mIGhvb2tzIHRoYXQgeW91IGNhbiBpbXBsZW1lbnQ6PC9wPgo8cHJlPjxjb2RlPlBvc3RHZXQKUHJlSW5zZXJ0ClBvc3RJbnNlcnQKUHJlVXBkYXRlClBvc3RVcGRhdGUKUHJlRGVsZXRlClBvc3REZWxldGUKCkFsbCBoYXZlIHRoZSBzYW1lIHNpZ25hdHVyZS4gIGZvciBleGFtcGxlOgoKZnVuYyAocCAqTXlTdHJ1Y3QpIFBvc3RVcGRhdGUocyBnb3JwLlNxbEV4ZWN1dG9yKSBlcnJvcgo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtb3B0aW1pc3RpYy1sb2NraW5nIj5PcHRpbWlzdGljIExvY2tpbmc8L2g1Pgo8aDYgY2xhc3M9Img0IiBpZD0icmVhZG1lLW5vdGUtdGhhdC10aGlzLWJlaGF2aW91ci1oYXMtY2hhbmdlZC1pbi12Mi1zZWUtbWlncmF0aW9uLWd1aWRlLW1pZ3JhdGlvbi1ndWlkZSI+Tm90ZSB0aGF0IHRoaXMgYmVoYXZpb3VyIGhhcyBjaGFuZ2VkIGluIHYyLiBTZWUgPGEgaHJlZj0iI3JlYWRtZS1taWdyYXRpb24tZ3VpZGUiIHJlbD0ibm9mb2xsb3ciPk1pZ3JhdGlvbiBHdWlkZTwvYT4uPC9oNj4KPHA+Z29ycCBwcm92aWRlcyBhIHNpbXBsZSBvcHRpbWlzdGljIGxvY2tpbmcgZmVhdHVyZSwgc2ltaWxhciB0byBKYXZhJiMzOTtzCkpQQSwgdGhhdCB3aWxsIHJhaXNlIGFuIGVycm9yIGlmIHlvdSB0cnkgdG8gdXBkYXRlL2RlbGV0ZSBhIHJvdyB3aG9zZQo8Y29kZT52ZXJzaW9uPC9jb2RlPiBjb2x1bW4gaGFzIGEgdmFsdWUgZGlmZmVyZW50IHRoYW4gdGhlIG9uZSBpbiBtZW1vcnkuICBUaGlzCnByb3ZpZGVzIGEgc2FmZSB3YXkgdG8gZG8gJiMzNDtzZWxlY3QgdGhlbiB1cGRhdGUmIzM0OyBzdHlsZSBvcGVyYXRpb25zCndpdGhvdXQgZXhwbGljaXQgcmVhZCBhbmQgd3JpdGUgbG9ja3MuPC9wPgo8cHJlPjxjb2RlPi8vIFZlcnNpb24gaXMgYW4gYXV0by1pbmNyZW1lbnRlZCBudW1iZXIsIG1hbmFnZWQgYnkgZ29ycAovLyBJZiB0aGlzIHByb3BlcnR5IGlzIHByZXNlbnQgb24geW91ciBzdHJ1Y3QsIHVwZGF0ZQovLyBvcGVyYXRpb25zIHdpbGwgYmUgY29uc3RyYWluZWQKLy8KLy8gRm9yIGV4YW1wbGUsIHNheSB3ZSBkZWZpbmVkIFBlcnNvbiBhczoKCnR5cGUgUGVyc29uIHN0cnVjdCB7CiAgICBJZCAgICAgICBpbnQ2NAogICAgQ3JlYXRlZCAgaW50NjQKICAgIFVwZGF0ZWQgIGludDY0CiAgICBGTmFtZSAgICBzdHJpbmcKICAgIExOYW1lICAgIHN0cmluZwoKICAgIC8vIGF1dG9tYXRpY2FsbHkgdXNlZCBhcyB0aGUgVmVyc2lvbiBjb2wKICAgIC8vIHVzZSB0YWJsZS5TZXRWZXJzaW9uQ29sKCYjMzQ7Y29sdW1uTmFtZSYjMzQ7KSB0byBtYXAgYSBkaWZmZXJlbnQKICAgIC8vIHN0cnVjdCBmaWVsZCBhcyB0aGUgdmVyc2lvbiBmaWVsZAogICAgVmVyc2lvbiAgaW50NjQKfQoKcDEgOj0gJmFtcDtQZXJzb257MCwgMCwgMCwgJiMzNDtCb2ImIzM0OywgJiMzNDtTbWl0aCYjMzQ7LCAwfQplcnIgPSBkYm1hcC5JbnNlcnQocDEpICAvLyBWZXJzaW9uIGlzIG5vdyAxCmNoZWNrRXJyKGVyciwgJiMzNDtJbnNlcnQgZmFpbGVkJiMzNDspCgpvYmosIGVyciA6PSBkYm1hcC5HZXQoUGVyc29ue30sIHAxLklkKQpwMiA6PSBvYmouKCpQZXJzb24pCnAyLkxOYW1lID0gJiMzNDtFZHdhcmRzJiMzNDsKXyxlcnIgPSBkYm1hcC5VcGRhdGUocDIpICAvLyBWZXJzaW9uIGlzIG5vdyAyCmNoZWNrRXJyKGVyciwgJiMzNDtVcGRhdGUgZmFpbGVkJiMzNDspCgpwMS5MTmFtZSA9ICYjMzQ7SG93YXJkJiMzNDsKCi8vIFJhaXNlcyBlcnJvciBiZWNhdXNlIHAxLlZlcnNpb24gPT0gMSwgd2hpY2ggaXMgb3V0IG9mIGRhdGUKY291bnQsIGVyciA6PSBkYm1hcC5VcGRhdGUocDEpCl8sIG9rIDo9IGVyci4oZ29ycC5PcHRpbWlzdGljTG9ja0Vycm9yKQppZiBvayB7CiAgICAvLyBzaG91bGQgcmVhY2ggdGhpcyBzdGF0ZW1lbnQKCiAgICAvLyBpbiBhIHJlYWwgYXBwIHlvdSBtaWdodCByZWxvYWQgdGhlIHJvdyBhbmQgcmV0cnksIG9yCiAgICAvLyB5b3UgbWlnaHQgcHJvcGVnYXRlIHRoaXMgdG8gdGhlIHVzZXIsIGRlcGVuZGluZyBvbiB0aGUgZGVzaXJlZAogICAgLy8gc2VtYW50aWNzCiAgICBmbXQuUHJpbnRmKCYjMzQ7VHJpZWQgdG8gdXBkYXRlIHJvdyB3aXRoIHN0YWxlIGRhdGE6ICV2XG4mIzM0OywgZXJyKQp9IGVsc2UgewogICAgLy8gc29tZSBvdGhlciBkYiBlcnJvciBvY2N1cnJlZCAtIGxvZyBvciByZXR1cm4gdXAgdGhlIHN0YWNrCiAgICBmbXQuUHJpbnRmKCYjMzQ7VW5rbm93biBkYiBlcnI6ICV2XG4mIzM0OywgZXJyKQp9CjwvY29kZT48L3ByZT4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1hZGRpbmctaW5kZXgtZXMtb24tY29sdW1uLXMtYmV5b25kLXRoZS1wcmltYXJ5LWtleSI+QWRkaW5nIElOREVYKGVzKSBvbiBjb2x1bW4ocykgYmV5b25kIHRoZSBwcmltYXJ5IGtleTwvaDU+CjxwPkluZGV4ZXMgYXJlIGZyZXF1ZW50bHkgY3JpdGljYWwgZm9yIHBlcmZvcm1hbmNlLiBIZXJlIGlzIGhvdyB0byBhZGQKdGhlbSB0byB5b3VyIHRhYmxlcy48L3A+CjxwPk5COiBTcWxTZXJ2ZXIgYW5kIE9yYWNsZSBuZWVkIHRlc3RpbmcgYW5kIHBvc3NpYmxlIGFkanVzdG1lbnQgdG8gdGhlCkNyZWF0ZUluZGV4U3VmZml4KCkgYW5kIERyb3BJbmRleFN1ZmZpeCgpIG1ldGhvZHMgdG8gbWFrZSBBZGRJbmRleCgpCndvcmsgZm9yIHRoZW0uPC9wPgo8cD5JbiB0aGUgZXhhbXBsZSBiZWxvdyB3ZSBwdXQgYW4gaW5kZXggYm90aCBvbiB0aGUgSWQgZmllbGQsIGFuZCBvbiB0aGUKQWNjdElkIGZpZWxkLjwvcD4KPHByZT48Y29kZT50eXBlIEFjY291bnQgc3RydWN0IHsKCUlkICAgICAgaW50NjQKCUFjY3RJZCAgc3RyaW5nIC8vIGUuZy4gdGhpcyBtaWdodCBiZSBhIGxvbmcgdXVpZCBmb3IgcG9ydGFiaWxpdHkKfQoKLy8gaW5kZXhUeXBlICh0aGUgMm5kIHBhcmFtIHRvIEFkZEluZGV4IGNhbGwpIGlzICYjMzQ7QnRyZWUmIzM0OyBvciAmIzM0O0hhc2gmIzM0OyBmb3IgTXlTUUwuCi8vIGRlbW9uc3RyYXRlIGFkZGluZyBhIHNlY29uZCBpbmRleCBvbiBBY2N0SWQsIGFuZCBjb25zdHJhaW4gdGhhdCBmaWVsZCB0byBoYXZlIHVuaXF1ZSB2YWx1ZXMuCmRibS5BZGRUYWJsZShpcHRhYi5BY2NvdW50e30pLlNldEtleXModHJ1ZSwgJiMzNDtJZCYjMzQ7KS5BZGRJbmRleCgmIzM0O0FjY3RJZEluZGV4JiMzNDssICYjMzQ7QnRyZWUmIzM0OywgW11zdHJpbmd7JiMzNDtBY2N0SWQmIzM0O30pLlNldFVuaXF1ZSh0cnVlKQoKZXJyID0gZGJtLkNyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkKY2hlY2tFcnIoZXJyLCAmIzM0O0NyZWF0ZVRhYmxlc0lmTm90RXhpc3RzIGZhaWxlZCYjMzQ7KQoKZXJyID0gZGJtLkNyZWF0ZUluZGV4KCkKY2hlY2tFcnIoZXJyLCAmIzM0O0NyZWF0ZUluZGV4IGZhaWxlZCYjMzQ7KQoKPC9jb2RlPjwvcHJlPgo8cD5DaGVjayB0aGUgZWZmZWN0IG9mIHRoZSBDcmVhdGVJbmRleCgpIGNhbGwgaW4gbXlzcWw6PC9wPgo8cHJlPjxjb2RlPiQgbXlzcWwKCk1hcmlhREIgW3Rlc3RdJmd0OyBzaG93IGNyZWF0ZSB0YWJsZSBBY2NvdW50OworLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwp8IEFjY291bnQgfCBDUkVBVEUgVEFCTEUgYEFjY291bnRgICgKICBgSWRgIGJpZ2ludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYEFjY3RJZGAgdmFyY2hhcigyNTUpIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElkYCksCiAgVU5JUVVFIEtFWSBgQWNjdElkSW5kZXhgIChgQWNjdElkYCkgVVNJTkcgQlRSRUUgICAmbHQ7Jmx0OyZsdDstLS0geWVzISBpbmRleCBhZGRlZC4KKSBFTkdJTkU9SW5ub0RCIERFRkFVTFQgQ0hBUlNFVD11dGY4IAorLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwoKPC9jb2RlPjwvcHJlPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWRhdGFiYXNlLWRyaXZlcnMiPkRhdGFiYXNlIERyaXZlcnM8L2g0Pgo8cD5nb3JwIHVzZXMgdGhlIEdvIDEgPGNvZGU+ZGF0YWJhc2Uvc3FsPC9jb2RlPiBwYWNrYWdlLiAgQSBmdWxsIGxpc3Qgb2YgY29tcGxpYW50CmRyaXZlcnMgaXMgYXZhaWxhYmxlIGhlcmU6PC9wPgo8cD48YSBocmVmPSJodHRwOi8vY29kZS5nb29nbGUuY29tL3AvZ28td2lraS93aWtpL1NRTERyaXZlcnMiIHJlbD0ibm9mb2xsb3ciPmh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9nby13aWtpL3dpa2kvU1FMRHJpdmVyczwvYT48L3A+CjxwPlNhZGx5LCBTUUwgZGF0YWJhc2VzIGRpZmZlciBvbiB2YXJpb3VzIGlzc3Vlcy4gZ29ycCBwcm92aWRlcyBhIERpYWxlY3QKaW50ZXJmYWNlIHRoYXQgc2hvdWxkIGJlIGltcGxlbWVudGVkIHBlciBkYXRhYmFzZSB2ZW5kb3IuICBEaWFsZWN0cwphcmUgcHJvdmlkZWQgZm9yOjwvcD4KPHVsPgo8bGk+TXlTUUw8L2xpPgo8bGk+UG9zdGdyZVNRTDwvbGk+CjxsaT5zcWxpdGUzPC9saT4KPC91bD4KPHA+RWFjaCBvZiB0aGVzZSB0aHJlZSBkYXRhYmFzZXMgcGFzcyB0aGUgdGVzdCBzdWl0ZS4gIFNlZSA8Y29kZT5nb3JwX3Rlc3QuZ288L2NvZGU+CmZvciBleGFtcGxlIERTTnMgZm9yIHRoZXNlIHRocmVlIGRhdGFiYXNlcy48L3A+CjxwPlN1cHBvcnQgaXMgYWxzbyBwcm92aWRlZCBmb3I6PC9wPgo8dWw+CjxsaT5PcmFjbGUgKGNvbnRyaWJ1dGVkIGJ5IEBrbGFpZGxpYWRvbik8L2xpPgo8bGk+U1FMIFNlcnZlciAoY29udHJpYnV0ZWQgYnkgQHFyYXdsKSAtIHVzZSBkcml2ZXI6CmdpdGh1Yi5jb20vZGVuaXNlbmtvbS9nby1tc3NxbGRiPC9saT4KPC91bD4KPHA+Tm90ZSB0aGF0IHRoZXNlIGRhdGFiYXNlcyBhcmUgbm90IGNvdmVyZWQgYnkgQ0kgYW5kIEkgKEBjb29wZXJudXJzZSkKaGF2ZSBubyBnb29kIHdheSB0byB0ZXN0IHRoZW0gbG9jYWxseS4gIFNvIHBsZWFzZSB0cnkgdGhlbSBhbmQgc2VuZApwYXRjaGVzIGFzIG5lZWRlZCwgYnV0IGV4cGVjdCBhIGJpdCBtb3JlIHVucHJlZGljYWJpbGl0eS48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtc3FsaXRlMy1leHRlbnNpb25zIj5TcWxpdGUzIEV4dGVuc2lvbnM8L2g0Pgo8cD5JbiBvcmRlciB0byB1c2Ugc3FsaXRlMyBleHRlbnNpb25zIHlvdSBuZWVkIHRvIGZpcnN0IHJlZ2lzdGVyIGEgY3VzdG9tIGRyaXZlcjo8L3A+CjxwcmU+PGNvZGU+aW1wb3J0ICgKCSYjMzQ7ZGF0YWJhc2Uvc3FsJiMzNDsKCgkvLyB1c2Ugd2hhdGV2ZXIgZGF0YWJhc2Uvc3FsIGRyaXZlciB5b3Ugd2lzaAoJc3FsaXRlICYjMzQ7Z2l0aHViLmNvbS9tYXR0bi9nby1zcWxpdGUzJiMzNDsKKQoKZnVuYyBjdXN0b21Ecml2ZXIoKSAoKnNxbC5EQiwgZXJyb3IpIHsKCgkvLyBjcmVhdGUgY3VzdG9tIGRyaXZlciB3aXRoIGV4dGVuc2lvbnMgZGVmaW5lZAoJc3FsLlJlZ2lzdGVyKCYjMzQ7c3FsaXRlMy1jdXN0b20mIzM0OywgJmFtcDtzcWxpdGUuU1FMaXRlRHJpdmVyewoJCUV4dGVuc2lvbnM6IFtdc3RyaW5newoJCQkmIzM0O21vZF9zcGF0aWFsaXRlJiMzNDssCgkJfSwKCX0pCgoJLy8gbm93IHlvdSBjYW4gdGhlbiBjb25uZWN0IHVzaW5nIHRoZSAmIzM5O3NxbGl0ZTMtY3VzdG9tJiMzOTsgZHJpdmVyIGluc3RlYWQgb2YgJiMzOTtzcWxpdGUzJiMzOTsKCXJldHVybiBzcWwuT3BlbigmIzM0O3NxbGl0ZTMtY3VzdG9tJiMzNDssICYjMzQ7L3RtcC9wb3N0X2RiLmJpbiYjMzQ7KQp9CjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1rbm93bi1pc3N1ZXMiPktub3duIElzc3VlczwvaDQ+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtc3FsLXBsYWNlaG9sZGVyLXBvcnRhYmlsaXR5Ij5TUUwgcGxhY2Vob2xkZXIgcG9ydGFiaWxpdHk8L2g1Pgo8cD5EaWZmZXJlbnQgZGF0YWJhc2VzIHVzZSBkaWZmZXJlbnQgc3RyaW5ncyB0byBpbmRpY2F0ZSB2YXJpYWJsZQpwbGFjZWhvbGRlcnMgaW4gcHJlcGFyZWQgU1FMIHN0YXRlbWVudHMuICBVbmxpa2Ugc29tZSBkYXRhYmFzZQphYnN0cmFjdGlvbiBsYXllcnMgKHN1Y2ggYXMgSkRCQyksIEdvJiMzOTtzIDxjb2RlPmRhdGFiYXNlL3NxbDwvY29kZT4gZG9lcyBub3QKc3RhbmRhcmRpemUgdGhpcy48L3A+CjxwPlNRTCBnZW5lcmF0ZWQgYnkgZ29ycCBpbiB0aGUgPGNvZGU+SW5zZXJ0PC9jb2RlPiwgPGNvZGU+VXBkYXRlPC9jb2RlPiwgPGNvZGU+RGVsZXRlPC9jb2RlPiwgYW5kIDxjb2RlPkdldDwvY29kZT4KbWV0aG9kcyBkZWxlZ2F0ZXMgdG8gYSBEaWFsZWN0IGltcGxlbWVudGF0aW9uIGZvciBlYWNoIGRhdGFiYXNlLCBhbmQKd2lsbCBnZW5lcmF0ZSBwb3J0YWJsZSBTUUwuPC9wPgo8cD5SYXcgU1FMIHN0cmluZ3MgcGFzc2VkIHRvIDxjb2RlPkV4ZWM8L2NvZGU+LCA8Y29kZT5TZWxlY3Q8L2NvZGU+LCA8Y29kZT5TZWxlY3RPbmU8L2NvZGU+LCA8Y29kZT5TZWxlY3RJbnQ8L2NvZGU+LApldGMgd2lsbCBub3QgYmUgcGFyc2VkLiAgQ29uc2VxdWVudGx5IHlvdSBtYXkgaGF2ZSBwb3J0YWJpbGl0eSBpc3N1ZXMKaWYgeW91IHdyaXRlIGEgcXVlcnkgbGlrZSB0aGlzOjwvcD4KPHByZT48Y29kZT4vLyB3b3JrcyBvbiBNeVNRTCBhbmQgU3FsaXRlMywgYnV0IG5vdCB3aXRoIFBvc3RncmVzcWwgZXJyIDo9CmRibWFwLlNlbGVjdE9uZSgmYW1wO3ZhbCwgJiMzNDtzZWxlY3QgKiBmcm9tIGZvbyB3aGVyZSBpZCA9ID8mIzM0OywgMzApCjwvY29kZT48L3ByZT4KPHA+SW4gPGNvZGU+U2VsZWN0PC9jb2RlPiBhbmQgPGNvZGU+U2VsZWN0T25lPC9jb2RlPiB5b3UgY2FuIHVzZSBuYW1lZCBwYXJhbWV0ZXJzIHRvIHdvcmsKYXJvdW5kIHRoaXMuICBUaGUgZm9sbG93aW5nIGlzIHBvcnRhYmxlOjwvcD4KPHByZT48Y29kZT5lcnIgOj0gZGJtYXAuU2VsZWN0T25lKCZhbXA7dmFsLCAmIzM0O3NlbGVjdCAqIGZyb20gZm9vIHdoZXJlIGlkID0gOmlkJiMzNDssCm1hcFtzdHJpbmddaW50ZXJmYWNle30geyAmIzM0O2lkJiMzNDs6IDMwfSkKPC9jb2RlPjwvcHJlPgo8cD5BZGRpdGlvbmFsbHksIHdoZW4gdXNpbmcgUG9zdGdyZXMgYXMgeW91ciBkYXRhYmFzZSwgeW91IHNob3VsZCB1dGlsaXplCjxjb2RlPiQxPC9jb2RlPiBpbnN0ZWFkIG9mIDxjb2RlPj88L2NvZGU+IHBsYWNlaG9sZGVycyBhcyB1dGlsaXppbmcgPGNvZGU+PzwvY29kZT4gcGxhY2Vob2xkZXJzIHdoZW4KcXVlcnlpbmcgUG9zdGdyZXMgd2lsbCByZXN1bHQgaW4gPGNvZGU+cHE6IG9wZXJhdG9yIGRvZXMgbm90IGV4aXN0PC9jb2RlPgplcnJvcnMuIEFsdGVybmF0aXZlbHksIHVzZSA8Y29kZT5kYk1hcC5EaWFsZWN0LkJpbmRWYXIodmFySWR4KTwvY29kZT4gdG8gZ2V0IHRoZQpwcm9wZXIgdmFyaWFibGUgYmluZGluZyBmb3IgeW91ciBkaWFsZWN0LjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS10aW1lLXRpbWUtYW5kLXRpbWUtem9uZXMiPnRpbWUuVGltZSBhbmQgdGltZSB6b25lczwvaDU+CjxwPmdvcnAgd2lsbCBwYXNzIDxjb2RlPnRpbWUuVGltZTwvY29kZT4gZmllbGRzIHRocm91Z2ggdG8gdGhlIDxjb2RlPmRhdGFiYXNlL3NxbDwvY29kZT4KZHJpdmVyLCBidXQgbm90ZSB0aGF0IHRoZSBiZWhhdmlvciBvZiB0aGlzIHR5cGUgdmFyaWVzIGFjcm9zcyBkYXRhYmFzZQpkcml2ZXJzLjwvcD4KPHA+TXlTUUwgdXNlcnMgc2hvdWxkIGJlIGVzcGVjaWFsbHkgY2F1dGlvdXMuICBTZWU6CjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS96aXV0ZWsvbXlteXNxbC9wdWxsLzc3IiByZWw9Im5vZm9sbG93Ij5odHRwczovL2dpdGh1Yi5jb20veml1dGVrL215bXlzcWwvcHVsbC83NzwvYT48L3A+CjxwPlRvIGF2b2lkIGFueSBwb3RlbnRpYWwgaXNzdWVzIHdpdGggdGltZXpvbmUvRFNULCBjb25zaWRlcjo8L3A+Cjx1bD4KPGxpPlVzaW5nIGFuIGludGVnZXIgZmllbGQgZm9yIHRpbWUgZGF0YSBhbmQgc3RvcmluZyBVTklYIHRpbWUuPC9saT4KPGxpPlVzaW5nIGEgY3VzdG9tIHRpbWUgdHlwZSB0aGF0IGltcGxlbWVudHMgc29tZSBTUUwgdHlwZXM6Cjx1bD4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvZGF0YWJhc2Uvc3FsLyNTY2FubmVyIiByZWw9Im5vZm9sbG93Ij48Y29kZT4mIzM0O2RhdGFiYXNlL3NxbCYjMzQ7LlNjYW5uZXI8L2NvZGU+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvcGtnL2RhdGFiYXNlL3NxbC9kcml2ZXIvI1ZhbHVlciIgcmVsPSJub2ZvbGxvdyI+PGNvZGU+JiMzNDtkYXRhYmFzZS9zcWwvZHJpdmVyJiMzNDsuVmFsdWVyPC9jb2RlPjwvYT48L2xpPgo8L3VsPgo8L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLXJ1bm5pbmctdGhlLXRlc3RzIj5SdW5uaW5nIHRoZSB0ZXN0czwvaDQ+CjxwPlRoZSBpbmNsdWRlZCB0ZXN0cyBtYXkgYmUgcnVuIGFnYWluc3QgTXlTUUwsIFBvc3RncmVzcWwsIG9yIHNxbGl0ZTMuCllvdSBtdXN0IHNldCB0d28gZW52aXJvbm1lbnQgdmFyaWFibGVzIHNvIHRoZSB0ZXN0IGNvZGUga25vd3Mgd2hpY2gKZHJpdmVyIHRvIHVzZSwgYW5kIGhvdyB0byBjb25uZWN0IHRvIHlvdXIgZGF0YWJhc2UuPC9wPgo8cHJlPjxjb2RlPiMgTXlTUUwgZXhhbXBsZToKZXhwb3J0IEdPUlBfVEVTVF9EU049Z29teXNxbF90ZXN0L2dvbXlzcWxfdGVzdC9hYmMxMjMKZXhwb3J0IEdPUlBfVEVTVF9ESUFMRUNUPW15c3FsCgojIHJ1biB0aGUgdGVzdHMKZ28gdGVzdAoKIyBydW4gdGhlIHRlc3RzIGFuZCBiZW5jaG1hcmtzCmdvIHRlc3QgLWJlbmNoPSYjMzQ7QmVuY2gmIzM0OyAtYmVuY2h0aW1lIDEwCjwvY29kZT48L3ByZT4KPHA+VmFsaWQgPGNvZGU+R09SUF9URVNUX0RJQUxFQ1Q8L2NvZGU+IHZhbHVlcyBhcmU6ICYjMzQ7bXlzcWwmIzM0Oyhmb3IgbXlteXNxbCksCiYjMzQ7Z29teXNxbCYjMzQ7KGZvciBnby1zcWwtZHJpdmVyKSwgJiMzNDtwb3N0Z3JlcyYjMzQ7LCAmIzM0O3NxbGl0ZSYjMzQ7IFNlZSB0aGUKPGNvZGU+dGVzdF9hbGwuc2g8L2NvZGU+IHNjcmlwdCBmb3IgZXhhbXBsZXMgb2YgYWxsIDMgZGF0YWJhc2VzLiAgVGhpcyBpcyB0aGUKc2NyaXB0IEkgcnVuIGxvY2FsbHkgdG8gdGVzdCB0aGUgbGlicmFyeS48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtcGVyZm9ybWFuY2UiPlBlcmZvcm1hbmNlPC9oND4KPHA+Z29ycCB1c2VzIHJlZmxlY3Rpb24gdG8gY29uc3RydWN0IFNRTCBxdWVyaWVzIGFuZCBiaW5kIHBhcmFtZXRlcnMuClNlZSB0aGUgQmVuY2htYXJrTmF0aXZlQ3J1ZCB2cyBCZW5jaG1hcmtHb3JwQ3J1ZCBpbiBnb3JwX3Rlc3QuZ28gZm9yIGEKc2ltcGxlIHBlcmYgdGVzdC4gIE9uIG15IE1hY0Jvb2sgUHJvIGdvcnAgaXMgYWJvdXQgMi0zJSBzbG93ZXIgdGhhbgpoYW5kIHdyaXR0ZW4gU1FMLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1jb250cmlidXRvcnMiPkNvbnRyaWJ1dG9yczwvaDQ+Cjx1bD4KPGxpPm1hdHRoaWFzLW1hcmd1c2ggLSBjb2x1bW4gYWxpYXNpbmcgdmlhIHRhZ3M8L2xpPgo8bGk+Um9iIEZpZ3VlaXJlZG8gLSBAcm9iZmlnPC9saT4KPGxpPlF1aW5uIFNsYWNrIC0gQHNxczwvbGk+CjwvdWw+CjwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iVW5pdFJlYWRtZS1leHBhbmRMaW5rIGpzLXJlYWRtZUV4cGFuZCIKICAgICAgICAgIGRhdGEtdGVzdC1pZD0icmVhZG1lLWV4cGFuZCIgZGF0YS1ndG1jPSJyZWFkbWUgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iRXhwYW5kIFJlYWRtZSI+RXhwYW5kIOKWvjwvYnV0dG9uPgogICAgICA8YnV0dG9uIGNsYXNzPSJVbml0UmVhZG1lLWNvbGxhcHNlTGluayBqcy1yZWFkbWVDb2xsYXBzZSIKICAgICAgICAgIGRhdGEtdGVzdC1pZD0icmVhZG1lLWNvbGxhcHNlIiBkYXRhLWd0bWM9InJlYWRtZSBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJFeHBhbmQgUmVhZG1lIj5Db2xsYXBzZSDilrQ8L2J1dHRvbj4KICAgIAogIDwvZGl2PgoKICAgICAgCiAgICAgIAogICAgICAgIAogICAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdERvYyI+CiAgICA8aDIgY2xhc3M9IlVuaXREb2MtdGl0bGUiIGlkPSJzZWN0aW9uLWRvY3VtZW50YXRpb24iPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb2RlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgRG9jdW1lbnRhdGlvbgogICAgICA8YSBjbGFzcz0iVW5pdERvYy1pZExpbmsiIGhyZWY9IiNzZWN0aW9uLWRvY3VtZW50YXRpb24iPsK2PC9hPgogICAgPC9oMj4KICAgIAogIAogICAgCiAgCgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbiBqcy1kb2N1bWVudGF0aW9uIj4KICAgICAgCiAgICAgICAgCgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWNvbnRlbnQganMtZG9jQ29udGVudCI+IDxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLW92ZXJ2aWV3Ij4KICAgIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctb3ZlcnZpZXciIGNsYXNzPSJEb2N1bWVudGF0aW9uLW92ZXJ2aWV3SGVhZGVyIj5PdmVydmlldyA8YSBocmVmPSIjcGtnLW92ZXJ2aWV3Ij7CtjwvYT48L2gzPgoKPHA+UGFja2FnZSBnb3JwIHByb3ZpZGVzIGEgc2ltcGxlIHdheSB0byBtYXJzaGFsIEdvIHN0cnVjdHMgdG8gYW5kIGZyb20KU1FMIGRhdGFiYXNlcy4gIEl0IHVzZXMgdGhlIGRhdGFiYXNlL3NxbCBwYWNrYWdlLCBhbmQgc2hvdWxkIHdvcmsgd2l0aCBhbnkKY29tcGxpYW50IGRhdGFiYXNlL3NxbCBkcml2ZXIuCjwvcD48cD5Tb3VyY2UgY29kZSBhbmQgcHJvamVjdCBob21lOgo8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwIj5odHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwPC9hPgo8L3A+Cjwvc2VjdGlvbj48c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleCI+CiAgICA8aDMgaWQ9InBrZy1pbmRleCIgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhIZWFkZXIiPkluZGV4IDxhIGhyZWY9IiNwa2ctaW5kZXgiPsK2PC9hPjwvaDM+Cgo8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhMaXN0Ij4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNOb25GYXRhbEVycm9yIj5mdW5jIE5vbkZhdGFsRXJyb3IoZXJyIGVycm9yKSBib29sPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjU2VsZWN0RmxvYXQiPmZ1bmMgU2VsZWN0RmxvYXQoZSBTcWxFeGVjdXRvciwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoZmxvYXQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjU2VsZWN0SW50Ij5mdW5jIFNlbGVjdEludChlIFNxbEV4ZWN1dG9yLCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjU2VsZWN0TnVsbEZsb2F0Ij5mdW5jIFNlbGVjdE51bGxGbG9hdChlIFNxbEV4ZWN1dG9yLCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEZsb2F0NjQsIGVycm9yKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE51bGxJbnQiPmZ1bmMgU2VsZWN0TnVsbEludChlIFNxbEV4ZWN1dG9yLCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEludDY0LCBlcnJvcik8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNTZWxlY3ROdWxsU3RyIj5mdW5jIFNlbGVjdE51bGxTdHIoZSBTcWxFeGVjdXRvciwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxTdHJpbmcsIGVycm9yKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1NlbGVjdE9uZSI+ZnVuYyBTZWxlY3RPbmUobSAqRGJNYXAsIGUgU3FsRXhlY3V0b3IsIGhvbGRlciBpbnRlcmZhY2V7fSwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSBlcnJvcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1NlbGVjdFN0ciI+ZnVuYyBTZWxlY3RTdHIoZSBTcWxFeGVjdXRvciwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3RyaW5nLCBlcnJvcik8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjQ29sdW1uRmlsdGVyIj50eXBlIENvbHVtbkZpbHRlcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAiPnR5cGUgQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5SZW5hbWUiPmZ1bmMgKGMgKkNvbHVtbk1hcCkgUmVuYW1lKGNvbG5hbWUgc3RyaW5nKSAqQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRNYXhTaXplIj5mdW5jIChjICpDb2x1bW5NYXApIFNldE1heFNpemUoc2l6ZSBpbnQpICpDb2x1bW5NYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ29sdW1uTWFwLlNldE5vdE51bGwiPmZ1bmMgKGMgKkNvbHVtbk1hcCkgU2V0Tm90TnVsbChubiBib29sKSAqQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0NvbHVtbk1hcC5TZXRUcmFuc2llbnQiPmZ1bmMgKGMgKkNvbHVtbk1hcCkgU2V0VHJhbnNpZW50KGIgYm9vbCkgKkNvbHVtbk1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNDb2x1bW5NYXAuU2V0VW5pcXVlIj5mdW5jIChjICpDb2x1bW5NYXApIFNldFVuaXF1ZShiIGJvb2wpICpDb2x1bW5NYXA8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDdXN0b21TY2FubmVyIj50eXBlIEN1c3RvbVNjYW5uZXI8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ3VzdG9tU2Nhbm5lci5CaW5kIj5mdW5jIChtZSBDdXN0b21TY2FubmVyKSBCaW5kKCkgZXJyb3I8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcCI+dHlwZSBEYk1hcDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5BZGRUYWJsZSI+ZnVuYyAobSAqRGJNYXApIEFkZFRhYmxlKGkgaW50ZXJmYWNle30pICpUYWJsZU1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5BZGRUYWJsZUR5bmFtaWMiPmZ1bmMgKG0gKkRiTWFwKSBBZGRUYWJsZUR5bmFtaWMoaW5wIER5bmFtaWNUYWJsZSwgc2NoZW1hIHN0cmluZykgKlRhYmxlTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkFkZFRhYmxlV2l0aE5hbWUiPmZ1bmMgKG0gKkRiTWFwKSBBZGRUYWJsZVdpdGhOYW1lKGkgaW50ZXJmYWNle30sIG5hbWUgc3RyaW5nKSAqVGFibGVNYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYSI+ZnVuYyAobSAqRGJNYXApIEFkZFRhYmxlV2l0aE5hbWVBbmRTY2hlbWEoaSBpbnRlcmZhY2V7fSwgc2NoZW1hIHN0cmluZywgbmFtZSBzdHJpbmcpICpUYWJsZU1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5CZWdpbiI+ZnVuYyAobSAqRGJNYXApIEJlZ2luKCkgKCpUcmFuc2FjdGlvbiwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkNyZWF0ZUluZGV4Ij5mdW5jIChtICpEYk1hcCkgQ3JlYXRlSW5kZXgoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5DcmVhdGVUYWJsZXMiPmZ1bmMgKG0gKkRiTWFwKSBDcmVhdGVUYWJsZXMoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5DcmVhdGVUYWJsZXNJZk5vdEV4aXN0cyI+ZnVuYyAobSAqRGJNYXApIENyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRGVsZXRlIj5mdW5jIChtICpEYk1hcCkgRGVsZXRlKGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkRyb3BUYWJsZSI+ZnVuYyAobSAqRGJNYXApIERyb3BUYWJsZSh0YWJsZSBpbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRHJvcFRhYmxlSWZFeGlzdHMiPmZ1bmMgKG0gKkRiTWFwKSBEcm9wVGFibGVJZkV4aXN0cyh0YWJsZSBpbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRHJvcFRhYmxlcyI+ZnVuYyAobSAqRGJNYXApIERyb3BUYWJsZXMoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5Ecm9wVGFibGVzSWZFeGlzdHMiPmZ1bmMgKG0gKkRiTWFwKSBEcm9wVGFibGVzSWZFeGlzdHMoKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5EeW5hbWljVGFibGVGb3IiPmZ1bmMgKG0gKkRiTWFwKSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lIHN0cmluZywgY2hlY2tQSyBib29sKSAoKlRhYmxlTWFwLCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuRXhlYyI+ZnVuYyAobSAqRGJNYXApIEV4ZWMocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLlJlc3VsdCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLkdldCI+ZnVuYyAobSAqRGJNYXApIEdldChpIGludGVyZmFjZXt9LCBrZXlzIC4uLmludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5JbnNlcnQiPmZ1bmMgKG0gKkRiTWFwKSBJbnNlcnQobGlzdCAuLi5pbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUHJlcGFyZSI+ZnVuYyAobSAqRGJNYXApIFByZXBhcmUocXVlcnkgc3RyaW5nKSAoKnNxbC5TdG10LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuUXVlcnkiPmZ1bmMgKG0gKkRiTWFwKSBRdWVyeShxIHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKCpzcWwuUm93cywgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlF1ZXJ5Um93Ij5mdW5jIChtICpEYk1hcCkgUXVlcnlSb3cocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAqc3FsLlJvdzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3QiPmZ1bmMgKG0gKkRiTWFwKSBTZWxlY3QoaSBpbnRlcmZhY2V7fSwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoW11pbnRlcmZhY2V7fSwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdEZsb2F0Ij5mdW5jIChtICpEYk1hcCkgU2VsZWN0RmxvYXQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoZmxvYXQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdEludCI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdEludChxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdE51bGxGbG9hdCI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdE51bGxGbG9hdChxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEZsb2F0NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsSW50Ij5mdW5jIChtICpEYk1hcCkgU2VsZWN0TnVsbEludChxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzcWwuTnVsbEludDY0LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuU2VsZWN0TnVsbFN0ciI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdE51bGxTdHIocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxTdHJpbmcsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5TZWxlY3RPbmUiPmZ1bmMgKG0gKkRiTWFwKSBTZWxlY3RPbmUoaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlNlbGVjdFN0ciI+ZnVuYyAobSAqRGJNYXApIFNlbGVjdFN0cihxdWVyeSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pIChzdHJpbmcsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5UYWJsZUZvciI+ZnVuYyAobSAqRGJNYXApIFRhYmxlRm9yKHQgcmVmbGVjdC5UeXBlLCBjaGVja1BLIGJvb2wpICgqVGFibGVNYXAsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5UcmFjZU9mZiI+ZnVuYyAobSAqRGJNYXApIFRyYWNlT2ZmKCk8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJhY2VPbiI+ZnVuYyAobSAqRGJNYXApIFRyYWNlT24ocHJlZml4IHN0cmluZywgbG9nZ2VyIExvZ2dlcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjRGJNYXAuVHJ1bmNhdGVUYWJsZXMiPmZ1bmMgKG0gKkRiTWFwKSBUcnVuY2F0ZVRhYmxlcygpIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0RiTWFwLlVwZGF0ZSI+ZnVuYyAobSAqRGJNYXApIFVwZGF0ZShsaXN0IC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5VcGRhdGVDb2x1bW5zIj5mdW5jIChtICpEYk1hcCkgVXBkYXRlQ29sdW1ucyhmaWx0ZXIgQ29sdW1uRmlsdGVyLCBsaXN0IC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNEYk1hcC5XaXRoQ29udGV4dCI+ZnVuYyAobSAqRGJNYXApIFdpdGhDb250ZXh0KGN0eCBjb250ZXh0LkNvbnRleHQpIFNxbEV4ZWN1dG9yPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjRGlhbGVjdCI+dHlwZSBEaWFsZWN0PC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0R5bmFtaWNUYWJsZSI+dHlwZSBEeW5hbWljVGFibGU8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjR29ycExvZ2dlciI+dHlwZSBHb3JwTG9nZ2VyPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0hhc1Bvc3REZWxldGUiPnR5cGUgSGFzUG9zdERlbGV0ZTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNIYXNQb3N0R2V0Ij50eXBlIEhhc1Bvc3RHZXQ8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjSGFzUG9zdEluc2VydCI+dHlwZSBIYXNQb3N0SW5zZXJ0PC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0hhc1Bvc3RVcGRhdGUiPnR5cGUgSGFzUG9zdFVwZGF0ZTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNIYXNQcmVEZWxldGUiPnR5cGUgSGFzUHJlRGVsZXRlPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI0hhc1ByZUluc2VydCI+dHlwZSBIYXNQcmVJbnNlcnQ8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjSGFzUHJlVXBkYXRlIj50eXBlIEhhc1ByZVVwZGF0ZTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNJbmRleE1hcCI+dHlwZSBJbmRleE1hcDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNJbmRleE1hcC5SZW5hbWUiPmZ1bmMgKGlkeCAqSW5kZXhNYXApIFJlbmFtZShpbmRuYW1lIHN0cmluZykgKkluZGV4TWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI0luZGV4TWFwLlNldEluZGV4VHlwZSI+ZnVuYyAoaWR4ICpJbmRleE1hcCkgU2V0SW5kZXhUeXBlKGluZHR5cGUgc3RyaW5nKSAqSW5kZXhNYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjSW5kZXhNYXAuU2V0VW5pcXVlIj5mdW5jIChpZHggKkluZGV4TWFwKSBTZXRVbmlxdWUoYiBib29sKSAqSW5kZXhNYXA8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNJbnRlZ2VyQXV0b0luY3JJbnNlcnRlciI+dHlwZSBJbnRlZ2VyQXV0b0luY3JJbnNlcnRlcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNMb2dnZXIiPnR5cGUgTG9nZ2VyPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+dHlwZSBNeVNRTERpYWxlY3Q8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj5mdW5jIChkIE15U1FMRGlhbGVjdCkgQXV0b0luY3JCaW5kVmFsdWUoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij5mdW5jIChkIE15U1FMRGlhbGVjdCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICpDb2x1bW5NYXApIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQXV0b0luY3JTdHIiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBBdXRvSW5jclN0cigpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQmluZFZhciI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIEJpbmRWYXIoaSBpbnQpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBDcmVhdGVJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij5mdW5jIChkIE15U1FMRGlhbGVjdCkgRHJvcEluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSWZUYWJsZUV4aXN0cyI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuSW5zZXJ0QXV0b0luY3IiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBJbnNlcnRBdXRvSW5jcihleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCBwYXJhbXMgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5RdWVyeVN1ZmZpeCI+ZnVuYyAoZCBNeVNRTERpYWxlY3QpIFF1ZXJ5U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZUZpZWxkIj5mdW5jIChkIE15U1FMRGlhbGVjdCkgUXVvdGVGaWVsZChmIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij5mdW5jIChkIE15U1FMRGlhbGVjdCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgc3RyaW5nLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuU2xlZXBDbGF1c2UiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBTbGVlcENsYXVzZShzIHRpbWUuRHVyYXRpb24pIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuVG9TcWxUeXBlIj5mdW5jIChkIE15U1FMRGlhbGVjdCkgVG9TcWxUeXBlKHZhbCByZWZsZWN0LlR5cGUsIG1heHNpemUgaW50LCBpc0F1dG9JbmNyIGJvb2wpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPmZ1bmMgKGQgTXlTUUxEaWFsZWN0KSBUcnVuY2F0ZUNsYXVzZSgpIHN0cmluZzwvYT48L2xpPgo8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI05vRmllbGRJblR5cGVFcnJvciI+dHlwZSBOb0ZpZWxkSW5UeXBlRXJyb3I8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIj5mdW5jIChlcnIgKk5vRmllbGRJblR5cGVFcnJvcikgRXJyb3IoKSBzdHJpbmc8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNOdWxsVGltZSI+dHlwZSBOdWxsVGltZTwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNOdWxsVGltZS5TY2FuIj5mdW5jIChudCAqTnVsbFRpbWUpIFNjYW4odmFsdWUgaW50ZXJmYWNle30pIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI051bGxUaW1lLlZhbHVlIj5mdW5jIChudCBOdWxsVGltZSkgVmFsdWUoKSAoZHJpdmVyLlZhbHVlLCBlcnJvcik8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNPcHRpbWlzdGljTG9ja0Vycm9yIj50eXBlIE9wdGltaXN0aWNMb2NrRXJyb3I8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3B0aW1pc3RpY0xvY2tFcnJvci5FcnJvciI+ZnVuYyAoZSBPcHRpbWlzdGljTG9ja0Vycm9yKSBFcnJvcigpIHN0cmluZzwvYT48L2xpPgo8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPnR5cGUgT3JhY2xlRGlhbGVjdDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIEF1dG9JbmNyQmluZFZhbHVlKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPmZ1bmMgKGQgT3JhY2xlRGlhbGVjdCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICpDb2x1bW5NYXApIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNyU3RyIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIEF1dG9JbmNyU3RyKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuQmluZFZhciI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBCaW5kVmFyKGkgaW50KSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBDcmVhdGVJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIENyZWF0ZVRhYmxlU3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIERyb3BJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LklmVGFibGVFeGlzdHMiPmZ1bmMgKGQgT3JhY2xlRGlhbGVjdCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5JbnNlcnRRdWVyeVRvVGFyZ2V0Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIEluc2VydFF1ZXJ5VG9UYXJnZXQoZXhlYyBTcWxFeGVjdXRvciwgaW5zZXJ0U3FsLCBpZFNxbCBzdHJpbmcsIHRhcmdldCBpbnRlcmZhY2V7fSwgLi4uKSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlF1ZXJ5U3VmZml4Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIFF1ZXJ5U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVGaWVsZCI+ZnVuYyAoZCBPcmFjbGVEaWFsZWN0KSBRdW90ZUZpZWxkKGYgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij5mdW5jIChkIE9yYWNsZURpYWxlY3QpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIHN0cmluZywgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdC5Ub1NxbFR5cGUiPmZ1bmMgKGQgT3JhY2xlRGlhbGVjdCkgVG9TcWxUeXBlKHZhbCByZWZsZWN0LlR5cGUsIG1heHNpemUgaW50LCBpc0F1dG9JbmNyIGJvb2wpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIj5mdW5jIChkIE9yYWNsZURpYWxlY3QpIFRydW5jYXRlQ2xhdXNlKCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlU3RyaW5nIj50eXBlIE9yYWNsZVN0cmluZzwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNPcmFjbGVTdHJpbmcuU2NhbiI+ZnVuYyAob3MgKk9yYWNsZVN0cmluZykgU2Nhbih2YWx1ZSBpbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjT3JhY2xlU3RyaW5nLlZhbHVlIj5mdW5jIChvcyBPcmFjbGVTdHJpbmcpIFZhbHVlKCkgKGRyaXZlci5WYWx1ZSwgZXJyb3IpPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij50eXBlIFBvc3RncmVzRGlhbGVjdDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBBdXRvSW5jckJpbmRWYWx1ZSgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKkNvbHVtbk1hcCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5BdXRvSW5jclN0ciI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIEF1dG9JbmNyU3RyKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5CaW5kVmFyIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgQmluZFZhcihpIGludCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIENyZWF0ZUluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIENyZWF0ZVRhYmxlU3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBEcm9wSW5kZXhTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JZlRhYmxlRXhpc3RzIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIj5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0Ij5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1ZXJ5U3VmZml4Ij5mdW5jIChkIFBvc3RncmVzRGlhbGVjdCkgUXVlcnlTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlRmllbGQiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBRdW90ZUZpZWxkKGYgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSBzdHJpbmcsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5TbGVlcENsYXVzZSI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIFNsZWVwQ2xhdXNlKHMgdGltZS5EdXJhdGlvbikgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5Ub1NxbFR5cGUiPmZ1bmMgKGQgUG9zdGdyZXNEaWFsZWN0KSBUb1NxbFR5cGUodmFsIHJlZmxlY3QuVHlwZSwgbWF4c2l6ZSBpbnQsIGlzQXV0b0luY3IgYm9vbCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+ZnVuYyAoZCBQb3N0Z3Jlc0RpYWxlY3QpIFRydW5jYXRlQ2xhdXNlKCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+dHlwZSBTbm93Zmxha2VEaWFsZWN0PC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgQXV0b0luY3JCaW5kVmFsdWUoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKkNvbHVtbk1hcCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JTdHIiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgQXV0b0luY3JTdHIoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5CaW5kVmFyIj5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIEJpbmRWYXIoaSBpbnQpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkNyZWF0ZUluZGV4U3VmZml4Ij5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIENyZWF0ZUluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgQ3JlYXRlVGFibGVTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgRHJvcEluZGV4U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZUYWJsZUV4aXN0cyI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIj5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5RdWVyeVN1ZmZpeCI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBRdWVyeVN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LlF1b3RlRmllbGQiPmZ1bmMgKGQgU25vd2ZsYWtlRGlhbGVjdCkgUXVvdGVGaWVsZChmIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBRdW90ZWRUYWJsZUZvclF1ZXJ5KHNjaGVtYSBzdHJpbmcsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuVG9TcWxUeXBlIj5mdW5jIChkIFNub3dmbGFrZURpYWxlY3QpIFRvU3FsVHlwZSh2YWwgcmVmbGVjdC5UeXBlLCBtYXhzaXplIGludCwgaXNBdXRvSW5jciBib29sKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+ZnVuYyAoZCBTbm93Zmxha2VEaWFsZWN0KSBUcnVuY2F0ZUNsYXVzZSgpIHN0cmluZzwvYT48L2xpPgo8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj50eXBlIFNxbEV4ZWN1dG9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPnR5cGUgU3FsU2VydmVyRGlhbGVjdDwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIEF1dG9JbmNyQmluZFZhbHVlKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICpDb2x1bW5NYXApIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyU3RyIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIEF1dG9JbmNyU3RyKCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQmluZFZhciI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBCaW5kVmFyKGkgaW50KSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBDcmVhdGVJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIENyZWF0ZVRhYmxlU3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIERyb3BJbmRleFN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVFeGlzdHMiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JbnNlcnRBdXRvSW5jciI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBJbnNlcnRBdXRvSW5jcihleGVjIFNxbEV4ZWN1dG9yLCBpbnNlcnRTcWwgc3RyaW5nLCBwYXJhbXMgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuUXVlcnlTdWZmaXgiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgUXVlcnlTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5RdW90ZUZpZWxkIj5mdW5jIChkIFNxbFNlcnZlckRpYWxlY3QpIFF1b3RlRmllbGQoZiBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgc3RyaW5nLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlRvU3FsVHlwZSI+ZnVuYyAoZCBTcWxTZXJ2ZXJEaWFsZWN0KSBUb1NxbFR5cGUodmFsIHJlZmxlY3QuVHlwZSwgbWF4c2l6ZSBpbnQsIGlzQXV0b0luY3IgYm9vbCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPmZ1bmMgKGQgU3FsU2VydmVyRGlhbGVjdCkgVHJ1bmNhdGVDbGF1c2UoKSBzdHJpbmc8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNTcWxUeXBlciI+dHlwZSBTcWxUeXBlcjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij50eXBlIFNxbGl0ZURpYWxlY3Q8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBBdXRvSW5jckJpbmRWYWx1ZSgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqQ29sdW1uTWFwKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jclN0ciI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBBdXRvSW5jclN0cigpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkJpbmRWYXIiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgQmluZFZhcihpIGludCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgQ3JlYXRlSW5kZXhTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5DcmVhdGVUYWJsZVN1ZmZpeCI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBEcm9wSW5kZXhTdWZmaXgoKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIj5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSBzdHJpbmcpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIHN0cmluZykgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSW5zZXJ0QXV0b0luY3IiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgSW5zZXJ0QXV0b0luY3IoZXhlYyBTcWxFeGVjdXRvciwgaW5zZXJ0U3FsIHN0cmluZywgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1ZXJ5U3VmZml4Ij5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIFF1ZXJ5U3VmZml4KCkgc3RyaW5nPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QuUXVvdGVGaWVsZCI+ZnVuYyAoZCBTcWxpdGVEaWFsZWN0KSBRdW90ZUZpZWxkKGYgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIHN0cmluZywgdGFibGUgc3RyaW5nKSBzdHJpbmc8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdC5Ub1NxbFR5cGUiPmZ1bmMgKGQgU3FsaXRlRGlhbGVjdCkgVG9TcWxUeXBlKHZhbCByZWZsZWN0LlR5cGUsIG1heHNpemUgaW50LCBpc0F1dG9JbmNyIGJvb2wpIHN0cmluZzwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIj5mdW5jIChkIFNxbGl0ZURpYWxlY3QpIFRydW5jYXRlQ2xhdXNlKCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAiPnR5cGUgVGFibGVNYXA8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuQWRkSW5kZXgiPmZ1bmMgKHQgKlRhYmxlTWFwKSBBZGRJbmRleChuYW1lIHN0cmluZywgaWR4dHlwZSBzdHJpbmcsIGNvbHVtbnMgW11zdHJpbmcpICpJbmRleE1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5Db2xNYXAiPmZ1bmMgKHQgKlRhYmxlTWFwKSBDb2xNYXAoZmllbGQgc3RyaW5nKSAqQ29sdW1uTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLkRyb3BJbmRleCI+ZnVuYyAodCAqVGFibGVNYXApIERyb3BJbmRleChuYW1lIHN0cmluZykgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuSWR4TWFwIj5mdW5jICh0ICpUYWJsZU1hcCkgSWR4TWFwKGZpZWxkIHN0cmluZykgKkluZGV4TWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlJlc2V0U3FsIj5mdW5jICh0ICpUYWJsZU1hcCkgUmVzZXRTcWwoKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5TZXRLZXlzIj5mdW5jICh0ICpUYWJsZU1hcCkgU2V0S2V5cyhpc0F1dG9JbmNyIGJvb2wsIGZpZWxkTmFtZXMgLi4uc3RyaW5nKSAqVGFibGVNYXA8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVGFibGVNYXAuU2V0VW5pcXVlVG9nZXRoZXIiPmZ1bmMgKHQgKlRhYmxlTWFwKSBTZXRVbmlxdWVUb2dldGhlcihmaWVsZE5hbWVzIC4uLnN0cmluZykgKlRhYmxlTWFwPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RhYmxlTWFwLlNldFZlcnNpb25Db2wiPmZ1bmMgKHQgKlRhYmxlTWFwKSBTZXRWZXJzaW9uQ29sKGZpZWxkIHN0cmluZykgKkNvbHVtbk1hcDwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUYWJsZU1hcC5TcWxGb3JDcmVhdGUiPmZ1bmMgKHQgKlRhYmxlTWFwKSBTcWxGb3JDcmVhdGUoaWZOb3RFeGlzdHMgYm9vbCkgc3RyaW5nPC9hPjwvbGk+CjwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjVGFyZ2V0UXVlcnlJbnNlcnRlciI+dHlwZSBUYXJnZXRRdWVyeUluc2VydGVyPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1RhcmdldGVkQXV0b0luY3JJbnNlcnRlciI+dHlwZSBUYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXI8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+CiAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24iPnR5cGUgVHJhbnNhY3Rpb248L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uQ29tbWl0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgQ29tbWl0KCkgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uRGVsZXRlIj5mdW5jICh0ICpUcmFuc2FjdGlvbikgRGVsZXRlKGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLkV4ZWMiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBFeGVjKHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKHNxbC5SZXN1bHQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5HZXQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBHZXQoaSBpbnRlcmZhY2V7fSwga2V5cyAuLi5pbnRlcmZhY2V7fSkgKGludGVyZmFjZXt9LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uSW5zZXJ0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgSW5zZXJ0KGxpc3QgLi4uaW50ZXJmYWNle30pIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlByZXBhcmUiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBQcmVwYXJlKHF1ZXJ5IHN0cmluZykgKCpzcWwuU3RtdCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlF1ZXJ5Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgUXVlcnkocSBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqc3FsLlJvd3MsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5RdWVyeVJvdyI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFF1ZXJ5Um93KHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKnNxbC5Sb3c8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUmVsZWFzZVNhdmVwb2ludCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFJlbGVhc2VTYXZlcG9pbnQoc2F2ZXBvaW50IHN0cmluZykgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2siPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBSb2xsYmFjaygpIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlJvbGxiYWNrVG9TYXZlcG9pbnQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBSb2xsYmFja1RvU2F2ZXBvaW50KHNhdmVwb2ludCBzdHJpbmcpIGVycm9yPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNhdmVwb2ludCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFNhdmVwb2ludChuYW1lIHN0cmluZykgZXJyb3I8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgU2VsZWN0KGkgaW50ZXJmYWNle30sIHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKFtdaW50ZXJmYWNle30sIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RGbG9hdCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFNlbGVjdEZsb2F0KHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKGZsb2F0NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RJbnQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3RJbnQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoaW50NjQsIGVycm9yKTwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3ROdWxsRmxvYXQiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3ROdWxsRmxvYXQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxGbG9hdDY0LCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0TnVsbEludCI+ZnVuYyAodCAqVHJhbnNhY3Rpb24pIFNlbGVjdE51bGxJbnQocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3FsLk51bGxJbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxTdHIiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3ROdWxsU3RyKHF1ZXJ5IHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKHNxbC5OdWxsU3RyaW5nLCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0T25lIj5mdW5jICh0ICpUcmFuc2FjdGlvbikgU2VsZWN0T25lKGhvbGRlciBpbnRlcmZhY2V7fSwgcXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSBlcnJvcjwvYT48L2xpPgo8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3RTdHIiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBTZWxlY3RTdHIocXVlcnkgc3RyaW5nLCBhcmdzIC4uLmludGVyZmFjZXt9KSAoc3RyaW5nLCBlcnJvcik8L2E+PC9saT4KPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjVHJhbnNhY3Rpb24uVXBkYXRlIj5mdW5jICh0ICpUcmFuc2FjdGlvbikgVXBkYXRlKGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLlVwZGF0ZUNvbHVtbnMiPmZ1bmMgKHQgKlRyYW5zYWN0aW9uKSBVcGRhdGVDb2x1bW5zKGZpbHRlciBDb2x1bW5GaWx0ZXIsIGxpc3QgLi4uaW50ZXJmYWNle30pIChpbnQ2NCwgZXJyb3IpPC9hPjwvbGk+CjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iI1RyYW5zYWN0aW9uLldpdGhDb250ZXh0Ij5mdW5jICh0ICpUcmFuc2FjdGlvbikgV2l0aENvbnRleHQoY3R4IGNvbnRleHQuQ29udGV4dCkgU3FsRXhlY3V0b3I8L2E+PC9saT4KPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNUeXBlQ29udmVydGVyIj50eXBlIFR5cGVDb252ZXJ0ZXI8L2E+PC9saT4KPC91bD4KPC9zZWN0aW9uPjxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctY29uc3RhbnRzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb25zdGFudHNIZWFkZXIiPkNvbnN0YW50cyA8YSBocmVmPSIjcGtnLWNvbnN0YW50cyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctdmFyaWFibGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXNIZWFkZXIiPlZhcmlhYmxlcyA8YSBocmVmPSIjcGtnLXZhcmlhYmxlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdmFyaWFibGVzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctZnVuY3Rpb25zIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnNIZWFkZXIiPkZ1bmN0aW9ucyA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25zIj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTm9uRmF0YWxFcnJvciIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9lcnJvcnMuZ28jTDI0Ij5Ob25GYXRhbEVycm9yPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOb25GYXRhbEVycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTm9uRmF0YWxFcnJvcihlcnIgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPnJldHVybnMgdHJ1ZSBpZiB0aGUgZXJyb3IgaXMgbm9uLWZhdGFsIChpZSwgd2Ugc2hvdWxkbiYjMzk7dCBpbW1lZGlhdGVseSByZXR1cm4pCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTZWxlY3RGbG9hdCIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9zZWxlY3QuZ28jTDQwIj5TZWxlY3RGbG9hdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0RmxvYXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBTZWxlY3RGbG9hdChlIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNmbG9hdDY0Ij5mbG9hdDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdEZsb2F0IGV4ZWN1dGVzIHRoZSBnaXZlbiBxdWVyeSwgd2hpY2ggc2hvdWxkIGJlIGEgU0VMRUNUIHN0YXRlbWVudCBmb3IgYSBzaW5nbGUKZmxvYXQgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gSWYgbm8gcm93cyBhcmUKZm91bmQsIHplcm8gaXMgcmV0dXJuZWQuCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTZWxlY3RJbnQiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvc2VsZWN0LmdvI0wxNiI+U2VsZWN0SW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTZWxlY3RJbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBTZWxlY3RJbnQoZSA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgcXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdEludCBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlCmludGVnZXIgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gIElmIG5vIHJvd3MgYXJlCmZvdW5kLCB6ZXJvIGlzIHJldHVybmVkLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2VsZWN0TnVsbEZsb2F0IiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3NlbGVjdC5nbyNMNTIiPlNlbGVjdE51bGxGbG9hdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0TnVsbEZsb2F0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgU2VsZWN0TnVsbEZsb2F0KGUgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsRmxvYXQ2NCI+TnVsbEZsb2F0NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbEZsb2F0IGV4ZWN1dGVzIHRoZSBnaXZlbiBxdWVyeSwgd2hpY2ggc2hvdWxkIGJlIGEgU0VMRUNUIHN0YXRlbWVudCBmb3IgYSBzaW5nbGUKZmxvYXQgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gSWYgbm8gcm93cyBhcmUKZm91bmQsIHRoZSBlbXB0eSBzcWwuTnVsbEludDY0IHZhbHVlIGlzIHJldHVybmVkLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9zZWxlY3QuZ28jTDI4Ij5TZWxlY3ROdWxsSW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTZWxlY3ROdWxsSW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgU2VsZWN0TnVsbEludChlIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjTnVsbEludDY0Ij5OdWxsSW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbEludCBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlCmludGVnZXIgY29sdW1uLCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IHJvdyByZXR1cm5lZC4gIElmIG5vIHJvd3MgYXJlCmZvdW5kLCB0aGUgZW1wdHkgc3FsLk51bGxJbnQ2NCB2YWx1ZSBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNlbGVjdE51bGxTdHIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvc2VsZWN0LmdvI0w3NyI+U2VsZWN0TnVsbFN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0TnVsbFN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFNlbGVjdE51bGxTdHIoZSA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgcXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI051bGxTdHJpbmciPk51bGxTdHJpbmc8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbFN0ciBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVApzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlIGNoYXIvdmFyY2hhciBjb2x1bW4sIGFuZCByZXR1cm5zIHRoZSB2YWx1ZQpvZiB0aGUgZmlyc3Qgcm93IHJldHVybmVkLiAgSWYgbm8gcm93cyBhcmUgZm91bmQsIHRoZSBlbXB0eQpzcWwuTnVsbFN0cmluZyBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNlbGVjdE9uZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9zZWxlY3QuZ28jTDkzIj5TZWxlY3RPbmU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NlbGVjdE9uZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFNlbGVjdE9uZShtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPiwgZSA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgogIDx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPgogICAgPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgogICAgICAgIDxhIGhyZWY9IiNoZHItSWZfbm9fcm93X2lzX2ZvdW5kX19hbl9lcnJvcl9fc3FsX0Vyck5vUm93c19zcGVjaWZpY2FsbHlfX3dpbGxfYmVfcmV0dXJuZWQiPklmIG5vIHJvdyBpcyBmb3VuZCwgYW4gZXJyb3IgKHNxbC5FcnJOb1Jvd3Mgc3BlY2lmaWNhbGx5KSB3aWxsIGJlIHJldHVybmVkPC9hPgogICAgICA8L2xpPgogICAgPC91bD4KPC9kaXY+CjxwPlNlbGVjdE9uZSBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnkgKHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQpCmFuZCBiaW5kcyB0aGUgcmVzdWx0IHRvIGhvbGRlciwgd2hpY2ggbXVzdCBiZSBhIHBvaW50ZXIuCjwvcD48aDQgaWQ9Imhkci1JZl9ub19yb3dfaXNfZm91bmRfX2FuX2Vycm9yX19zcWxfRXJyTm9Sb3dzX3NwZWNpZmljYWxseV9fd2lsbF9iZV9yZXR1cm5lZCI+SWYgbm8gcm93IGlzIGZvdW5kLCBhbiBlcnJvciAoc3FsLkVyck5vUm93cyBzcGVjaWZpY2FsbHkpIHdpbGwgYmUgcmV0dXJuZWQgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLUlmX25vX3Jvd19pc19mb3VuZF9fYW5fZXJyb3JfX3NxbF9FcnJOb1Jvd3Nfc3BlY2lmaWNhbGx5X193aWxsX2JlX3JldHVybmVkIj7CtjwvYT48L2g0PjxwPklmIG1vcmUgdGhhbiBvbmUgcm93IGlzIGZvdW5kLCBhbiBlcnJvciB3aWxsIGJlIHJldHVybmVkLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2VsZWN0U3RyIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3NlbGVjdC5nbyNMNjQiPlNlbGVjdFN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2VsZWN0U3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgU2VsZWN0U3RyKGUgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdFN0ciBleGVjdXRlcyB0aGUgZ2l2ZW4gcXVlcnksIHdoaWNoIHNob3VsZCBiZSBhIFNFTEVDVCBzdGF0ZW1lbnQgZm9yIGEgc2luZ2xlCmNoYXIvdmFyY2hhciBjb2x1bW4sIGFuZCByZXR1cm5zIHRoZSB2YWx1ZSBvZiB0aGUgZmlyc3Qgcm93IHJldHVybmVkLiAgSWYgbm8gcm93cyBhcmUKZm91bmQsIGFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbHVtbkZpbHRlciIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGVfYmluZGluZ3MuZ28jTDMwIj5Db2x1bW5GaWx0ZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbkZpbHRlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIENvbHVtbkZpbHRlciBmdW5jKCo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+VXNlZCB0byBmaWx0ZXIgY29sdW1ucyB3aGVuIHNlbGVjdGl2ZWx5IHVwZGF0aW5nCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ29sdW1uTWFwIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9jb2x1bW4uZ28jTDEzIj5Db2x1bW5NYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIENvbHVtbk1hcCBzdHJ1Y3Qgewo8c3BhbiBpZD0iQ29sdW1uTWFwLkNvbHVtbk5hbWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gQ29sdW1uIG5hbWUgaW4gZGIgdGFibGU8L3NwYW4+Cjwvc3Bhbj4JQ29sdW1uTmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJDb2x1bW5NYXAuVHJhbnNpZW50IiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIElmIHRydWUsIHRoaXMgY29sdW1uIGlzIHNraXBwZWQgaW4gZ2VuZXJhdGVkIFNRTCBzdGF0ZW1lbnRzPC9zcGFuPgo8L3NwYW4+CVRyYW5zaWVudCA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPgoKPHNwYW4gaWQ9IkNvbHVtbk1hcC5VbmlxdWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSWYgdHJ1ZSwgJiMzNDsgdW5pcXVlJiMzNDsgaXMgYWRkZWQgdG8gY3JlYXRlIHRhYmxlIHN0YXRlbWVudHMuPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOb3QgdXNlZCBlbHNld2hlcmU8L3NwYW4+CglVbmlxdWUgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KCjxzcGFuIGlkPSJDb2x1bW5NYXAuR2VuZXJhdGVkSWRRdWVyeSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBRdWVyeSB1c2VkIGZvciBnZXR0aW5nIGdlbmVyYXRlZCBpZCBhZnRlciBpbnNlcnQ8L3NwYW4+Cjwvc3Bhbj4JR2VuZXJhdGVkSWRRdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJDb2x1bW5NYXAuTWF4U2l6ZSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBQYXNzZWQgdG8gRGlhbGVjdC5Ub1NxbFR5cGUoKSB0byBhc3Npc3QgaW4gaW5mb3JtaW5nIHRoZTwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29ycmVjdCBjb2x1bW4gdHlwZSB0byBtYXAgdG8gaW4gQ3JlYXRlVGFibGVzKCk8L3NwYW4+CglNYXhTaXplIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPgoKPHNwYW4gaWQ9IkNvbHVtbk1hcC5EZWZhdWx0VmFsdWUiIGRhdGEta2luZD0iZmllbGQiPglEZWZhdWx0VmFsdWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Db2x1bW5NYXAgcmVwcmVzZW50cyBhIG1hcHBpbmcgYmV0d2VlbiBhIEdvIHN0cnVjdCBmaWVsZCBhbmQgYSBzaW5nbGUKY29sdW1uIGluIGEgdGFibGUuClVuaXF1ZSBhbmQgTWF4U2l6ZSBvbmx5IGluZm9ybSB0aGUKQ3JlYXRlVGFibGVzKCkgZnVuY3Rpb24gYW5kIGFyZSBub3QgdXNlZCBieSBJbnNlcnQvVXBkYXRlL0RlbGV0ZS9HZXQuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbHVtbk1hcC5SZW5hbWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNDQiPlJlbmFtZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29sdW1uTWFwLlJlbmFtZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSBSZW5hbWUoY29sbmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZW5hbWUgYWxsb3dzIHlvdSB0byBzcGVjaWZ5IHRoZSBjb2x1bW4gbmFtZSBpbiB0aGUgdGFibGUKPC9wPjxwPkV4YW1wbGU6ICB0YWJsZS5Db2xNYXAoJiMzNDtVcGRhdGVkJiMzNDspLlJlbmFtZSgmIzM0O2RhdGVfdXBkYXRlZCYjMzQ7KQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ29sdW1uTWFwLlNldE1heFNpemUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNzMiPlNldE1heFNpemU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcC5TZXRNYXhTaXplIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIFNldE1heFNpemUoc2l6ZSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRNYXhTaXplIHNwZWNpZmllcyB0aGUgbWF4IGxlbmd0aCBvZiB2YWx1ZXMgb2YgdGhpcyBjb2x1bW4uIFRoaXMgaXMKcGFzc2VkIHRvIHRoZSBkaWFsZWN0LlRvU3FsVHlwZSgpIGZ1bmN0aW9uLCB3aGljaCBjYW4gdXNlIHRoZSB2YWx1ZQp0byBhbHRlciB0aGUgZ2VuZXJhdGVkIHR5cGUgZm9yICYjMzQ7Y3JlYXRlIHRhYmxlJiMzNDsgc3RhdGVtZW50cwo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ29sdW1uTWFwLlNldE5vdE51bGwiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNjUiPlNldE5vdE51bGw8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcC5TZXROb3ROdWxsIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIFNldE5vdE51bGwobm4gPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXROb3ROdWxsIGFkZHMgJiMzNDtub3QgbnVsbCYjMzQ7IHRvIHRoZSBjcmVhdGUgdGFibGUgc3RhdGVtZW50cyBmb3IgdGhpcwpjb2x1bW4sIGlmIG5uIGlzIHRydWUuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJDb2x1bW5NYXAuU2V0VHJhbnNpZW50IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpDb2x1bW5NYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9jb2x1bW4uZ28jTDUxIj5TZXRUcmFuc2llbnQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0NvbHVtbk1hcC5TZXRUcmFuc2llbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgU2V0VHJhbnNpZW50KGIgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRUcmFuc2llbnQgYWxsb3dzIHlvdSB0byBtYXJrIHRoZSBjb2x1bW4gYXMgdHJhbnNpZW50LiBJZiB0cnVlCnRoaXMgY29sdW1uIHdpbGwgYmUgc2tpcHBlZCB3aGVuIFNRTCBzdGF0ZW1lbnRzIGFyZSBnZW5lcmF0ZWQKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbHVtbk1hcC5TZXRVbmlxdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkNvbHVtbk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2NvbHVtbi5nbyNMNTgiPlNldFVuaXF1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29sdW1uTWFwLlNldFVuaXF1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSBTZXRVbmlxdWUoYiA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNldFVuaXF1ZSBhZGRzICYjMzQ7dW5pcXVlJiMzNDsgdG8gdGhlIGNyZWF0ZSB0YWJsZSBzdGF0ZW1lbnRzIGZvciB0aGlzCmNvbHVtbiwgaWYgYiBpcyB0cnVlLgo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJDdXN0b21TY2FubmVyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90YWJsZV9iaW5kaW5ncy5nbyNMMTUiPkN1c3RvbVNjYW5uZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0N1c3RvbVNjYW5uZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDdXN0b21TY2FubmVyIHN0cnVjdCB7CjxzcGFuIGlkPSJDdXN0b21TY2FubmVyLkhvbGRlciIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBBZnRlciBhIHJvdyBpcyBzY2FubmVkLCBIb2xkZXIgd2lsbCBjb250YWluIHRoZSB2YWx1ZSBmcm9tIHRoZSBkYXRhYmFzZSBjb2x1bW4uPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJbml0aWFsaXplIHRoZSBDdXN0b21TY2FubmVyIHdpdGggdGhlIGNvbmNyZXRlIEdvIHR5cGUgeW91IHdpc2ggdGhlIGRhdGFiYXNlPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGRyaXZlciB0byBzY2FuIHRoZSByYXcgY29sdW1uIGludG8uPC9zcGFuPgoJSG9sZGVyIGludGVyZmFjZXt9CjxzcGFuIGlkPSJDdXN0b21TY2FubmVyLlRhcmdldCIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUYXJnZXQgdHlwaWNhbGx5IGhvbGRzIGEgcG9pbnRlciB0byB0aGUgdGFyZ2V0IHN0cnVjdCBmaWVsZCB0byBiaW5kIHRoZSBIb2xkZXI8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHZhbHVlIHRvLjwvc3Bhbj4KCVRhcmdldCBpbnRlcmZhY2V7fQo8c3BhbiBpZD0iQ3VzdG9tU2Nhbm5lci5CaW5kZXIiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gQmluZGVyIGlzIGEgY3VzdG9tIGZ1bmN0aW9uIHRoYXQgY29udmVydHMgdGhlIGhvbGRlciB2YWx1ZSB0byB0aGUgdGFyZ2V0IHR5cGU8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGFuZCBzZXRzIHRhcmdldCBhY2NvcmRpbmdseS4gIFRoaXMgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBlcnJvciBpZiBhIHByb2JsZW08L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gb2NjdXJzIGNvbnZlcnRpbmcgdGhlIGhvbGRlciB0byB0aGUgdGFyZ2V0Ljwvc3Bhbj4KCUJpbmRlciBmdW5jKGhvbGRlciBpbnRlcmZhY2V7fSwgdGFyZ2V0IGludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkN1c3RvbVNjYW5uZXIgYmluZHMgYSBkYXRhYmFzZSBjb2x1bW4gdmFsdWUgdG8gYSBHbyB0eXBlCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkN1c3RvbVNjYW5uZXIuQmluZCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChDdXN0b21TY2FubmVyKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGVfYmluZGluZ3MuZ28jTDM3Ij5CaW5kPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDdXN0b21TY2FubmVyLkJpbmQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobWUgPGEgaHJlZj0iI0N1c3RvbVNjYW5uZXIiPkN1c3RvbVNjYW5uZXI8L2E+KSBCaW5kKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+QmluZCBpcyBjYWxsZWQgYXV0b21hdGljYWxseSBieSBnb3JwIGFmdGVyIFNjYW4oKQo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDMwIj5EYk1hcDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBEYk1hcCBzdHJ1Y3QgewoKPHNwYW4gaWQ9IkRiTWFwLkRiIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIERiIGhhbmRsZSB0byB1c2Ugd2l0aCB0aGlzIG1hcDwvc3Bhbj4KPC9zcGFuPglEYiAqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI0RCIj5EQjwvYT4KCjxzcGFuIGlkPSJEYk1hcC5EaWFsZWN0IiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIERpYWxlY3QgaW1wbGVtZW50YXRpb24gdG8gdXNlIHdpdGggdGhpcyBtYXA8L3NwYW4+Cjwvc3Bhbj4JRGlhbGVjdCA8YSBocmVmPSIjRGlhbGVjdCI+RGlhbGVjdDwvYT4KCjxzcGFuIGlkPSJEYk1hcC5UeXBlQ29udmVydGVyIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVHlwZUNvbnZlcnRlciA8YSBocmVmPSIjVHlwZUNvbnZlcnRlciI+VHlwZUNvbnZlcnRlcjwvYT4KPC9zcGFuPgo8c3BhbiBpZD0iRGJNYXAuRXhwYW5kU2xpY2VBcmdzIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEV4cGFuZFNsaWNlcyB3aGVuIGVuYWJsZWQgd2lsbCBjb252ZXJ0IHNsaWNlIGFyZ3VtZW50cyBpbiBtYXBwZXJzIGludG8gZmxhdDwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdmFsdWVzLiBJdCB3aWxsIG1vZGlmeSB0aGUgcXVlcnksIGFkZGluZyBtb3JlIHBsYWNlaG9sZGVycywgYW5kIHRoZSBtYXBwZXIsPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGFkZGluZyBlYWNoIGl0ZW0gb2YgdGhlIHNsaWNlIGFzIGEgbmV3IHVuaXF1ZSBlbnRyeSBpbiB0aGUgbWFwcGVyLiBGb3I8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gZXhhbXBsZSwgZ2l2ZW4gdGhlIHNjZW5hcmlvIGJlbGxvdzo8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgIGRibWFwLlNlbGVjdCgmYW1wO291dHB1dCwgJiMzNDtTRUxFQ1QgMSBGUk9NIGV4YW1wbGUgV0hFUkUgaWQgSU4gKDpJRHMpJiMzNDssIG1hcFtzdHJpbmddaW50ZXJmYWNle317PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICYjMzQ7SURzJiMzNDs6IFtdaW50NjR7MSwgMiwgM30sPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICB9KTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUaGUgZXhlY3V0ZWQgcXVlcnkgd291bGQgYmU6PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICBTRUxFQ1QgMSBGUk9NIGV4YW1wbGUgV0hFUkUgaWQgSU4gKDpJRHMwLDpJRHMxLDpJRHMyKTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBXaXRoIHRoZSBtYXBwZXI6PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICBtYXBbc3RyaW5nXWludGVyZmFjZXt9ezwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgICAmIzM0O0lEcyYjMzQ7OiAgW11pbnQ2NHsxLCAyLCAzfSw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgJiMzNDtJRHMwJiMzNDs6IGludDY0KDEpLDwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgICAmIzM0O0lEczEmIzM0OzogaW50NjQoMiksPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICYjMzQ7SURzMiYjMzQ7OiBpbnQ2NCgzKSw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgIH08L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSXQgaXMgYWxzbyBmbGV4aWJsZSBmb3IgY3VzdG9tIHNsaWNlIHR5cGVzLiBUaGUgdmFsdWUganVzdCBuZWVkIHRvPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGltcGxlbWVudCBzdHJpbmdlciBvciBudW1iZXJlciBpbnRlcmZhY2VzLjwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgdHlwZSBDdXN0b21WYWx1ZSBzdHJpbmc8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgIGNvbnN0ICg8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgQ3VzdG9tVmFsdWVIZXkgQ3VzdG9tVmFsdWUgPSAmIzM0O2hleSYjMzQ7PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgIEN1c3RvbVZhbHVlT2ggIEN1c3RvbVZhbHVlID0gJiMzNDtvaCYjMzQ7PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICApPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICB0eXBlIEN1c3RvbVZhbHVlcyBbXUN1c3RvbVZhbHVlPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICBmdW5jIChjIEN1c3RvbVZhbHVlcykgVG9TdHJpbmdTbGljZSgpIFtdc3RyaW5nIHs8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgdmFsdWVzIDo9IG1ha2UoW11zdHJpbmcsIGxlbihjKSk8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgZm9yIGkgOj0gcmFuZ2UgYyB7PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICAgdmFsdWVzW2ldID0gc3RyaW5nKGNbaV0pPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgIH08L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgcmV0dXJuIHZhbHVlczwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgfTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyAgICAgZnVuYyBxdWVyeSgpIHs8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgLy8gLi4uPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgIHJlc3VsdCwgZXJyIDo9IGRibWFwLlNlbGVjdCgmYW1wO291dHB1dCwgJiMzNDtTRUxFQ1QgMSBGUk9NIGV4YW1wbGUgV0hFUkUgdmFsdWUgSU4gKDpWYWx1ZXMpJiMzNDssIG1hcFtzdHJpbmddaW50ZXJmYWNle317PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICAgICAgJiMzNDtWYWx1ZXMmIzM0OzogQ3VzdG9tVmFsdWVzKFtdQ3VzdG9tVmFsdWV7Q3VzdG9tVmFsdWVIZXl9KSw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgfSk8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gICAgICAgLy8gLi4uPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vICAgICB9PC9zcGFuPgoJRXhwYW5kU2xpY2VBcmdzIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkRiTWFwIGlzIHRoZSByb290IGdvcnAgbWFwcGluZyBvYmplY3QuIENyZWF0ZSBvbmUgb2YgdGhlc2UgZm9yIGVhY2gKZGF0YWJhc2Ugc2NoZW1hIHlvdSB3aXNoIHRvIG1hcC4gIEVhY2ggRGJNYXAgY29udGFpbnMgYSBsaXN0IG9mCm1hcHBlZCB0YWJsZXMuCjwvcD48cD5FeGFtcGxlOgo8L3A+PHByZT5kaWFsZWN0IDo9IGdvcnAuTXlTUUxEaWFsZWN0eyYjMzQ7SW5ub0RCJiMzNDssICYjMzQ7VVRGOCYjMzQ7fQpkYm1hcCA6PSAmYW1wO2dvcnAuRGJNYXB7RGI6IGRiLCBEaWFsZWN0OiBkaWFsZWN0fQo8L3ByZT4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkFkZFRhYmxlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0wyMTIiPkFkZFRhYmxlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5BZGRUYWJsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQWRkVGFibGUoaSBpbnRlcmZhY2V7fSkgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5BZGRUYWJsZSByZWdpc3RlcnMgdGhlIGdpdmVuIGludGVyZmFjZSB0eXBlIHdpdGggZ29ycC4gVGhlIHRhYmxlIG5hbWUKd2lsbCBiZSBnaXZlbiB0aGUgbmFtZSBvZiB0aGUgVHlwZU9mKGkpLiAgWW91IG11c3QgY2FsbCB0aGlzIGZ1bmN0aW9uLApvciBBZGRUYWJsZVdpdGhOYW1lLCBmb3IgYW55IHN0cnVjdCB0eXBlIHlvdSB3aXNoIHRvIHBlcnNpc3Qgd2l0aAp0aGUgZ2l2ZW4gRGJNYXAuCjwvcD48cD5UaGlzIG9wZXJhdGlvbiBpcyBpZGVtcG90ZW50LiBJZiBpJiMzOTtzIHR5cGUgaXMgYWxyZWFkeSBtYXBwZWQsIHRoZQpleGlzdGluZyAqVGFibGVNYXAgaXMgcmV0dXJuZWQKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkFkZFRhYmxlRHluYW1pYyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMMjU0Ij5BZGRUYWJsZUR5bmFtaWM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLkFkZFRhYmxlRHluYW1pYyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQWRkVGFibGVEeW5hbWljKGlucCA8YSBocmVmPSIjRHluYW1pY1RhYmxlIj5EeW5hbWljVGFibGU8L2E+LCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkFkZFRhYmxlRHluYW1pYyByZWdpc3RlcnMgdGhlIGdpdmVuIGludGVyZmFjZSB0eXBlIHdpdGggZ29ycC4KVGhlIHRhYmxlIG5hbWUgd2lsbCBiZSBkeW5hbWljYWxseSBkZXRlcm1pbmVkIGF0IHJ1bnRpbWUgYnkKdXNpbmcgdGhlIEdldFRhYmxlTmFtZSBtZXRob2Qgb24gRHluYW1pY1RhYmxlIGludGVyZmFjZQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuQWRkVGFibGVXaXRoTmFtZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMMjE4Ij5BZGRUYWJsZVdpdGhOYW1lPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5BZGRUYWJsZVdpdGhOYW1lIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBBZGRUYWJsZVdpdGhOYW1lKGkgaW50ZXJmYWNle30sIG5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkFkZFRhYmxlV2l0aE5hbWUgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIEFkZFRhYmxlLCBidXQgc2V0cwp0YWJsZS5UYWJsZU5hbWUgdG8gbmFtZS4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkFkZFRhYmxlV2l0aE5hbWVBbmRTY2hlbWEiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDIyNCI+QWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQWRkVGFibGVXaXRoTmFtZUFuZFNjaGVtYShpIGludGVyZmFjZXt9LCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBuYW1lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5BZGRUYWJsZVdpdGhOYW1lQW5kU2NoZW1hIGhhcyB0aGUgc2FtZSBiZWhhdmlvciBhcyBBZGRUYWJsZSwgYnV0IHNldHMKdGFibGUuVGFibGVOYW1lIHRvIG5hbWUuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5CZWdpbiIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNzM3Ij5CZWdpbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuQmVnaW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIEJlZ2luKCkgKCo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkJlZ2luIHN0YXJ0cyBhIGdvcnAgVHJhbnNhY3Rpb24KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkNyZWF0ZUluZGV4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0wxMjciPkNyZWF0ZUluZGV4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5DcmVhdGVJbmRleCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgQ3JlYXRlSW5kZXgoKSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5DcmVhdGVUYWJsZXMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDQyMSI+Q3JlYXRlVGFibGVzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5DcmVhdGVUYWJsZXMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIENyZWF0ZVRhYmxlcygpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkNyZWF0ZVRhYmxlcyBpdGVyYXRlcyB0aHJvdWdoIFRhYmxlTWFwcyByZWdpc3RlcmVkIHRvIHRoaXMgRGJNYXAgYW5kCmV4ZWN1dGVzICYjMzQ7Y3JlYXRlIHRhYmxlJiMzNDsgc3RhdGVtZW50cyBhZ2FpbnN0IHRoZSBkYXRhYmFzZSBmb3IgZWFjaC4KPC9wPjxwPlRoaXMgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBpbiB1bml0IHRlc3RzIHdoZXJlIHlvdSB3YW50IHRvIGNyZWF0ZQphbmQgZGVzdHJveSB0aGUgc2NoZW1hIGF1dG9tYXRpY2FsbHkuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5DcmVhdGVUYWJsZXNJZk5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNDI4Ij5DcmVhdGVUYWJsZXNJZk5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuQ3JlYXRlVGFibGVzSWZOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIENyZWF0ZVRhYmxlc0lmTm90RXhpc3RzKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+Q3JlYXRlVGFibGVzSWZOb3RFeGlzdHMgaXMgc2ltaWxhciB0byBDcmVhdGVUYWJsZXMsIGJ1dCBzdGFydHMKZWFjaCBzdGF0ZW1lbnQgd2l0aCAmIzM0O2NyZWF0ZSB0YWJsZSBpZiBub3QgZXhpc3RzJiMzNDsgc28gdGhhdCBleGlzdGluZwp0YWJsZXMgZG8gbm90IHJhaXNlIGVycm9ycwo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRGVsZXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w2MDkiPkRlbGV0ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRGVsZXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBEZWxldGUobGlzdCAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5EZWxldGUgcnVucyBhIFNRTCBERUxFVEUgc3RhdGVtZW50IGZvciBlYWNoIGVsZW1lbnQgaW4gbGlzdC4gIExpc3QKaXRlbXMgbXVzdCBiZSBwb2ludGVycy4KPC9wPjxwPlRoZSBob29rIGZ1bmN0aW9ucyBQcmVEZWxldGUoKSBhbmQvb3IgUG9zdERlbGV0ZSgpIHdpbGwgYmUgZXhlY3V0ZWQKYmVmb3JlL2FmdGVyIHRoZSBERUxFVEUgc3RhdGVtZW50IGlmIHRoZSBpbnRlcmZhY2UgZGVmaW5lcyB0aGVtLgo8L3A+PHA+UmV0dXJucyB0aGUgbnVtYmVyIG9mIHJvd3MgZGVsZXRlZC4KPC9wPjxwPlJldHVybnMgYW4gZXJyb3IgaWYgU2V0S2V5cyBoYXMgbm90IGJlZW4gY2FsbGVkIG9uIHRoZSBUYWJsZU1hcApQYW5pY3MgaWYgYW55IGludGVyZmFjZSBpbiB0aGUgbGlzdCBoYXMgbm90IGJlZW4gcmVnaXN0ZXJlZCB3aXRoIEFkZFRhYmxlCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5Ecm9wVGFibGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDQ1NiI+RHJvcFRhYmxlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5Ecm9wVGFibGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIERyb3BUYWJsZSh0YWJsZSBpbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+RHJvcFRhYmxlIGRyb3BzIGFuIGluZGl2aWR1YWwgdGFibGUuClJldHVybnMgYW4gZXJyb3Igd2hlbiB0aGUgdGFibGUgZG9lcyBub3QgZXhpc3QuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5Ecm9wVGFibGVJZkV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNDY4Ij5Ecm9wVGFibGVJZkV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHJvcFRhYmxlSWZFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIERyb3BUYWJsZUlmRXhpc3RzKHRhYmxlIGludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Ecm9wVGFibGVJZkV4aXN0cyBkcm9wcyBhbiBpbmRpdmlkdWFsIHRhYmxlIHdoZW4gdGhlIHRhYmxlIGV4aXN0cy4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkRyb3BUYWJsZXMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDQ4MSI+RHJvcFRhYmxlczwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHJvcFRhYmxlcyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgRHJvcFRhYmxlcygpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkRyb3BUYWJsZXMgaXRlcmF0ZXMgdGhyb3VnaCBUYWJsZU1hcHMgcmVnaXN0ZXJlZCB0byB0aGlzIERiTWFwIGFuZApleGVjdXRlcyAmIzM0O2Ryb3AgdGFibGUmIzM0OyBzdGF0ZW1lbnRzIGFnYWluc3QgdGhlIGRhdGFiYXNlIGZvciBlYWNoLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRHJvcFRhYmxlc0lmRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w0ODciPkRyb3BUYWJsZXNJZkV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHJvcFRhYmxlc0lmRXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBEcm9wVGFibGVzSWZFeGlzdHMoKSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Ecm9wVGFibGVzSWZFeGlzdHMgaXMgdGhlIHNhbWUgYXMgRHJvcFRhYmxlcywgYnV0IHVzZXMgdGhlICYjMzQ7aWYgZXhpc3RzJiMzNDsgY2xhdXNlIHRvCmF2b2lkIGVycm9ycyBmb3IgdGFibGVzIHRoYXQgZG8gbm90IGV4aXN0Lgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRHluYW1pY1RhYmxlRm9yIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w3NzUiPkR5bmFtaWNUYWJsZUZvcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuRHluYW1pY1RhYmxlRm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBEeW5hbWljVGFibGVGb3IodGFibGVOYW1lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY2hlY2tQSyA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgKCo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkR5bmFtaWNUYWJsZUZvciByZXR1cm5zIHRoZSAqVGFibGVNYXAgZm9yIHRoZSBkeW5hbWljIHRhYmxlIGNvcnJlc3BvbmRpbmcKdG8gdGhlIGlucHV0IHRhYmxlbmFtZQpJZiBubyB0YWJsZSBpcyBtYXBwZWQgdG8gdGhhdCB0YWJsZW5hbWUgYW4gZXJyb3IgaXMgcmV0dXJuZWQuCklmIGNoZWNrUEsgaXMgdHJ1ZSBhbmQgdGhlIG1hcHBlZCB0YWJsZSBoYXMgbm8gcmVnaXN0ZXJlZCBQS3MsIGFuIGVycm9yIGlzIHJldHVybmVkLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuRXhlYyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNjYxIj5FeGVjPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5FeGVjIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBFeGVjKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNSZXN1bHQiPlJlc3VsdDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5FeGVjIHJ1bnMgYW4gYXJiaXRyYXJ5IFNRTCBzdGF0ZW1lbnQuICBhcmdzIHJlcHJlc2VudCB0aGUgYmluZCBwYXJhbWV0ZXJzLgpUaGlzIGlzIGVxdWl2YWxlbnQgdG8gcnVubmluZzogIEV4ZWMoKSB1c2luZyBkYXRhYmFzZS9zcWwKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLkdldCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNjI4Ij5HZXQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLkdldCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgR2V0KGkgaW50ZXJmYWNle30sIGtleXMgLi4uaW50ZXJmYWNle30pIChpbnRlcmZhY2V7fSwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkdldCBydW5zIGEgU1FMIFNFTEVDVCB0byBmZXRjaCBhIHNpbmdsZSByb3cgZnJvbSB0aGUgdGFibGUgYmFzZWQgb24gdGhlCnByaW1hcnkga2V5KHMpCjwvcD48cD5pIHNob3VsZCBiZSBhbiBlbXB0eSB2YWx1ZSBmb3IgdGhlIHN0cnVjdCB0byBsb2FkLiAga2V5cyBzaG91bGQgYmUKdGhlIHByaW1hcnkga2V5IHZhbHVlKHMpIGZvciB0aGUgcm93IHRvIGxvYWQuICBJZiBtdWx0aXBsZSBrZXlzCmV4aXN0IG9uIHRoZSB0YWJsZSwgdGhlIG9yZGVyIHNob3VsZCBtYXRjaCB0aGUgY29sdW1uIG9yZGVyCnNwZWNpZmllZCBpbiBTZXRLZXlzKCkgd2hlbiB0aGUgdGFibGUgbWFwcGluZyB3YXMgZGVmaW5lZC4KPC9wPjxwPlRoZSBob29rIGZ1bmN0aW9uIFBvc3RHZXQoKSB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBTRUxFQ1QKc3RhdGVtZW50IGlmIHRoZSBpbnRlcmZhY2UgZGVmaW5lcyB0aGVtLgo8L3A+PHA+UmV0dXJucyBhIHBvaW50ZXIgdG8gYSBzdHJ1Y3QgdGhhdCBtYXRjaGVzIG9yIG5pbCBpZiBubyByb3cgaXMgZm91bmQuCjwvcD48cD5SZXR1cm5zIGFuIGVycm9yIGlmIFNldEtleXMgaGFzIG5vdCBiZWVuIGNhbGxlZCBvbiB0aGUgVGFibGVNYXAKUGFuaWNzIGlmIGFueSBpbnRlcmZhY2UgaW4gdGhlIGxpc3QgaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQgd2l0aCBBZGRUYWJsZQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w1NjUiPkluc2VydDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuSW5zZXJ0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBJbnNlcnQobGlzdCAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+SW5zZXJ0IHJ1bnMgYSBTUUwgSU5TRVJUIHN0YXRlbWVudCBmb3IgZWFjaCBlbGVtZW50IGluIGxpc3QuICBMaXN0Cml0ZW1zIG11c3QgYmUgcG9pbnRlcnMuCjwvcD48cD5BbnkgaW50ZXJmYWNlIHdob3NlIFRhYmxlTWFwIGhhcyBhbiBhdXRvLWluY3JlbWVudCBwcmltYXJ5IGtleSB3aWxsCmhhdmUgaXRzIGxhc3QgaW5zZXJ0IGlkIGJvdW5kIHRvIHRoZSBQSyBmaWVsZCBvbiB0aGUgc3RydWN0Lgo8L3A+PHA+VGhlIGhvb2sgZnVuY3Rpb25zIFByZUluc2VydCgpIGFuZC9vciBQb3N0SW5zZXJ0KCkgd2lsbCBiZSBleGVjdXRlZApiZWZvcmUvYWZ0ZXIgdGhlIElOU0VSVCBzdGF0ZW1lbnQgaWYgdGhlIGludGVyZmFjZSBkZWZpbmVzIHRoZW0uCjwvcD48cD5QYW5pY3MgaWYgYW55IGludGVyZmFjZSBpbiB0aGUgbGlzdCBoYXMgbm90IGJlZW4gcmVnaXN0ZXJlZCB3aXRoIEFkZFRhYmxlCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5QcmVwYXJlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w3OTMiPlByZXBhcmU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLlByZXBhcmUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFByZXBhcmUocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAoKjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNTdG10Ij5TdG10PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlByZXBhcmUgY3JlYXRlcyBhIHByZXBhcmVkIHN0YXRlbWVudCBmb3IgbGF0ZXIgcXVlcmllcyBvciBleGVjdXRpb25zLgpNdWx0aXBsZSBxdWVyaWVzIG9yIGV4ZWN1dGlvbnMgbWF5IGJlIHJ1biBjb25jdXJyZW50bHkgZnJvbSB0aGUgcmV0dXJuZWQgc3RhdGVtZW50LgpUaGlzIGlzIGVxdWl2YWxlbnQgdG8gcnVubmluZzogIFByZXBhcmUoKSB1c2luZyBkYXRhYmFzZS9zcWwKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlF1ZXJ5IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w4NTgiPlF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5RdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgUXVlcnkocSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI1Jvd3MiPlJvd3M8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuUXVlcnlSb3ciIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDg0NiI+UXVlcnlSb3c8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLlF1ZXJ5Um93Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBRdWVyeVJvdyhxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICo8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjUm93Ij5Sb3c8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3QiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDY1MSI+U2VsZWN0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3QiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdChpIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIChbXWludGVyZmFjZXt9LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0IHJ1bnMgYW4gYXJiaXRyYXJ5IFNRTCBxdWVyeSwgYmluZGluZyB0aGUgY29sdW1ucyBpbiB0aGUgcmVzdWx0CnRvIGZpZWxkcyBvbiB0aGUgc3RydWN0IHNwZWNpZmllZCBieSBpLiAgYXJncyByZXByZXNlbnQgdGhlIGJpbmQKcGFyYW1ldGVycyBmb3IgdGhlIFNRTCBzdGF0ZW1lbnQuCjwvcD48cD5Db2x1bW4gbmFtZXMgb24gdGhlIFNFTEVDVCBzdGF0ZW1lbnQgc2hvdWxkIGJlIGFsaWFzZWQgdG8gdGhlIGZpZWxkIG5hbWVzCm9uIHRoZSBzdHJ1Y3QgaS4gUmV0dXJucyBhbiBlcnJvciBpZiBvbmUgb3IgbW9yZSBjb2x1bW5zIGluIHRoZSByZXN1bHQKZG8gbm90IG1hdGNoLiAgSXQgaXMgT0sgaWYgZmllbGRzIG9uIGkgYXJlIG5vdCBwYXJ0IG9mIHRoZSBTUUwKc3RhdGVtZW50Lgo8L3A+PHA+VGhlIGhvb2sgZnVuY3Rpb24gUG9zdEdldCgpIHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIFNFTEVDVApzdGF0ZW1lbnQgaWYgdGhlIGludGVyZmFjZSBkZWZpbmVzIHRoZW0uCjwvcD48cD5WYWx1ZXMgYXJlIHJldHVybmVkIGluIG9uZSBvZiB0d28gd2F5czoKMS4gSWYgaSBpcyBhIHN0cnVjdCBvciBhIHBvaW50ZXIgdG8gYSBzdHJ1Y3QsIHJldHVybnMgYSBzbGljZSBvZiBwb2ludGVycyB0bwptYXRjaGluZyByb3dzIG9mIHR5cGUgaS4KMi4gSWYgaSBpcyBhIHBvaW50ZXIgdG8gYSBzbGljZSwgdGhlIHJlc3VsdHMgd2lsbCBiZSBhcHBlbmRlZCB0byB0aGF0IHNsaWNlCmFuZCBuaWwgcmV0dXJuZWQuCjwvcD48cD5pIGRvZXMgTk9UIG5lZWQgdG8gYmUgcmVnaXN0ZXJlZCB3aXRoIEFkZFRhYmxlKCkKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlNlbGVjdEZsb2F0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w2OTIiPlNlbGVjdEZsb2F0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RGbG9hdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgU2VsZWN0RmxvYXQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jZmxvYXQ2NCI+ZmxvYXQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3RGbG9hdCBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdEZsb2F0IGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3RJbnQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDY3NCI+U2VsZWN0SW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RJbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdEludChxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0SW50IGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0SW50IGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3ROdWxsRmxvYXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDcwMSI+U2VsZWN0TnVsbEZsb2F0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsRmxvYXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdE51bGxGbG9hdChxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjTnVsbEZsb2F0NjQiPk51bGxGbG9hdDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxGbG9hdCBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdE51bGxGbG9hdCBmdW5jdGlvbgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNjgzIj5TZWxlY3ROdWxsSW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsSW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBTZWxlY3ROdWxsSW50KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsSW50NjQiPk51bGxJbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3ROdWxsSW50IGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0TnVsbEludCBmdW5jdGlvbgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuU2VsZWN0TnVsbFN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNzE5Ij5TZWxlY3ROdWxsU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3ROdWxsU3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBTZWxlY3ROdWxsU3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsU3RyaW5nIj5OdWxsU3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxTdHIgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3ROdWxsU3RyIGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3RPbmUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDcyOCI+U2VsZWN0T25lPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RPbmUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdE9uZShob2xkZXIgaW50ZXJmYWNle30sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0T25lIGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0T25lIGZ1bmN0aW9uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5TZWxlY3RTdHIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKkRiTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28jTDcxMCI+U2VsZWN0U3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5TZWxlY3RTdHIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFNlbGVjdFN0cihxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3RTdHIgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3RTdHIgZnVuY3Rpb24KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlRhYmxlRm9yIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0w3NTYiPlRhYmxlRm9yPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5UYWJsZUZvciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgVGFibGVGb3IodCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIGNoZWNrUEsgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pICgqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5UYWJsZUZvciByZXR1cm5zIHRoZSAqVGFibGVNYXAgY29ycmVzcG9uZGluZyB0byB0aGUgZ2l2ZW4gR28gVHlwZQpJZiBubyB0YWJsZSBpcyBtYXBwZWQgdG8gdGhhdCB0eXBlIGFuIGVycm9yIGlzIHJldHVybmVkLgpJZiBjaGVja1BLIGlzIHRydWUgYW5kIHRoZSBtYXBwZWQgdGFibGUgaGFzIG5vIHJlZ2lzdGVyZWQgUEtzLCBhbiBlcnJvciBpcyByZXR1cm5lZC4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlRyYWNlT2ZmIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2xvZ2dpbmcuZ28jTDM5Ij5UcmFjZU9mZjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuVHJhY2VPZmYiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFRyYWNlT2ZmKCk8L3ByZT4KICAgIDwvZGl2PgogIDxwPlRyYWNlT2ZmIHR1cm5zIG9mZiB0cmFjaW5nLiBJdCBpcyBpZGVtcG90ZW50Lgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuVHJhY2VPbiIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9sb2dnaW5nLmdvI0wyOSI+VHJhY2VPbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuVHJhY2VPbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgVHJhY2VPbihwcmVmaXggPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBsb2dnZXIgPGEgaHJlZj0iI0xvZ2dlciI+TG9nZ2VyPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlRyYWNlT24gdHVybnMgb24gU1FMIHN0YXRlbWVudCBsb2dnaW5nIGZvciB0aGlzIERiTWFwLiAgQWZ0ZXIgdGhpcyBpcwpjYWxsZWQsIGFsbCBTUUwgc3RhdGVtZW50cyB3aWxsIGJlIHNlbnQgdG8gdGhlIGxvZ2dlci4gIElmIHByZWZpeCBpcwphIG5vbi1lbXB0eSBzdHJpbmcsIGl0IHdpbGwgYmUgd3JpdHRlbiB0byB0aGUgZnJvbnQgb2YgYWxsIGxvZ2dlZApzdHJpbmdzLCB3aGljaCBjYW4gYWlkIGluIGZpbHRlcmluZyBsb2cgbGluZXMuCjwvcD48cD5Vc2UgVHJhY2VPbiBpZiB5b3Ugd2FudCB0byBzcHkgb24gdGhlIFNRTCBzdGF0ZW1lbnRzIHRoYXQgZ29ycApnZW5lcmF0ZXMuCjwvcD48cD5Ob3RlIHRoYXQgdGhlIGJhc2UgbG9nLkxvZ2dlciB0eXBlIHNhdGlzZmllcyBMb2dnZXIsIGJ1dCBhZGFwdGVycyBjYW4KZWFzaWx5IGJlIHdyaXR0ZW4gZm9yIG90aGVyIGxvZ2dpbmcgcGFja2FnZXMgKGUuZy4sIHRoZSBnb2xhbmctc2FuY3Rpb25lZApnbG9nIGZyYW1ld29yaykuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJEYk1hcC5UcnVuY2F0ZVRhYmxlcyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNTM1Ij5UcnVuY2F0ZVRhYmxlczwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRGJNYXAuVHJ1bmNhdGVUYWJsZXMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAobSAqPGEgaHJlZj0iI0RiTWFwIj5EYk1hcDwvYT4pIFRydW5jYXRlVGFibGVzKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+VHJ1bmNhdGVUYWJsZXMgaXRlcmF0ZXMgdGhyb3VnaCBUYWJsZU1hcHMgcmVnaXN0ZXJlZCB0byB0aGlzIERiTWFwIGFuZApleGVjdXRlcyAmIzM0O3RydW5jYXRlIHRhYmxlJiMzNDsgc3RhdGVtZW50cyBhZ2FpbnN0IHRoZSBkYXRhYmFzZSBmb3IgZWFjaCwgb3IgaW4gdGhlIGNhc2Ugb2YKc3FsaXRlLCBhICYjMzQ7ZGVsZXRlIGZyb20mIzM0OyB3aXRoIG5vICYjMzQ7d2hlcmUmIzM0OyBjbGF1c2UsIHdoaWNoIHVzZXMgdGhlIHRydW5jYXRlIG9wdGltaXphdGlvbgooPGEgaHJlZj0iaHR0cDovL3d3dy5zcWxpdGUub3JnL2xhbmdfZGVsZXRlLmh0bWwiPmh0dHA6Ly93d3cuc3FsaXRlLm9yZy9sYW5nX2RlbGV0ZS5odG1sPC9hPikKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLlVwZGF0ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNTc5Ij5VcGRhdGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RiTWFwLlVwZGF0ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgVXBkYXRlKGxpc3QgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VXBkYXRlIHJ1bnMgYSBTUUwgVVBEQVRFIHN0YXRlbWVudCBmb3IgZWFjaCBlbGVtZW50IGluIGxpc3QuICBMaXN0Cml0ZW1zIG11c3QgYmUgcG9pbnRlcnMuCjwvcD48cD5UaGUgaG9vayBmdW5jdGlvbnMgUHJlVXBkYXRlKCkgYW5kL29yIFBvc3RVcGRhdGUoKSB3aWxsIGJlIGV4ZWN1dGVkCmJlZm9yZS9hZnRlciB0aGUgVVBEQVRFIHN0YXRlbWVudCBpZiB0aGUgaW50ZXJmYWNlIGRlZmluZXMgdGhlbS4KPC9wPjxwPlJldHVybnMgdGhlIG51bWJlciBvZiByb3dzIHVwZGF0ZWQuCjwvcD48cD5SZXR1cm5zIGFuIGVycm9yIGlmIFNldEtleXMgaGFzIG5vdCBiZWVuIGNhbGxlZCBvbiB0aGUgVGFibGVNYXAKUGFuaWNzIGlmIGFueSBpbnRlcmZhY2UgaW4gdGhlIGxpc3QgaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQgd2l0aCBBZGRUYWJsZQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGJNYXAuVXBkYXRlQ29sdW1ucyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqRGJNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMNTk1Ij5VcGRhdGVDb2x1bW5zPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5VcGRhdGVDb2x1bW5zIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKG0gKjxhIGhyZWY9IiNEYk1hcCI+RGJNYXA8L2E+KSBVcGRhdGVDb2x1bW5zKGZpbHRlciA8YSBocmVmPSIjQ29sdW1uRmlsdGVyIj5Db2x1bW5GaWx0ZXI8L2E+LCBsaXN0IC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlVwZGF0ZUNvbHVtbnMgcnVucyBhIFNRTCBVUERBVEUgc3RhdGVtZW50IGZvciBlYWNoIGVsZW1lbnQgaW4gbGlzdC4gIExpc3QKaXRlbXMgbXVzdCBiZSBwb2ludGVycy4KPC9wPjxwPk9ubHkgdGhlIGNvbHVtbnMgYWNjZXB0ZWQgYnkgZmlsdGVyIGFyZSBpbmNsdWRlZCBpbiB0aGUgVVBEQVRFLgo8L3A+PHA+VGhlIGhvb2sgZnVuY3Rpb25zIFByZVVwZGF0ZSgpIGFuZC9vciBQb3N0VXBkYXRlKCkgd2lsbCBiZSBleGVjdXRlZApiZWZvcmUvYWZ0ZXIgdGhlIFVQREFURSBzdGF0ZW1lbnQgaWYgdGhlIGludGVyZmFjZSBkZWZpbmVzIHRoZW0uCjwvcD48cD5SZXR1cm5zIHRoZSBudW1iZXIgb2Ygcm93cyB1cGRhdGVkLgo8L3A+PHA+UmV0dXJucyBhbiBlcnJvciBpZiBTZXRLZXlzIGhhcyBub3QgYmVlbiBjYWxsZWQgb24gdGhlIFRhYmxlTWFwClBhbmljcyBpZiBhbnkgaW50ZXJmYWNlIGluIHRoZSBsaXN0IGhhcyBub3QgYmVlbiByZWdpc3RlcmVkIHdpdGggQWRkVGFibGUKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkRiTWFwLldpdGhDb250ZXh0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpEYk1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RiLmdvI0wxMjAiPldpdGhDb250ZXh0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNEYk1hcC5XaXRoQ29udGV4dCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChtICo8YSBocmVmPSIjRGJNYXAiPkRiTWFwPC9hPikgV2l0aENvbnRleHQoY3R4IDxhIGhyZWY9Ii9jb250ZXh0Ij5jb250ZXh0PC9hPi48YSBocmVmPSIvY29udGV4dCNDb250ZXh0Ij5Db250ZXh0PC9hPikgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+CiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGlhbGVjdCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdC5nbyNMMTQiPkRpYWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RpYWxlY3QiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBEaWFsZWN0IGludGVyZmFjZSB7CjxzcGFuIGlkPSJEaWFsZWN0LlF1ZXJ5U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBhZGRzIGEgc3VmZml4IHRvIGFueSBxdWVyeSwgdXN1YWxseSAmIzM0OzsmIzM0Ozwvc3Bhbj4KPC9zcGFuPglRdWVyeVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKPHNwYW4gaWQ9IkRpYWxlY3QuVG9TcWxUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUb1NxbFR5cGUgcmV0dXJucyB0aGUgU1FMIGNvbHVtbiB0eXBlIHRvIHVzZSB3aGVuIGNyZWF0aW5nIGE8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHRhYmxlIG9mIHRoZSBnaXZlbiBHbyBUeXBlLiAgbWF4c2l6ZSBjYW4gYmUgdXNlZCB0byBzd2l0Y2ggYmFzZWQgb248L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gc2l6ZS4gIEZvciBleGFtcGxlLCBpbiBNeVNRTCBbXWJ5dGUgY291bGQgbWFwIHRvIEJMT0IsIE1FRElVTUJMT0IsPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIG9yIExPTkdCTE9CIGRlcGVuZGluZyBvbiB0aGUgbWF4c2l6ZTwvc3Bhbj4KCVRvU3FsVHlwZSh2YWwgPGEgaHJlZj0iL3JlZmxlY3QiPnJlZmxlY3Q8L2E+LjxhIGhyZWY9Ii9yZWZsZWN0I1R5cGUiPlR5cGU8L2E+LCBtYXhzaXplIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPiwgaXNBdXRvSW5jciA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gc3RyaW5nIHRvIGFwcGVuZCB0byBwcmltYXJ5IGtleSBjb2x1bW4gZGVmaW5pdGlvbnM8L3NwYW4+Cjwvc3Bhbj4JQXV0b0luY3JTdHIoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdHJpbmcgdG8gYmluZCBhdXRvaW5jcmVtZW50IGNvbHVtbnMgdG8uIEVtcHR5IHN0cmluZyB3aWxsPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyByZW1vdmUgcmVmZXJlbmNlIHRvIHRob3NlIGNvbHVtbnMgaW4gdGhlIElOU0VSVCBzdGF0ZW1lbnQuPC9zcGFuPgoJQXV0b0luY3JCaW5kVmFsdWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj4KPHNwYW4gaWQ9IkRpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHN0cmluZyB0byBhcHBlbmQgdG8gJiMzNDtjcmVhdGUgdGFibGUmIzM0OyBzdGF0ZW1lbnQgZm9yIHZlbmRvciBzcGVjaWZpYzwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdGFibGUgYXR0cmlidXRlczwvc3Bhbj4KCUNyZWF0ZVRhYmxlU3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gc3RyaW5nIHRvIGFwcGVuZCB0byAmIzM0O2NyZWF0ZSBpbmRleCYjMzQ7IHN0YXRlbWVudDwvc3Bhbj4KPC9zcGFuPglDcmVhdGVJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKPHNwYW4gaWQ9IkRpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdHJpbmcgdG8gYXBwZW5kIHRvICYjMzQ7ZHJvcCBpbmRleCYjMzQ7IHN0YXRlbWVudDwvc3Bhbj4KPC9zcGFuPglEcm9wSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdHJpbmcgdG8gdHJ1bmNhdGUgdGFibGVzPC9zcGFuPgo8L3NwYW4+CVRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5CaW5kVmFyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBiaW5kIHZhcmlhYmxlIHN0cmluZyB0byB1c2Ugd2hlbiBmb3JtaW5nIFNRTCBzdGF0ZW1lbnRzPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBpbiBtYW55IGRicyBpdCBpcyAmIzM0Oz8mIzM0OywgYnV0IFBvc3RncmVzIGFwcGVhcnMgdG8gdXNlICQxPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGkgaXMgYSB6ZXJvIGJhc2VkIGluZGV4IG9mIHRoZSBiaW5kIHZhcmlhYmxlIGluIHRoaXMgc3RhdGVtZW50PC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vPC9zcGFuPgoJQmluZFZhcihpIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iRGlhbGVjdC5RdW90ZUZpZWxkIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBIYW5kbGVzIHF1b3Rpbmcgb2YgYSBmaWVsZCBuYW1lIHRvIGVuc3VyZSB0aGF0IGl0IGRvZXNuJiMzOTt0IHJhaXNlIGFueTwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gU1FMIHBhcnNpbmcgZXhjZXB0aW9ucyBieSB1c2luZyBhIHJlc2VydmVkIHdvcmQgYXMgYSBmaWVsZCBuYW1lLjwvc3Bhbj4KCVF1b3RlRmllbGQoZmllbGQgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEhhbmRsZXMgYnVpbGRpbmcgdXAgb2YgYSBzY2hlbWEuZGF0YWJhc2Ugc3RyaW5nIHRoYXQgaXMgY29tcGF0aWJsZSB3aXRoPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyB0aGUgZ2l2ZW4gZGlhbGVjdDwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzY2hlbWEgLSBUaGUgc2NoZW1hIHRoYXQgJmx0O3RhYmxlJmd0OyBsaXZlcyBpbjwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyB0YWJsZSAtIFRoZSB0YWJsZSBuYW1lPC9zcGFuPgoJUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBFeGlzdGVuY2UgY2xhdXNlIGZvciB0YWJsZSBjcmVhdGlvbiAvIGRlbGV0aW9uPC9zcGFuPgo8c3BhbiBpZD0iRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiPglJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KPC9zcGFuPjxzcGFuIGlkPSJEaWFsZWN0LklmVGFibGVFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIj4JSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUlmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VGhlIERpYWxlY3QgaW50ZXJmYWNlIGVuY2Fwc3VsYXRlcyBiZWhhdmlvcnMgdGhhdCBkaWZmZXIgYWNyb3NzClNRTCBkYXRhYmFzZXMuICBBdCBwcmVzZW50IHRoZSBEaWFsZWN0IGlzIG9ubHkgdXNlZCBieSBDcmVhdGVUYWJsZXMoKQpidXQgdGhpcyBjb3VsZCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZQo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkR5bmFtaWNUYWJsZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMMTE0Ij5EeW5hbWljVGFibGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0R5bmFtaWNUYWJsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIER5bmFtaWNUYWJsZSBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iRHluYW1pY1RhYmxlLlRhYmxlTmFtZSIgZGF0YS1raW5kPSJtZXRob2QiPglUYWJsZU5hbWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KPC9zcGFuPjxzcGFuIGlkPSJEeW5hbWljVGFibGUuU2V0VGFibGVOYW1lIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNldFRhYmxlTmFtZSg8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pCjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5EeW5hbWljVGFibGUgYWxsb3dzIHRoZSB1c2VycyBvZiBnb3JwIHRvIGR5bmFtaWNhbGx5CnVzZSBkaWZmZXJlbnQgZGF0YWJhc2UgdGFibGUgbmFtZXMgZHVyaW5nIHJ1bnRpbWUKd2hpbGUgc2hhcmluZyB0aGUgc2FtZSBnb2xhbmcgc3RydWN0IGZvciBpbi1tZW1vcnkgZGF0YQo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkdvcnBMb2dnZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2xvZ2dpbmcuZ28jTDEwIj5Hb3JwTG9nZ2VyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNHb3JwTG9nZ2VyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgR29ycExvZ2dlciA9IDxhIGhyZWY9IiNMb2dnZXIiPkxvZ2dlcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkdvcnBMb2dnZXIgaXMgYSBkZXByZWNhdGVkIGFsaWFzIG9mIExvZ2dlci4KPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJIYXNQb3N0RGVsZXRlIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9ob29rcy5nbyNMMTUiPkhhc1Bvc3REZWxldGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0hhc1Bvc3REZWxldGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBIYXNQb3N0RGVsZXRlIGludGVyZmFjZSB7CjxzcGFuIGlkPSJIYXNQb3N0RGVsZXRlLlBvc3REZWxldGUiIGRhdGEta2luZD0ibWV0aG9kIj4JUG9zdERlbGV0ZSg8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+SGFzUG9zdERlbGV0ZSBwcm92aWRlcyBQb3N0RGVsZXRlKCkgd2hpY2ggd2lsbCBiZSBleGVjdXRlZCBhZnRlciB0aGUgREVMRVRFIHN0YXRlbWVudAo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ikhhc1Bvc3RHZXQiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2hvb2tzLmdvI0wxMCI+SGFzUG9zdEdldDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUG9zdEdldCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIEhhc1Bvc3RHZXQgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9Ikhhc1Bvc3RHZXQuUG9zdEdldCIgZGF0YS1raW5kPSJtZXRob2QiPglQb3N0R2V0KDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5IYXNQb3N0R2V0IHByb3ZpZGVzIFBvc3RHZXQoKSB3aGljaCB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBHRVQgc3RhdGVtZW50Lgo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ikhhc1Bvc3RJbnNlcnQiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2hvb2tzLmdvI0wyNSI+SGFzUG9zdEluc2VydDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUG9zdEluc2VydCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIEhhc1Bvc3RJbnNlcnQgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9Ikhhc1Bvc3RJbnNlcnQuUG9zdEluc2VydCIgZGF0YS1raW5kPSJtZXRob2QiPglQb3N0SW5zZXJ0KDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5IYXNQb3N0SW5zZXJ0IHByb3ZpZGVzIFBvc3RJbnNlcnQoKSB3aGljaCB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBJTlNFUlQgc3RhdGVtZW50CjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSGFzUG9zdFVwZGF0ZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvaG9va3MuZ28jTDIwIj5IYXNQb3N0VXBkYXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNIYXNQb3N0VXBkYXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSGFzUG9zdFVwZGF0ZSBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iSGFzUG9zdFVwZGF0ZS5Qb3N0VXBkYXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVBvc3RVcGRhdGUoPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkhhc1Bvc3RVcGRhdGUgcHJvdmlkZXMgUG9zdFVwZGF0ZSgpIHdoaWNoIHdpbGwgYmUgZXhlY3V0ZWQgYWZ0ZXIgdGhlIFVQREFURSBzdGF0ZW1lbnQKPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJIYXNQcmVEZWxldGUiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2hvb2tzLmdvI0wzMCI+SGFzUHJlRGVsZXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNIYXNQcmVEZWxldGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBIYXNQcmVEZWxldGUgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9Ikhhc1ByZURlbGV0ZS5QcmVEZWxldGUiIGRhdGEta2luZD0ibWV0aG9kIj4JUHJlRGVsZXRlKDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5IYXNQcmVEZWxldGUgcHJvdmlkZXMgUHJlRGVsZXRlKCkgd2hpY2ggd2lsbCBiZSBleGVjdXRlZCBiZWZvcmUgdGhlIERFTEVURSBzdGF0ZW1lbnQuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSGFzUHJlSW5zZXJ0IiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9ob29rcy5nbyNMNDAiPkhhc1ByZUluc2VydDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUHJlSW5zZXJ0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSGFzUHJlSW5zZXJ0IGludGVyZmFjZSB7CjxzcGFuIGlkPSJIYXNQcmVJbnNlcnQuUHJlSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVByZUluc2VydCg8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+SGFzUHJlSW5zZXJ0IHByb3ZpZGVzIFByZUluc2VydCgpIHdoaWNoIHdpbGwgYmUgZXhlY3V0ZWQgYmVmb3JlIElOU0VSVCBzdGF0ZW1lbnQuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSGFzUHJlVXBkYXRlIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9ob29rcy5nbyNMMzUiPkhhc1ByZVVwZGF0ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSGFzUHJlVXBkYXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSGFzUHJlVXBkYXRlIGludGVyZmFjZSB7CjxzcGFuIGlkPSJIYXNQcmVVcGRhdGUuUHJlVXBkYXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVByZVVwZGF0ZSg8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+SGFzUHJlVXBkYXRlIHByb3ZpZGVzIFByZVVwZGF0ZSgpIHdoaWNoIHdpbGwgYmUgZXhlY3V0ZWQgYmVmb3JlIFVQREFURSBzdGF0ZW1lbnQuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSW5kZXhNYXAiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2luZGV4LmdvI0wxMSI+SW5kZXhNYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0luZGV4TWFwIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSW5kZXhNYXAgc3RydWN0IHsKPHNwYW4gaWQ9IkluZGV4TWFwLkluZGV4TmFtZSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJbmRleCBuYW1lIGluIGRiIHRhYmxlPC9zcGFuPgo8L3NwYW4+CUluZGV4TmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KCjxzcGFuIGlkPSJJbmRleE1hcC5VbmlxdWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSWYgdHJ1ZSwgJiMzNDsgdW5pcXVlJiMzNDsgaXMgYWRkZWQgdG8gY3JlYXRlIGluZGV4IHN0YXRlbWVudHMuPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOb3QgdXNlZCBlbHNld2hlcmU8L3NwYW4+CglVbmlxdWUgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KCjxzcGFuIGlkPSJJbmRleE1hcC5JbmRleFR5cGUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSW5kZXggdHlwZSBzdXBwb3J0ZWQgYnkgRGlhbGVjdDwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gUG9zdGdyZXM6ICBCLXRyZWUsIEhhc2gsIEdpU1QgYW5kIEdJTi48L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gTXlzcWw6IEJ0cmVlLCBIYXNoLjwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBTcWxpdGU6IG5pbC48L3NwYW4+CglJbmRleFR5cGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkluZGV4TWFwIHJlcHJlc2VudHMgYSBtYXBwaW5nIGJldHdlZW4gYSBHbyBzdHJ1Y3QgZmllbGQgYW5kIGEgc2luZ2xlCmluZGV4IGluIGEgdGFibGUuClVuaXF1ZSBhbmQgTWF4U2l6ZSBvbmx5IGluZm9ybSB0aGUKQ3JlYXRlVGFibGVzKCkgZnVuY3Rpb24gYW5kIGFyZSBub3QgdXNlZCBieSBJbnNlcnQvVXBkYXRlL0RlbGV0ZS9HZXQuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkluZGV4TWFwLlJlbmFtZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqSW5kZXhNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9pbmRleC5nbyNMMzMiPlJlbmFtZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSW5kZXhNYXAuUmVuYW1lIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGlkeCAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT4pIFJlbmFtZShpbmRuYW1lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNJbmRleE1hcCI+SW5kZXhNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZW5hbWUgYWxsb3dzIHlvdSB0byBzcGVjaWZ5IHRoZSBpbmRleCBuYW1lIGluIHRoZSB0YWJsZQo8L3A+PHA+RXhhbXBsZTogIHRhYmxlLkluZE1hcCgmIzM0O2N1c3RvbWVyX3Rlc3RfaWR4JiMzNDspLlJlbmFtZSgmIzM0O2N1c3RvbWVyX2lkeCYjMzQ7KQo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iSW5kZXhNYXAuU2V0SW5kZXhUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpJbmRleE1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2luZGV4LmdvI0w0NiI+U2V0SW5kZXhUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNJbmRleE1hcC5TZXRJbmRleFR5cGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoaWR4ICo8YSBocmVmPSIjSW5kZXhNYXAiPkluZGV4TWFwPC9hPikgU2V0SW5kZXhUeXBlKGluZHR5cGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNldEluZGV4VHlwZSBzcGVjaWZpZXMgdGhlIGluZGV4IHR5cGUgc3VwcG9ydGVkIGJ5IGNob3VzZW4gU1FMIERpYWxlY3QKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkluZGV4TWFwLlNldFVuaXF1ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqSW5kZXhNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9pbmRleC5nbyNMNDAiPlNldFVuaXF1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjSW5kZXhNYXAuU2V0VW5pcXVlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGlkeCAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT4pIFNldFVuaXF1ZShiIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSAqPGEgaHJlZj0iI0luZGV4TWFwIj5JbmRleE1hcDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNldFVuaXF1ZSBhZGRzICYjMzQ7dW5pcXVlJiMzNDsgdG8gdGhlIGNyZWF0ZSBpbmRleCBzdGF0ZW1lbnRzIGZvciB0aGlzCmluZGV4LCBpZiBiIGlzIHRydWUuCjwvcD4KCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkludGVnZXJBdXRvSW5jckluc2VydGVyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0LmdvI0w3NCI+SW50ZWdlckF1dG9JbmNySW5zZXJ0ZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0ludGVnZXJBdXRvSW5jckluc2VydGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSW50ZWdlckF1dG9JbmNySW5zZXJ0ZXIgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IkludGVnZXJBdXRvSW5jckluc2VydGVyLkluc2VydEF1dG9JbmNyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUluc2VydEF1dG9JbmNyKGV4ZWMgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIGluc2VydFNxbCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5JbnRlZ2VyQXV0b0luY3JJbnNlcnRlciBpcyBpbXBsZW1lbnRlZCBieSBkaWFsZWN0cyB0aGF0IGNhbiBwZXJmb3JtCmluc2VydHMgd2l0aCBhdXRvbWF0aWNhbGx5IGluY3JlbWVudGVkIGludGVnZXIgcHJpbWFyeSBrZXlzLiAgSWYKdGhlIGRpYWxlY3QgY2FuIGhhbmRsZSBhdXRvbWF0aWMgYXNzaWdubWVudCBvZiBtb3JlIHRoYW4ganVzdAppbnRlZ2Vycywgc2VlIFRhcmdldGVkQXV0b0luY3JJbnNlcnRlci4KPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJMb2dnZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2xvZ2dpbmcuZ28jTDE0Ij5Mb2dnZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0xvZ2dlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4wLjQ8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIExvZ2dlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iTG9nZ2VyLlByaW50ZiIgZGF0YS1raW5kPSJtZXRob2QiPglQcmludGYoZm9ybWF0IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdiAuLi5pbnRlcmZhY2V7fSkKPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkxvZ2dlciBpcyB0aGUgdHlwZSB0aGF0IGdvcnAgdXNlcyB0byBsb2cgU1FMIHN0YXRlbWVudHMuClNlZSBEYk1hcC5UcmFjZU9uLgo8L3A+CgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTUiPk15U1FMRGlhbGVjdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgTXlTUUxEaWFsZWN0IHN0cnVjdCB7Cgo8c3BhbiBpZD0iTXlTUUxEaWFsZWN0LkVuZ2luZSIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBFbmdpbmUgaXMgdGhlIHN0b3JhZ2UgZW5naW5lIHRvIHVzZSAmIzM0O0lubm9EQiYjMzQ7IHZzICYjMzQ7TXlJU0FNJiMzNDsgZm9yIGV4YW1wbGU8L3NwYW4+Cjwvc3Bhbj4JRW5naW5lIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgoKPHNwYW4gaWQ9Ik15U1FMRGlhbGVjdC5FbmNvZGluZyIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBFbmNvZGluZyBpcyB0aGUgY2hhcmFjdGVyIGVuY29kaW5nIHRvIHVzZSBmb3IgY3JlYXRlZCB0YWJsZXM8L3NwYW4+Cjwvc3Bhbj4JRW5jb2RpbmcgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPkltcGxlbWVudGF0aW9uIG9mIERpYWxlY3QgZm9yIE15U1FMIGRhdGFiYXNlcy4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDkzIj5BdXRvSW5jckJpbmRWYWx1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgQXV0b0luY3JCaW5kVmFsdWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0w5NyI+QXV0b0luY3JJbnNlcnRTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuQXV0b0luY3JTdHIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMODkiPkF1dG9JbmNyU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuQXV0b0luY3JTdHIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjTXlTUUxEaWFsZWN0Ij5NeVNRTERpYWxlY3Q8L2E+KSBBdXRvSW5jclN0cigpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBhdXRvX2luY3JlbWVudAo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTM5Ij5CaW5kVmFyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIEJpbmRWYXIoaSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyAmIzM0Oz8mIzM0Owo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LkNyZWF0ZUluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDEyMiI+Q3JlYXRlSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIENyZWF0ZUluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTAyIj5DcmVhdGVUYWJsZVN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgQ3JlYXRlVGFibGVTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgZW5naW5lPSVzIGNoYXJzZXQ9JXMgIGJhc2VkIG9uIHZhbHVlcyBzdG9yZWQgb24gc3RydWN0CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDEyNiI+RHJvcEluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuRHJvcEluZGV4U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgRHJvcEluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTU5Ij5JZlNjaGVtYU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSWZUYWJsZUV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNjMiPklmVGFibGVFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5JZlRhYmxlRXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNjciPklmVGFibGVOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuSW5zZXJ0QXV0b0luY3IiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoTXlTUUxEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyNMMTQzIj5JbnNlcnRBdXRvSW5jcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTXlTUUxEaWFsZWN0Lkluc2VydEF1dG9JbmNyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgSW5zZXJ0QXV0b0luY3IoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdC5RdWVyeVN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wyNCI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5RdWVyeVN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuUXVvdGVGaWVsZCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNDciPlF1b3RlRmllbGQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZUZpZWxkIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgUXVvdGVGaWVsZChmIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNeVNRTERpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxNTEiPlF1b3RlZFRhYmxlRm9yUXVlcnk8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LlNsZWVwQ2xhdXNlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE15U1FMRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfbXlzcWwuZ28jTDEzNCI+U2xlZXBDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI015U1FMRGlhbGVjdC5TbGVlcENsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNNeVNRTERpYWxlY3QiPk15U1FMRGlhbGVjdDwvYT4pIFNsZWVwQ2xhdXNlKHMgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTXlTUUxEaWFsZWN0LlRvU3FsVHlwZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wyNiI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuVG9TcWxUeXBlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI015U1FMRGlhbGVjdCI+TXlTUUxEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik15U1FMRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChNeVNRTERpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X215c3FsLmdvI0wxMzAiPlRydW5jYXRlQ2xhdXNlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNeVNRTERpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjTXlTUUxEaWFsZWN0Ij5NeVNRTERpYWxlY3Q8L2E+KSBUcnVuY2F0ZUNsYXVzZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJOb0ZpZWxkSW5UeXBlRXJyb3IiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2Vycm9ycy5nbyNMMTQiPk5vRmllbGRJblR5cGVFcnJvcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgTm9GaWVsZEluVHlwZUVycm9yIHN0cnVjdCB7CjxzcGFuIGlkPSJOb0ZpZWxkSW5UeXBlRXJyb3IuVHlwZU5hbWUiIGRhdGEta2luZD0iZmllbGQiPglUeXBlTmFtZSAgICAgICAgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iTm9GaWVsZEluVHlwZUVycm9yLk1pc3NpbmdDb2xOYW1lcyIgZGF0YS1raW5kPSJmaWVsZCI+CU1pc3NpbmdDb2xOYW1lcyBbXTxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+QSBub24tZmF0YWwgZXJyb3IsIHdoZW4gYSBzZWxlY3QgcXVlcnkgcmV0dXJucyBjb2x1bW5zIHRoYXQgZG8gbm90IGV4aXN0CmFzIGZpZWxkcyBpbiB0aGUgc3RydWN0IGl0IGlzIGJlaW5nIG1hcHBlZCB0bwpUT0RPOiBkaXNjdXNzIHdldGhlciB0aGlzIG5lZWRzIGFuIGVycm9yLiBlbmNvZGluZy9qc29uIHNpbGVudGx5IGlnbm9yZXMgbWlzc2luZyBmaWVsZHMKPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpOb0ZpZWxkSW5UeXBlRXJyb3IpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9lcnJvcnMuZ28jTDE5Ij5FcnJvcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTm9GaWVsZEluVHlwZUVycm9yLkVycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGVyciAqPGEgaHJlZj0iI05vRmllbGRJblR5cGVFcnJvciI+Tm9GaWVsZEluVHlwZUVycm9yPC9hPikgRXJyb3IoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+CiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTnVsbFRpbWUiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL251bGx0eXBlcy5nbyNMMTQiPk51bGxUaW1lPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOdWxsVGltZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIE51bGxUaW1lIHN0cnVjdCB7CjxzcGFuIGlkPSJOdWxsVGltZS5UaW1lIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVGltZSAgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI1RpbWUiPlRpbWU8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iTnVsbFRpbWUuVmFsaWQiIGRhdGEta2luZD0iZmllbGQiPglWYWxpZCA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPiA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVmFsaWQgaXMgdHJ1ZSBpZiBUaW1lIGlzIG5vdCBOVUxMPC9zcGFuPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+QSBudWxsYWJsZSBUaW1lIHZhbHVlCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik51bGxUaW1lLlNjYW4iIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKk51bGxUaW1lKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbnVsbHR5cGVzLmdvI0wyMCI+U2NhbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTnVsbFRpbWUuU2NhbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChudCAqPGEgaHJlZj0iI051bGxUaW1lIj5OdWxsVGltZTwvYT4pIFNjYW4odmFsdWUgaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNjYW4gaW1wbGVtZW50cyB0aGUgU2Nhbm5lciBpbnRlcmZhY2UuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJOdWxsVGltZS5WYWx1ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChOdWxsVGltZSkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL251bGx0eXBlcy5nbyNMNjAiPlZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOdWxsVGltZS5WYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChudCA8YSBocmVmPSIjTnVsbFRpbWUiPk51bGxUaW1lPC9hPikgVmFsdWUoKSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIiPmRyaXZlcjwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIjVmFsdWUiPlZhbHVlPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlZhbHVlIGltcGxlbWVudHMgdGhlIGRyaXZlciBWYWx1ZXIgaW50ZXJmYWNlLgo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcHRpbWlzdGljTG9ja0Vycm9yIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9sb2NrZXJyb3IuZ28jTDE1Ij5PcHRpbWlzdGljTG9ja0Vycm9yPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcHRpbWlzdGljTG9ja0Vycm9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgT3B0aW1pc3RpY0xvY2tFcnJvciBzdHJ1Y3Qgewo8c3BhbiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5UYWJsZU5hbWUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVGFibGUgbmFtZSB3aGVyZSB0aGUgbG9jayBlcnJvciBvY2N1cnJlZDwvc3Bhbj4KPC9zcGFuPglUYWJsZU5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cgo8c3BhbiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5LZXlzIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIFByaW1hcnkga2V5IHZhbHVlcyBvZiB0aGUgcm93IGJlaW5nIHVwZGF0ZWQvZGVsZXRlZDwvc3Bhbj4KPC9zcGFuPglLZXlzIFtdaW50ZXJmYWNle30KCjxzcGFuIGlkPSJPcHRpbWlzdGljTG9ja0Vycm9yLlJvd0V4aXN0cyIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyB0cnVlIGlmIGEgcm93IHdhcyBmb3VuZCB3aXRoIHRob3NlIGtleXMsIGluZGljYXRpbmcgdGhlPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBMb2NhbFZlcnNpb24gaXMgc3RhbGUuICBmYWxzZSBpZiBubyB2YWx1ZSB3YXMgZm91bmQgd2l0aCB0aG9zZTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBrZXlzLCBzdWdnZXN0aW5nIHRoZSByb3cgaGFzIGJlZW4gZGVsZXRlZCBzaW5jZSBsb2FkZWQsIG9yPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHdhcyBuZXZlciBpbnNlcnRlZCB0byBiZWdpbiB3aXRoPC9zcGFuPgoJUm93RXhpc3RzIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cgo8c3BhbiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5Mb2NhbFZlcnNpb24iIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVmVyc2lvbiB2YWx1ZSBvbiB0aGUgc3RydWN0IHBhc3NlZCB0byBVcGRhdGUvRGVsZXRlLiBUaGlzIHZhbHVlIGlzPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBvdXQgb2Ygc3luYyB3aXRoIHRoZSBkYXRhYmFzZS48L3NwYW4+CglMb2NhbFZlcnNpb24gPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5PcHRpbWlzdGljTG9ja0Vycm9yIGlzIHJldHVybmVkIGJ5IFVwZGF0ZSgpIG9yIERlbGV0ZSgpIGlmIHRoZQpzdHJ1Y3QgYmVpbmcgbW9kaWZpZWQgaGFzIGEgVmVyc2lvbiBmaWVsZCBhbmQgdGhlIHZhbHVlIGlzIG5vdCBlcXVhbCB0bwp0aGUgY3VycmVudCB2YWx1ZSBpbiB0aGUgZGF0YWJhc2UKPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3B0aW1pc3RpY0xvY2tFcnJvci5FcnJvciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChPcHRpbWlzdGljTG9ja0Vycm9yKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbG9ja2Vycm9yLmdvI0wzNCI+RXJyb3I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09wdGltaXN0aWNMb2NrRXJyb3IuRXJyb3IiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZSA8YSBocmVmPSIjT3B0aW1pc3RpY0xvY2tFcnJvciI+T3B0aW1pc3RpY0xvY2tFcnJvcjwvYT4pIEVycm9yKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5FcnJvciByZXR1cm5zIGEgZGVzY3JpcHRpb24gb2YgdGhlIGNhdXNlIG9mIHRoZSBsb2NrIGVycm9yCjwvcD4KCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxNCI+T3JhY2xlRGlhbGVjdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIE9yYWNsZURpYWxlY3Qgc3RydWN0e308L3ByZT4KICAgIDwvZGl2PgogIDxwPkltcGxlbWVudGF0aW9uIG9mIERpYWxlY3QgZm9yIE9yYWNsZSBkYXRhYmFzZXMuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w3MiI+QXV0b0luY3JCaW5kVmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIEF1dG9JbmNyQmluZFZhbHVlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE9yYWNsZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X29yYWNsZS5nbyNMNzYiPkF1dG9JbmNySW5zZXJ0U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPk9yYWNsZURpYWxlY3Q8L2E+KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChPcmFjbGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9vcmFjbGUuZ28jTDY4Ij5BdXRvSW5jclN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5BdXRvSW5jclN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgQXV0b0luY3JTdHIoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgZW1wdHkgc3RyaW5nCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w5MCI+QmluZFZhcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5CaW5kVmFyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPk9yYWNsZURpYWxlY3Q8L2E+KSBCaW5kVmFyKGkgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgJiMzNDskKGkrMSkmIzM0Owo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChPcmFjbGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9vcmFjbGUuZ28jTDE4Ij5DcmVhdGVJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgQ3JlYXRlSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w4MSI+Q3JlYXRlVGFibGVTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIENyZWF0ZVRhYmxlU3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zIHN1ZmZpeAo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wyMCI+RHJvcEluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgRHJvcEluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKE9yYWNsZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X29yYWNsZS5nbyNMMTI5Ij5JZlNjaGVtYU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LklmVGFibGVFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMzMiPklmVGFibGVFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZUV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMzciPklmVGFibGVOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0Lkluc2VydFF1ZXJ5VG9UYXJnZXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w5NSI+SW5zZXJ0UXVlcnlUb1RhcmdldDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlRGlhbGVjdC5JbnNlcnRRdWVyeVRvVGFyZ2V0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI09yYWNsZURpYWxlY3QiPk9yYWNsZURpYWxlY3Q8L2E+KSBJbnNlcnRRdWVyeVRvVGFyZ2V0KGV4ZWMgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIGluc2VydFNxbCwgaWRTcWwgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+QWZ0ZXIgZXhlY3V0aW5nIHRoZSBpbnNlcnQgdXNlcyB0aGUgQ29sTWFwIElkUXVlcnkgdG8gZ2V0IHRoZSBnZW5lcmF0ZWQgaWQKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxNiI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMTciPlF1b3RlRmllbGQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVGaWVsZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgUXVvdGVGaWVsZChmIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wxMjEiPlF1b3RlZFRhYmxlRm9yUXVlcnk8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iT3JhY2xlRGlhbGVjdC5Ub1NxbFR5cGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0wyMiI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVEaWFsZWN0LlRvU3FsVHlwZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNPcmFjbGVEaWFsZWN0Ij5PcmFjbGVEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfb3JhY2xlLmdvI0w4NSI+VHJ1bmNhdGVDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI09yYWNsZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjT3JhY2xlRGlhbGVjdCI+T3JhY2xlRGlhbGVjdDwvYT4pIFRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZVN0cmluZyIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMMjAiPk9yYWNsZVN0cmluZzwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlU3RyaW5nIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgT3JhY2xlU3RyaW5nIHN0cnVjdCB7CjxzcGFuIGlkPSJPcmFjbGVTdHJpbmcuTnVsbFN0cmluZyIgZGF0YS1raW5kPSJmaWVsZCI+CTxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsU3RyaW5nIj5OdWxsU3RyaW5nPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPHA+T3JhY2xlU3RyaW5nIChlbXB0eSBzdHJpbmcgaXMgbnVsbCkKVE9ETzogbW92ZSB0byBkaWFsZWN0L29yYWNsZT8sIHJlbmFtZSB0byBTdHJpbmc/CjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik9yYWNsZVN0cmluZy5TY2FuIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpPcmFjbGVTdHJpbmcpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9nb3JwLmdvI0wyNSI+U2NhbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3JhY2xlU3RyaW5nLlNjYW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAob3MgKjxhIGhyZWY9IiNPcmFjbGVTdHJpbmciPk9yYWNsZVN0cmluZzwvYT4pIFNjYW4odmFsdWUgaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNjYW4gaW1wbGVtZW50cyB0aGUgU2Nhbm5lciBpbnRlcmZhY2UuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcmFjbGVTdHJpbmcuVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoT3JhY2xlU3RyaW5nKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMMzUiPlZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNPcmFjbGVTdHJpbmcuVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAob3MgPGEgaHJlZj0iI09yYWNsZVN0cmluZyI+T3JhY2xlU3RyaW5nPC9hPikgVmFsdWUoKSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIiPmRyaXZlcjwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbC9kcml2ZXIjVmFsdWUiPlZhbHVlPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlZhbHVlIGltcGxlbWVudHMgdGhlIGRyaXZlciBWYWx1ZXIgaW50ZXJmYWNlLgo8L3A+CgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDE0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFBvc3RncmVzRGlhbGVjdCBzdHJ1Y3Qgewo8c3BhbiBpZD0iUG9zdGdyZXNEaWFsZWN0Lkxvd2VyY2FzZUZpZWxkcyIgZGF0YS1raW5kPSJmaWVsZCI+CUxvd2VyY2FzZUZpZWxkcyA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBjb250YWlucyBmaWx0ZXJlZCBvciB1bmV4cG9ydGVkIGZpZWxkczwvc3Bhbj4KfTwvcHJlPgogICAgPC9kaXY+CiAgCjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMNzEiPkF1dG9JbmNyQmluZFZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBBdXRvSW5jckJpbmRWYWx1ZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDc1Ij5BdXRvSW5jckluc2VydFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+UG9zdGdyZXNEaWFsZWN0PC9hPikgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0w2NyI+QXV0b0luY3JTdHI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5BdXRvSW5jclN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIEF1dG9JbmNyU3RyKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zIGVtcHR5IHN0cmluZwo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTAxIj5CaW5kVmFyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIEJpbmRWYXIoaSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyAmIzM0OyQoaSsxKSYjMzQ7CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMODQiPkNyZWF0ZUluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBDcmVhdGVJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDgwIj5DcmVhdGVUYWJsZVN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+UG9zdGdyZXNEaWFsZWN0PC9hPikgQ3JlYXRlVGFibGVTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgc3VmZml4CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDg4Ij5Ecm9wSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBEcm9wSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0wxMzkiPklmU2NoZW1hTm90RXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJZlNjaGVtYU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDE0MyI+SWZUYWJsZUV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LklmVGFibGVFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJZlRhYmxlRXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDE0NyI+SWZUYWJsZU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJZlRhYmxlTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFBvc3RncmVzRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3RfcG9zdGdyZXMuZ28jTDEwNSI+SW5zZXJ0QXV0b0luY3JUb1RhcmdldDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0KGV4ZWMgPGEgaHJlZj0iI1NxbEV4ZWN1dG9yIj5TcWxFeGVjdXRvcjwvYT4sIGluc2VydFNxbCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIHRhcmdldCBpbnRlcmZhY2V7fSwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJQb3N0Z3Jlc0RpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTkiPlF1ZXJ5U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjUG9zdGdyZXNEaWFsZWN0Ij5Qb3N0Z3Jlc0RpYWxlY3Q8L2E+KSBRdWVyeVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTI0Ij5RdW90ZUZpZWxkPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVvdGVGaWVsZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFF1b3RlRmllbGQoZiA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoUG9zdGdyZXNEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyNMMTMxIj5RdW90ZWRUYWJsZUZvclF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5TbGVlcENsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0w5NiI+U2xlZXBDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5TbGVlcENsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFNsZWVwQ2xhdXNlKHMgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUG9zdGdyZXNEaWFsZWN0LlRvU3FsVHlwZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0wyMSI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QuVG9TcWxUeXBlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdCI+UG9zdGdyZXNEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlBvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChQb3N0Z3Jlc0RpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Bvc3RncmVzLmdvI0w5MiI+VHJ1bmNhdGVDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Bvc3RncmVzRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNQb3N0Z3Jlc0RpYWxlY3QiPlBvc3RncmVzRGlhbGVjdDwvYT4pIFRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMyI+U25vd2ZsYWtlRGlhbGVjdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNub3dmbGFrZURpYWxlY3Qgc3RydWN0IHsKPHNwYW4gaWQ9IlNub3dmbGFrZURpYWxlY3QuTG93ZXJjYXNlRmllbGRzIiBkYXRhLWtpbmQ9ImZpZWxkIj4JTG93ZXJjYXNlRmllbGRzIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICAKPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0w3OCI+QXV0b0luY3JCaW5kVmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQXV0b0luY3JCaW5kVmFsdWUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIEF1dG9JbmNyQmluZFZhbHVlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMODIiPkF1dG9JbmNySW5zZXJ0U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkF1dG9JbmNySW5zZXJ0U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYzLjEuMDwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QiPlNub3dmbGFrZURpYWxlY3Q8L2E+KSBBdXRvSW5jckluc2VydFN1ZmZpeChjb2wgKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jclN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTbm93Zmxha2VEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zbm93Zmxha2UuZ28jTDc0Ij5BdXRvSW5jclN0cjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5BdXRvSW5jclN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgQXV0b0luY3JTdHIoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgZW1wdHkgc3RyaW5nCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMDQiPkJpbmRWYXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgQmluZFZhcihpIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zICYjMzQ7JChpKzEpJiMzNDsKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0w5MSI+Q3JlYXRlSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIENyZWF0ZUluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMODciPkNyZWF0ZVRhYmxlU3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYzLjEuMDwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QiPlNub3dmbGFrZURpYWxlY3Q8L2E+KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBzdWZmaXgKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMOTUiPkRyb3BJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIERyb3BJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTbm93Zmxha2VEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zbm93Zmxha2UuZ28jTDE0MiI+SWZTY2hlbWFOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMMTQ2Ij5JZlRhYmxlRXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LklmVGFibGVFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMMTUwIj5JZlRhYmxlTm90RXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNub3dmbGFrZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3Nub3dmbGFrZS5nbyNMMTA4Ij5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Lkluc2VydEF1dG9JbmNyVG9UYXJnZXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIEluc2VydEF1dG9JbmNyVG9UYXJnZXQoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFyZ2V0IGludGVyZmFjZXt9LCBwYXJhbXMgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxOCI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMjciPlF1b3RlRmllbGQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVvdGVGaWVsZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgUXVvdGVGaWVsZChmIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTbm93Zmxha2VEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wxMzQiPlF1b3RlZFRhYmxlRm9yUXVlcnk8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgUXVvdGVkVGFibGVGb3JRdWVyeShzY2hlbWEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU25vd2ZsYWtlRGlhbGVjdC5Ub1NxbFR5cGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0wyMCI+VG9TcWxUeXBlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0LlRvU3FsVHlwZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52My4xLjA8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTbm93Zmxha2VEaWFsZWN0Ij5Tbm93Zmxha2VEaWFsZWN0PC9hPikgVG9TcWxUeXBlKHZhbCA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVHlwZSI+VHlwZTwvYT4sIG1heHNpemUgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+LCBpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNub3dmbGFrZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU25vd2ZsYWtlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc25vd2ZsYWtlLmdvI0w5OSI+VHJ1bmNhdGVDbGF1c2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1Nub3dmbGFrZURpYWxlY3QuVHJ1bmNhdGVDbGF1c2UiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbkxhYmVsIj5hZGRlZCBpbjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uVmVyc2lvbiI+djMuMS4wPC9zcGFuPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU25vd2ZsYWtlRGlhbGVjdCI+U25vd2ZsYWtlRGlhbGVjdDwvYT4pIFRydW5jYXRlQ2xhdXNlKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbEV4ZWN1dG9yIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9nb3JwLmdvI0w5MiI+U3FsRXhlY3V0b3I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbEV4ZWN1dG9yIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgU3FsRXhlY3V0b3IgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLldpdGhDb250ZXh0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVdpdGhDb250ZXh0KGN0eCA8YSBocmVmPSIvY29udGV4dCI+Y29udGV4dDwvYT4uPGEgaHJlZj0iL2NvbnRleHQjQ29udGV4dCI+Q29udGV4dDwvYT4pIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuR2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUdldChpIGludGVyZmFjZXt9LCBrZXlzIC4uLmludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CUluc2VydChsaXN0IC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuVXBkYXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVVwZGF0ZShsaXN0IC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5EZWxldGUiIGRhdGEta2luZD0ibWV0aG9kIj4JRGVsZXRlKGxpc3QgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLkV4ZWMiIGRhdGEta2luZD0ibWV0aG9kIj4JRXhlYyhxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjUmVzdWx0Ij5SZXN1bHQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLlNlbGVjdCIgZGF0YS1raW5kPSJtZXRob2QiPglTZWxlY3QoaSBpbnRlcmZhY2V7fSwgcXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoW11pbnRlcmZhY2V7fSwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5TZWxlY3RJbnQiIGRhdGEta2luZD0ibWV0aG9kIj4JU2VsZWN0SW50KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJtZXRob2QiPglTZWxlY3ROdWxsSW50KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsSW50NjQiPk51bGxJbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuU2VsZWN0RmxvYXQiIGRhdGEta2luZD0ibWV0aG9kIj4JU2VsZWN0RmxvYXQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jZmxvYXQ2NCI+ZmxvYXQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCjwvc3Bhbj48c3BhbiBpZD0iU3FsRXhlY3V0b3IuU2VsZWN0TnVsbEZsb2F0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNlbGVjdE51bGxGbG9hdChxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjTnVsbEZsb2F0NjQiPk51bGxGbG9hdDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5TZWxlY3RTdHIiIGRhdGEta2luZD0ibWV0aG9kIj4JU2VsZWN0U3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPikKPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5TZWxlY3ROdWxsU3RyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNlbGVjdE51bGxTdHIocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI051bGxTdHJpbmciPk51bGxTdHJpbmc8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLlNlbGVjdE9uZSIgZGF0YS1raW5kPSJtZXRob2QiPglTZWxlY3RPbmUoaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4KPC9zcGFuPjxzcGFuIGlkPSJTcWxFeGVjdXRvci5RdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiPglRdWVyeShxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI1Jvd3MiPlJvd3M8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+PHNwYW4gaWQ9IlNxbEV4ZWN1dG9yLlF1ZXJ5Um93IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVF1ZXJ5Um93KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNSb3ciPlJvdzwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlNxbEV4ZWN1dG9yIGV4cG9zZXMgZ29ycCBvcGVyYXRpb25zIHRoYXQgY2FuIGJlIHJ1biBmcm9tIFByZS9Qb3N0Cmhvb2tzLiAgVGhpcyBoaWRlcyB3aGV0aGVyIHRoZSBjdXJyZW50IG9wZXJhdGlvbiB0aGF0IHRyaWdnZXJlZCB0aGUKaG9vayBpcyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+PHA+U2VlIHRoZSBEYk1hcCBmdW5jdGlvbiBkb2NzIGZvciBlYWNoIG9mIHRoZSBmdW5jdGlvbnMgYmVsb3cgZm9yIG1vcmUKaW5mb3JtYXRpb24uCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdCIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28jTDE3Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgU3FsU2VydmVyRGlhbGVjdCBzdHJ1Y3QgewoKPHNwYW4gaWQ9IlNxbFNlcnZlckRpYWxlY3QuVmVyc2lvbiIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJZiBzZXQgdG8gJiMzNDsyMDA1JiMzNDsgbGVnYWN5IGRhdGF0eXBlcyB3aWxsIGJlIHVzZWQ8L3NwYW4+Cjwvc3Bhbj4JVmVyc2lvbiA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4KfTwvcHJlPgogICAgPC9kaXY+CiAgCjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMODUiPkF1dG9JbmNyQmluZFZhbHVlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkF1dG9JbmNyQmluZFZhbHVlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPlNxbFNlcnZlckRpYWxlY3Q8L2E+KSBBdXRvSW5jckJpbmRWYWx1ZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+RW1wdHkgc3RyaW5nIHJlbW92ZXMgYXV0b2luY3JlbWVudCBjb2x1bW5zIGZyb20gdGhlIElOU0VSVCBzdGF0ZW1lbnRzLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxTZXJ2ZXJEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28jTDg5Ij5BdXRvSW5jckluc2VydFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5BdXRvSW5jckluc2VydFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgQXV0b0luY3JJbnNlcnRTdWZmaXgoY29sICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JTdHIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0w4MCI+QXV0b0luY3JTdHI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQXV0b0luY3JTdHIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIEF1dG9JbmNyU3RyKCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zIGF1dG9faW5jcmVtZW50CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMDAiPkJpbmRWYXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQmluZFZhciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgQmluZFZhcihpIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5SZXR1cm5zICYjMzQ7PyYjMzQ7CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkNyZWF0ZUluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTQ0Ij5DcmVhdGVJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5DcmVhdGVJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgQ3JlYXRlSW5kZXhTdWZmaXgoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0w5MyI+Q3JlYXRlVGFibGVTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuQ3JlYXRlVGFibGVTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIENyZWF0ZVRhYmxlU3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxTZXJ2ZXJEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28jTDE0NSI+RHJvcEluZGV4U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LkRyb3BJbmRleFN1ZmZpeCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgRHJvcEluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LklmU2NoZW1hTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTIxIj5JZlNjaGVtYU5vdEV4aXN0czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSWZTY2hlbWFOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMjYiPklmVGFibGVFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSWZUYWJsZUV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSWZUYWJsZUV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMzUiPklmVGFibGVOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QuSWZUYWJsZU5vdEV4aXN0cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSWZUYWJsZU5vdEV4aXN0cyhjb21tYW5kLCBzY2hlbWEsIHRhYmxlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0Lkluc2VydEF1dG9JbmNyIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTA0Ij5JbnNlcnRBdXRvSW5jcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5JbnNlcnRBdXRvSW5jciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0Ij5TcWxTZXJ2ZXJEaWFsZWN0PC9hPikgSW5zZXJ0QXV0b0luY3IoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsU2VydmVyRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3Fsc2VydmVyLmdvI0wxMTkiPlF1ZXJ5U3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1ZXJ5U3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPlNxbFNlcnZlckRpYWxlY3Q8L2E+KSBRdWVyeVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdC5RdW90ZUZpZWxkIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTA4Ij5RdW90ZUZpZWxkPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1b3RlRmllbGQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIFF1b3RlRmllbGQoZiA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsU2VydmVyRGlhbGVjdC5RdW90ZWRUYWJsZUZvclF1ZXJ5IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMTEyIj5RdW90ZWRUYWJsZUZvclF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbFNlcnZlckRpYWxlY3QuVG9TcWxUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMMjMiPlRvU3FsVHlwZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsU2VydmVyRGlhbGVjdC5Ub1NxbFR5cGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsU2VydmVyRGlhbGVjdCI+U3FsU2VydmVyRGlhbGVjdDwvYT4pIFRvU3FsVHlwZSh2YWwgPGEgaHJlZj0iL3JlZmxlY3QiPnJlZmxlY3Q8L2E+LjxhIGhyZWY9Ii9yZWZsZWN0I1R5cGUiPlR5cGU8L2E+LCBtYXhzaXplIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPiwgaXNBdXRvSW5jciA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxTZXJ2ZXJEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbFNlcnZlckRpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbHNlcnZlci5nbyNMOTUiPlRydW5jYXRlQ2xhdXNlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxTZXJ2ZXJEaWFsZWN0LlRydW5jYXRlQ2xhdXNlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbFNlcnZlckRpYWxlY3QiPlNxbFNlcnZlckRpYWxlY3Q8L2E+KSBUcnVuY2F0ZUNsYXVzZSgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj4KICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxUeXBlciIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyNMNDYiPlNxbFR5cGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxUeXBlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNxbFR5cGVyIGludGVyZmFjZSB7CjxzcGFuIGlkPSJTcWxUeXBlci5TcWxUeXBlIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVNxbFR5cGUoKSA8YSBocmVmPSIvZGF0YWJhc2Uvc3FsL2RyaXZlciI+ZHJpdmVyPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsL2RyaXZlciNWYWx1ZSI+VmFsdWU8L2E+Cjwvc3Bhbj59PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TcWxUeXBlciBpcyBhIHR5cGUgdGhhdCByZXR1cm5zIGl0cyBkYXRhYmFzZSB0eXBlLiAgTW9zdCBvZiB0aGUKdGltZSwgdGhlIHR5cGUgY2FuIGp1c3QgdXNlICYjMzQ7ZGF0YWJhc2Uvc3FsL2RyaXZlciYjMzQ7LlZhbHVlcjsgYnV0IHdoZW4KaXQgcmV0dXJucyBuaWwgZm9yIGl0cyBlbXB0eSB2YWx1ZSwgaXQgbmVlZHMgdG8gaW1wbGVtZW50IFNxbFR5cGVyCnRvIGhhdmUgaXRzIGNvbHVtbiB0eXBlIGRldGVjdGVkIHByb3Blcmx5IGR1cmluZyB0YWJsZSBjcmVhdGlvbi4KPC9wPgoKICAKCiAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPgogICAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0IiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMMTIiPlNxbGl0ZURpYWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBTcWxpdGVEaWFsZWN0IHN0cnVjdCB7Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIAo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDU2Ij5BdXRvSW5jckJpbmRWYWx1ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5BdXRvSW5jckJpbmRWYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij5TcWxpdGVEaWFsZWN0PC9hPikgQXV0b0luY3JCaW5kVmFsdWUoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w2MCI+QXV0b0luY3JJbnNlcnRTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQXV0b0luY3JJbnNlcnRTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIEF1dG9JbmNySW5zZXJ0U3VmZml4KGNvbCAqPGEgaHJlZj0iI0NvbHVtbk1hcCI+Q29sdW1uTWFwPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LkF1dG9JbmNyU3RyIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMNTIiPkF1dG9JbmNyU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkF1dG9JbmNyU3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBBdXRvSW5jclN0cigpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBhdXRvaW5jcmVtZW50CjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LkJpbmRWYXIiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w4NSI+QmluZFZhcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5CaW5kVmFyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBCaW5kVmFyKGkgPGEgaHJlZj0iL2J1aWx0aW4jaW50Ij5pbnQ8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJldHVybnMgJiMzNDs/JiMzNDsKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w2OSI+Q3JlYXRlSW5kZXhTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuQ3JlYXRlSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIENyZWF0ZUluZGV4U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMNjUiPkNyZWF0ZVRhYmxlU3VmZml4PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LkNyZWF0ZVRhYmxlU3VmZml4Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBDcmVhdGVUYWJsZVN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmV0dXJucyBzdWZmaXgKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuRHJvcEluZGV4U3VmZml4IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMNzMiPkRyb3BJbmRleFN1ZmZpeDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5Ecm9wSW5kZXhTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIERyb3BJbmRleFN1ZmZpeCgpIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JZlNjaGVtYU5vdEV4aXN0cyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDEwMiI+SWZTY2hlbWFOb3RFeGlzdHM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuSWZTY2hlbWFOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIElmU2NoZW1hTm90RXhpc3RzKGNvbW1hbmQsIHNjaGVtYSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JZlRhYmxlRXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMMTA2Ij5JZlRhYmxlRXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LklmVGFibGVFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIElmVGFibGVFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JZlRhYmxlTm90RXhpc3RzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKFNxbGl0ZURpYWxlY3QpIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0X3NxbGl0ZS5nbyNMMTEwIj5JZlRhYmxlTm90RXhpc3RzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LklmVGFibGVOb3RFeGlzdHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIElmVGFibGVOb3RFeGlzdHMoY29tbWFuZCwgc2NoZW1hLCB0YWJsZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5JbnNlcnRBdXRvSW5jciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDg5Ij5JbnNlcnRBdXRvSW5jcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5JbnNlcnRBdXRvSW5jciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij5TcWxpdGVEaWFsZWN0PC9hPikgSW5zZXJ0QXV0b0luY3IoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuUXVlcnlTdWZmaXgiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0wxNiI+UXVlcnlTdWZmaXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuUXVlcnlTdWZmaXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIFF1ZXJ5U3VmZml4KCkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LlF1b3RlRmllbGQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoU3FsaXRlRGlhbGVjdCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3Rfc3FsaXRlLmdvI0w5MyI+UXVvdGVGaWVsZDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5RdW90ZUZpZWxkIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBRdW90ZUZpZWxkKGYgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlNxbGl0ZURpYWxlY3QuUXVvdGVkVGFibGVGb3JRdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDk4Ij5RdW90ZWRUYWJsZUZvclF1ZXJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNTcWxpdGVEaWFsZWN0LlF1b3RlZFRhYmxlRm9yUXVlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZCA8YSBocmVmPSIjU3FsaXRlRGlhbGVjdCI+U3FsaXRlRGlhbGVjdDwvYT4pIFF1b3RlZFRhYmxlRm9yUXVlcnkoc2NoZW1hIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgdGFibGUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPnNxbGl0ZSBkb2VzIG5vdCBoYXZlIHNjaGVtYXMgbGlrZSBQb3N0Z3JlU1FMIGRvZXMsIHNvIGp1c3QgZXNjYXBlIGl0IGxpa2Ugbm9ybWFsCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcWxpdGVEaWFsZWN0LlRvU3FsVHlwZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDE4Ij5Ub1NxbFR5cGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NxbGl0ZURpYWxlY3QuVG9TcWxUeXBlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGQgPGEgaHJlZj0iI1NxbGl0ZURpYWxlY3QiPlNxbGl0ZURpYWxlY3Q8L2E+KSBUb1NxbFR5cGUodmFsIDxhIGhyZWY9Ii9yZWZsZWN0Ij5yZWZsZWN0PC9hPi48YSBocmVmPSIvcmVmbGVjdCNUeXBlIj5UeXBlPC9hPiwgbWF4c2l6ZSA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT4sIGlzQXV0b0luY3IgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU3FsaXRlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIChTcWxpdGVEaWFsZWN0KSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28jTDgwIj5UcnVuY2F0ZUNsYXVzZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3FsaXRlRGlhbGVjdC5UcnVuY2F0ZUNsYXVzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChkIDxhIGhyZWY9IiNTcWxpdGVEaWFsZWN0Ij5TcWxpdGVEaWFsZWN0PC9hPikgVHJ1bmNhdGVDbGF1c2UoKSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPldpdGggc3FsaXRlLCB0aGVyZSB0ZWNobmljYWxseSBpc24mIzM5O3QgYSBUUlVOQ0FURSBzdGF0ZW1lbnQsCmJ1dCBhIERFTEVURSBGUk9NIHVzZXMgYSB0cnVuY2F0ZSBvcHRpbWl6YXRpb246CjxhIGhyZWY9Imh0dHA6Ly93d3cuc3FsaXRlLm9yZy9sYW5nX2RlbGV0ZS5odG1sIj5odHRwOi8vd3d3LnNxbGl0ZS5vcmcvbGFuZ19kZWxldGUuaHRtbDwvYT4KPC9wPgoKICAKCiAgPC9kaXY+CiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVGFibGVNYXAiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RhYmxlLmdvI0wxNiI+VGFibGVNYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RhYmxlTWFwIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVGFibGVNYXAgc3RydWN0IHsKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOYW1lIG9mIGRhdGFiYXNlIHRhYmxlLjwvc3Bhbj4KPHNwYW4gaWQ9IlRhYmxlTWFwLlRhYmxlTmFtZSIgZGF0YS1raW5kPSJmaWVsZCI+CVRhYmxlTmFtZSAgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iVGFibGVNYXAuU2NoZW1hTmFtZSIgZGF0YS1raW5kPSJmaWVsZCI+CVNjaGVtYU5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+Cjwvc3Bhbj4KPHNwYW4gaWQ9IlRhYmxlTWFwLkNvbHVtbnMiIGRhdGEta2luZD0iZmllbGQiPglDb2x1bW5zIFtdKjxhIGhyZWY9IiNDb2x1bW5NYXAiPkNvbHVtbk1hcDwvYT4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlRhYmxlTWFwIHJlcHJlc2VudHMgYSBtYXBwaW5nIGJldHdlZW4gYSBHbyBzdHJ1Y3QgYW5kIGEgZGF0YWJhc2UgdGFibGUKVXNlIGRibWFwLkFkZFRhYmxlKCkgb3IgZGJtYXAuQWRkVGFibGVXaXRoTmFtZSgpIHRvIGNyZWF0ZSB0aGVzZQo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5BZGRJbmRleCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVGFibGVNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90YWJsZS5nbyNMMTM5Ij5BZGRJbmRleDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVGFibGVNYXAuQWRkSW5kZXgiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIEFkZEluZGV4KG5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBpZHh0eXBlIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY29sdW1ucyBbXTxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNJbmRleE1hcCI+SW5kZXhNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5BZGRJbmRleCByZWdpc3RlcnMgdGhlIGluZGV4IHdpdGggZ29ycCBmb3Igc3BlY2lmaWVkIHRhYmxlIHdpdGggZ2l2ZW4gcGFyYW1ldGVycy4KVGhpcyBvcGVyYXRpb24gaXMgaWRlbXBvdGVudC4gSWYgaW5kZXggaXMgYWxyZWFkeSBtYXBwZWQsIHRoZQpleGlzdGluZyAqSW5kZXhNYXAgaXMgcmV0dXJuZWQKRnVuY3Rpb24gd2lsbCBwYW5pYyBpZiBvbmUgb2YgdGhlIGdpdmVuIGZvciBpbmRleCBjb2x1bW5zIGRvZXMgbm90IGV4aXN0cwo8L3A+PHA+QXV0b21hdGljYWxseSBjYWxscyBSZXNldFNxbCgpIHRvIGVuc3VyZSBTUUwgc3RhdGVtZW50cyBhcmUgcmVnZW5lcmF0ZWQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5Db2xNYXAiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDEwMiI+Q29sTWFwPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5Db2xNYXAiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIENvbE1hcChmaWVsZCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Db2xNYXAgcmV0dXJucyB0aGUgQ29sdW1uTWFwIHBvaW50ZXIgbWF0Y2hpbmcgdGhlIGdpdmVuIHN0cnVjdCBmaWVsZApuYW1lLiAgSXQgcGFuaWNzIGlmIHRoZSBzdHJ1Y3QgZG9lcyBub3QgY29udGFpbiBhIGZpZWxkIG1hdGNoaW5nIHRoaXMKbmFtZS4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhYmxlTWFwLkRyb3BJbmRleCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVGFibGVNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kYi5nbyNMMTgxIj5Ecm9wSW5kZXg8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RhYmxlTWFwLkRyb3BJbmRleCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgRHJvcEluZGV4KG5hbWUgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5JZHhNYXAiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDEyMyI+SWR4TWFwPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5JZHhNYXAiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIElkeE1hcChmaWVsZCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjSW5kZXhNYXAiPkluZGV4TWFwPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+SWR4TWFwIHJldHVybnMgdGhlIEluZGV4TWFwIHBvaW50ZXIgbWF0Y2hpbmcgdGhlIGdpdmVuIGluZGV4IG5hbWUuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5SZXNldFNxbCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVGFibGVNYXApIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90YWJsZS5nbyNMMzYiPlJlc2V0U3FsPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5SZXNldFNxbCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgUmVzZXRTcWwoKTwvcHJlPgogICAgPC9kaXY+CiAgPHA+UmVzZXRTcWwgcmVtb3ZlcyBjYWNoZWQgaW5zZXJ0L3VwZGF0ZS9zZWxlY3QvZGVsZXRlIFNRTCBzdHJpbmdzCmFzc29jaWF0ZWQgd2l0aCB0aGlzIFRhYmxlTWFwLiAgQ2FsbCB0aGlzIGlmIHlvdSYjMzk7dmUgbW9kaWZpZWQKYW55IGNvbHVtbiBuYW1lcyBvciB0aGUgdGFibGUgbmFtZSBpdHNlbGYuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5TZXRLZXlzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUYWJsZU1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RhYmxlLmdvI0w1MSI+U2V0S2V5czwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVGFibGVNYXAuU2V0S2V5cyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgU2V0S2V5cyhpc0F1dG9JbmNyIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+LCBmaWVsZE5hbWVzIC4uLjxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRLZXlzIGxldHMgeW91IHNwZWNpZnkgdGhlIGZpZWxkcyBvbiBhIHN0cnVjdCB0aGF0IG1hcCB0byBwcmltYXJ5CmtleSBjb2x1bW5zIG9uIHRoZSB0YWJsZS4gIElmIGlzQXV0b0luY3IgaXMgc2V0LCByZXN1bHQuTGFzdEluc2VydElkKCkKd2lsbCBiZSB1c2VkIGFmdGVyIElOU0VSVCB0byBiaW5kIHRoZSBnZW5lcmF0ZWQgaWQgdG8gdGhlIEdvIHN0cnVjdC4KPC9wPjxwPkF1dG9tYXRpY2FsbHkgY2FsbHMgUmVzZXRTcWwoKSB0byBlbnN1cmUgU1FMIHN0YXRlbWVudHMgYXJlIHJlZ2VuZXJhdGVkLgo8L3A+PHA+UGFuaWNzIGlmIGlzQXV0b0luY3IgaXMgdHJ1ZSwgYW5kIGZpZWxkTmFtZXMgbGVuZ3RoICE9IDEKPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhYmxlTWFwLlNldFVuaXF1ZVRvZ2V0aGVyIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUYWJsZU1hcCkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RhYmxlLmdvI0w3NyI+U2V0VW5pcXVlVG9nZXRoZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RhYmxlTWFwLlNldFVuaXF1ZVRvZ2V0aGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+KSBTZXRVbmlxdWVUb2dldGhlcihmaWVsZE5hbWVzIC4uLjxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKjxhIGhyZWY9IiNUYWJsZU1hcCI+VGFibGVNYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRVbmlxdWVUb2dldGhlciBsZXRzIHlvdSBzcGVjaWZ5IHVuaXF1ZW5lc3MgY29uc3RyYWludHMgYWNyb3NzIG11bHRpcGxlCmNvbHVtbnMgb24gdGhlIHRhYmxlLiBFYWNoIGNhbGwgYWRkcyBhbiBhZGRpdGlvbmFsIGNvbnN0cmFpbnQgZm9yIHRoZQpzcGVjaWZpZWQgY29sdW1ucy4KPC9wPjxwPkF1dG9tYXRpY2FsbHkgY2FsbHMgUmVzZXRTcWwoKSB0byBlbnN1cmUgU1FMIHN0YXRlbWVudHMgYXJlIHJlZ2VuZXJhdGVkLgo8L3A+PHA+UGFuaWNzIGlmIGZpZWxkTmFtZXMgbGVuZ3RoICZsdDsgMi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhYmxlTWFwLlNldFZlcnNpb25Db2wiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDE2NCI+U2V0VmVyc2lvbkNvbDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVGFibGVNYXAuU2V0VmVyc2lvbkNvbCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVGFibGVNYXAiPlRhYmxlTWFwPC9hPikgU2V0VmVyc2lvbkNvbChmaWVsZCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pICo8YSBocmVmPSIjQ29sdW1uTWFwIj5Db2x1bW5NYXA8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZXRWZXJzaW9uQ29sIHNldHMgdGhlIGNvbHVtbiB0byB1c2UgYXMgdGhlIFZlcnNpb24gZmllbGQuICBCeSBkZWZhdWx0CnRoZSAmIzM0O1ZlcnNpb24mIzM0OyBmaWVsZCBpcyB1c2VkLiAgUmV0dXJucyB0aGUgY29sdW1uIGZvdW5kLCBvciBwYW5pY3MKaWYgdGhlIHN0cnVjdCBkb2VzIG5vdCBjb250YWluIGEgZmllbGQgbWF0Y2hpbmcgdGhpcyBuYW1lLgo8L3A+PHA+QXV0b21hdGljYWxseSBjYWxscyBSZXNldFNxbCgpIHRvIGVuc3VyZSBTUUwgc3RhdGVtZW50cyBhcmUgcmVnZW5lcmF0ZWQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUYWJsZU1hcC5TcWxGb3JDcmVhdGUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRhYmxlTWFwKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28jTDE3MyI+U3FsRm9yQ3JlYXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYWJsZU1hcC5TcWxGb3JDcmVhdGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RhYmxlTWFwIj5UYWJsZU1hcDwvYT4pIFNxbEZvckNyZWF0ZShpZk5vdEV4aXN0cyA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TcWxGb3JDcmVhdGVUYWJsZSBnZXRzIGEgc2VxdWVuY2Ugb2YgU1FMIGNvbW1hbmRzIHRoYXQgd2lsbCBjcmVhdGUKdGhlIHNwZWNpZmllZCB0YWJsZSBhbmQgYW55IGFzc29jaWF0ZWQgc2NoZW1hCjwvcD4KCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRhcmdldFF1ZXJ5SW5zZXJ0ZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2RpYWxlY3QuZ28jTDkyIj5UYXJnZXRRdWVyeUluc2VydGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYXJnZXRRdWVyeUluc2VydGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVGFyZ2V0UXVlcnlJbnNlcnRlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVGFyZ2V0UXVlcnlJbnNlcnRlci5JbnNlcnRRdWVyeVRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUYXJnZXRRdWVyeUluc2VydGVyIHJ1bnMgYW4gaW5zZXJ0IG9wZXJhdGlvbiBhbmQgYXNzaWducyB0aGU8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHByaW1hcnkga2V5IHJldHJpdmVkIGJ5IHRoZSBxdWVyeTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBleHRyYWN0ZWQgZnJvbSB0aGUgR2VuZXJhdGVkSWRRdWVyeSBmaWVsZCBvZiB0aGUgaWQgY29sdW1uLjwvc3Bhbj4KCUluc2VydFF1ZXJ5VG9UYXJnZXQoZXhlYyA8YSBocmVmPSIjU3FsRXhlY3V0b3IiPlNxbEV4ZWN1dG9yPC9hPiwgaW5zZXJ0U3FsLCBpZFNxbCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIHRhcmdldCBpbnRlcmZhY2V7fSwgcGFyYW1zIC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlRhcmdldFF1ZXJ5SW5zZXJ0ZXIgaXMgaW1wbGVtZW50ZWQgYnkgZGlhbGVjdHMgdGhhdCBjYW4gcGVyZm9ybQphc3NpZ25tZW50IG9mIGludGVnZXIgcHJpbWFyeSBrZXkgdHlwZSBieSBleGVjdXRpbmcgYSBxdWVyeQpsaWtlICYjMzQ7c2VsZWN0IHNlcXVlbmNlLmN1cnJ2YWwgZnJvbSBkdWFsJiMzNDsuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC9kaWFsZWN0LmdvI0w4MSI+VGFyZ2V0ZWRBdXRvSW5jckluc2VydGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBUYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXIgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IlRhcmdldGVkQXV0b0luY3JJbnNlcnRlci5JbnNlcnRBdXRvSW5jclRvVGFyZ2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJbnNlcnRBdXRvSW5jclRvVGFyZ2V0IHJ1bnMgYW4gaW5zZXJ0IG9wZXJhdGlvbiBhbmQgYXNzaWducyB0aGU8L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHByaW1hcnkga2V5IGRpcmVjdGx5IHRvIHRoZSBwYXNzZWQgaW48L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdGFyZ2V0LiAgVGhlIHRhcmdldCBzaG91bGQgYmUgYSBwb2ludGVyIHRvIHRoZSBwcmltYXJ5IGtleTwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBmaWVsZCBvZiB0aGUgdmFsdWUgYmVpbmcgaW5zZXJ0ZWQuPC9zcGFuPgoJSW5zZXJ0QXV0b0luY3JUb1RhcmdldChleGVjIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+LCBpbnNlcnRTcWwgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCB0YXJnZXQgaW50ZXJmYWNle30sIHBhcmFtcyAuLi5pbnRlcmZhY2V7fSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5UYXJnZXRlZEF1dG9JbmNySW5zZXJ0ZXIgaXMgaW1wbGVtZW50ZWQgYnkgZGlhbGVjdHMgdGhhdCBjYW4KcGVyZm9ybSBhdXRvbWF0aWMgYXNzaWdubWVudCBvZiBhbnkgcHJpbWFyeSBrZXkgdHlwZSAoaS5lLiBzdHJpbmdzCmZvciB1dWlkcywgaW50ZWdlcnMgZm9yIHNlcmlhbHMsIGV0YykuCjwvcD4KCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24iIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wxNyI+VHJhbnNhY3Rpb248L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVHJhbnNhY3Rpb24gc3RydWN0IHsKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBjb250YWlucyBmaWx0ZXJlZCBvciB1bmV4cG9ydGVkIGZpZWxkczwvc3Bhbj4KfTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VHJhbnNhY3Rpb24gcmVwcmVzZW50cyBhIGRhdGFiYXNlIHRyYW5zYWN0aW9uLgpJbnNlcnQvVXBkYXRlL0RlbGV0ZS9HZXQvRXhlYyBvcGVyYXRpb25zIHdpbGwgYmUgcnVuIGluIHRoZSBjb250ZXh0Cm9mIHRoYXQgdHJhbnNhY3Rpb24uICBUcmFuc2FjdGlvbnMgc2hvdWxkIGJlIHRlcm1pbmF0ZWQgd2l0aAphIGNhbGwgdG8gQ29tbWl0KCkgb3IgUm9sbGJhY2soKQo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5Db21taXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDE0MiI+Q29tbWl0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5Db21taXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIENvbW1pdCgpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPkNvbW1pdCBjb21taXRzIHRoZSB1bmRlcmx5aW5nIGRhdGFiYXNlIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uRGVsZXRlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0w0NyI+RGVsZXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5EZWxldGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIERlbGV0ZShsaXN0IC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkRlbGV0ZSBoYXMgdGhlIHNhbWUgYmVoYXZpb3IgYXMgRGJNYXAuRGVsZXRlKCksIGJ1dCBydW5zIGluIGEgdHJhbnNhY3Rpb24uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5FeGVjIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0w2NiI+RXhlYzwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uRXhlYyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgRXhlYyhxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjUmVzdWx0Ij5SZXN1bHQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+RXhlYyBoYXMgdGhlIHNhbWUgYmVoYXZpb3IgYXMgRGJNYXAuRXhlYygpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uR2V0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0w1MiI+R2V0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5HZXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIEdldChpIGludGVyZmFjZXt9LCBrZXlzIC4uLmludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5HZXQgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLkdldCgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uSW5zZXJ0IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wzMiI+SW5zZXJ0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5JbnNlcnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIEluc2VydChsaXN0IC4uLmludGVyZmFjZXt9KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5JbnNlcnQgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLkluc2VydCgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uUHJlcGFyZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMjA5Ij5QcmVwYXJlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5QcmVwYXJlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBQcmVwYXJlKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKCo8YSBocmVmPSIvZGF0YWJhc2Uvc3FsIj5zcWw8L2E+LjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwjU3RtdCI+U3RtdDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5QcmVwYXJlIGhhcyB0aGUgc2FtZSBiZWhhdmlvciBhcyBEYk1hcC5QcmVwYXJlKCksIGJ1dCBydW5zIGluIGEgdHJhbnNhY3Rpb24uCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5RdWVyeSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMjI5Ij5RdWVyeTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uUXVlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFF1ZXJ5KHEgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoKjxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNSb3dzIj5Sb3dzPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIAoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlF1ZXJ5Um93IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wyMTciPlF1ZXJ5Um93PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5RdWVyeVJvdyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgUXVlcnlSb3cocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAqPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI1JvdyI+Um93PC9hPjwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uUmVsZWFzZVNhdmVwb2ludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTk4Ij5SZWxlYXNlU2F2ZXBvaW50PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5SZWxlYXNlU2F2ZXBvaW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBSZWxlYXNlU2F2ZXBvaW50KHNhdmVwb2ludCA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlJlbGVhc2VTYXZlcGludCByZWxlYXNlcyB0aGUgc2F2ZXBvaW50IHdpdGggdGhlIGdpdmVuIG5hbWUuIFRoZSBuYW1lIGlzCmludGVycG9sYXRlZCBkaXJlY3RseSBpbnRvIHRoZSBTUUwgU0FWRVBPSU5UIHN0YXRlbWVudCwgc28geW91IG11c3Qgc2FuaXRpemUKaXQgaWYgaXQgaXMgZGVyaXZlZCBmcm9tIHVzZXIgaW5wdXQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5Sb2xsYmFjayIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTU2Ij5Sb2xsYmFjazwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2siPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFJvbGxiYWNrKCkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+Um9sbGJhY2sgcm9sbHMgYmFjayB0aGUgdW5kZXJseWluZyBkYXRhYmFzZSB0cmFuc2FjdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlJvbGxiYWNrVG9TYXZlcG9pbnQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDE4NSI+Um9sbGJhY2tUb1NhdmVwb2ludDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uUm9sbGJhY2tUb1NhdmVwb2ludCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgUm9sbGJhY2tUb1NhdmVwb2ludChzYXZlcG9pbnQgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8cD5Sb2xsYmFja1RvU2F2ZXBvaW50IHJvbGxzIGJhY2sgdG8gdGhlIHNhdmVwb2ludCB3aXRoIHRoZSBnaXZlbiBuYW1lLiBUaGUKbmFtZSBpcyBpbnRlcnBvbGF0ZWQgZGlyZWN0bHkgaW50byB0aGUgU1FMIFNBVkVQT0lOVCBzdGF0ZW1lbnQsIHNvIHlvdSBtdXN0CnNhbml0aXplIGl0IGlmIGl0IGlzIGRlcml2ZWQgZnJvbSB1c2VyIGlucHV0Lgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2F2ZXBvaW50IiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wxNzIiPlNhdmVwb2ludDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2F2ZXBvaW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTYXZlcG9pbnQobmFtZSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNhdmVwb2ludCBjcmVhdGVzIGEgc2F2ZXBvaW50IHdpdGggdGhlIGdpdmVuIG5hbWUuIFRoZSBuYW1lIGlzIGludGVycG9sYXRlZApkaXJlY3RseSBpbnRvIHRoZSBTUUwgU0FWRVBPSU5UIHN0YXRlbWVudCwgc28geW91IG11c3Qgc2FuaXRpemUgaXQgaWYgaXQgaXMKZGVyaXZlZCBmcm9tIHVzZXIgaW5wdXQuCjwvcD4KCiAgCgogIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+CiAgICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJUcmFuc2FjdGlvbi5TZWxlY3QiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDU3Ij5TZWxlY3Q8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgU2VsZWN0KGkgaW50ZXJmYWNle30sIHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKFtdaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5TZWxlY3QgaGFzIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLlNlbGVjdCgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0RmxvYXQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDk3Ij5TZWxlY3RGbG9hdDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0RmxvYXQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFNlbGVjdEZsb2F0KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2Zsb2F0NjQiPmZsb2F0NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0RmxvYXQgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3RGbG9hdCBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlNlbGVjdEludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMNzkiPlNlbGVjdEludDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0SW50Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTZWxlY3RJbnQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2J1aWx0aW4jaW50NjQiPmludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdEludCBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdEludCBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlNlbGVjdE51bGxGbG9hdCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTA2Ij5TZWxlY3ROdWxsRmxvYXQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxGbG9hdCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgU2VsZWN0TnVsbEZsb2F0KHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsRmxvYXQ2NCI+TnVsbEZsb2F0NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+U2VsZWN0TnVsbEZsb2F0IGlzIGEgY29udmVuaWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIGdvcnAuU2VsZWN0TnVsbEZsb2F0IGZ1bmN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0TnVsbEludCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMODgiPlNlbGVjdE51bGxJbnQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdE51bGxJbnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFNlbGVjdE51bGxJbnQocXVlcnkgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBhcmdzIC4uLmludGVyZmFjZXt9KSAoPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCI+c3FsPC9hPi48YSBocmVmPSIvZGF0YWJhc2Uvc3FsI051bGxJbnQ2NCI+TnVsbEludDY0PC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxJbnQgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3ROdWxsSW50IGZ1bmN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0TnVsbFN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTI0Ij5TZWxlY3ROdWxsU3RyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUcmFuc2FjdGlvbi5TZWxlY3ROdWxsU3RyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTZWxlY3ROdWxsU3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9kYXRhYmFzZS9zcWwiPnNxbDwvYT4uPGEgaHJlZj0iL2RhdGFiYXNlL3NxbCNOdWxsU3RyaW5nIj5OdWxsU3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE51bGxTdHIgaXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGFyb3VuZCB0aGUgZ29ycC5TZWxlY3ROdWxsU3RyIGZ1bmN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uU2VsZWN0T25lIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgKCpUcmFuc2FjdGlvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL3RyYW5zYWN0aW9uLmdvI0wxMzMiPlNlbGVjdE9uZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uU2VsZWN0T25lIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBTZWxlY3RPbmUoaG9sZGVyIGludGVyZmFjZXt9LCBxdWVyeSA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGFyZ3MgLi4uaW50ZXJmYWNle30pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdE9uZSBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdE9uZSBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlNlbGVjdFN0ciIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMTE1Ij5TZWxlY3RTdHI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlNlbGVjdFN0ciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jICh0ICo8YSBocmVmPSIjVHJhbnNhY3Rpb24iPlRyYW5zYWN0aW9uPC9hPikgU2VsZWN0U3RyKHF1ZXJ5IDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgYXJncyAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPlNlbGVjdFN0ciBpcyBhIGNvbnZlbmllbmNlIHdyYXBwZXIgYXJvdW5kIHRoZSBnb3JwLlNlbGVjdFN0ciBmdW5jdGlvbi4KPC9wPgoKICAKCiAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj4KICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlRyYW5zYWN0aW9uLlVwZGF0ZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMMzciPlVwZGF0ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uVXBkYXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHQgKjxhIGhyZWY9IiNUcmFuc2FjdGlvbiI+VHJhbnNhY3Rpb248L2E+KSBVcGRhdGUobGlzdCAuLi5pbnRlcmZhY2V7fSkgKDxhIGhyZWY9Ii9idWlsdGluI2ludDY0Ij5pbnQ2NDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5VcGRhdGUgaGFkIHRoZSBzYW1lIGJlaGF2aW9yIGFzIERiTWFwLlVwZGF0ZSgpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uVXBkYXRlQ29sdW1ucyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jICgqVHJhbnNhY3Rpb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWdvcnAvZ29ycC9ibG9iL3YzLjEuMC90cmFuc2FjdGlvbi5nbyNMNDIiPlVwZGF0ZUNvbHVtbnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zYWN0aW9uLlVwZGF0ZUNvbHVtbnMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFVwZGF0ZUNvbHVtbnMoZmlsdGVyIDxhIGhyZWY9IiNDb2x1bW5GaWx0ZXIiPkNvbHVtbkZpbHRlcjwvYT4sIGxpc3QgLi4uaW50ZXJmYWNle30pICg8YSBocmVmPSIvYnVpbHRpbiNpbnQ2NCI+aW50NjQ8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+VXBkYXRlQ29sdW1ucyBoYWQgdGhlIHNhbWUgYmVoYXZpb3IgYXMgRGJNYXAuVXBkYXRlQ29sdW1ucygpLCBidXQgcnVucyBpbiBhIHRyYW5zYWN0aW9uLgo8L3A+CgogIAoKICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPgogICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNhY3Rpb24uV2l0aENvbnRleHQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyAoKlRyYW5zYWN0aW9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28jTDI0Ij5XaXRoQ29udGV4dDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjVHJhbnNhY3Rpb24uV2l0aENvbnRleHQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAodCAqPGEgaHJlZj0iI1RyYW5zYWN0aW9uIj5UcmFuc2FjdGlvbjwvYT4pIFdpdGhDb250ZXh0KGN0eCA8YSBocmVmPSIvY29udGV4dCI+Y29udGV4dDwvYT4uPGEgaHJlZj0iL2NvbnRleHQjQ29udGV4dCI+Q29udGV4dDwvYT4pIDxhIGhyZWY9IiNTcWxFeGVjdXRvciI+U3FsRXhlY3V0b3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogIDwvZGl2PgogIAoKICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IlR5cGVDb252ZXJ0ZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL2Jsb2IvdjMuMS4wL2dvcnAuZ28jTDcyIj5UeXBlQ29udmVydGVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNUeXBlQ29udmVydGVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgVHlwZUNvbnZlcnRlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVHlwZUNvbnZlcnRlci5Ub0RiIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUb0RiIGNvbnZlcnRzIHZhbCB0byBhbm90aGVyIHR5cGUuIENhbGxlZCBiZWZvcmUgSU5TRVJUL1VQREFURSBvcGVyYXRpb25zPC9zcGFuPgo8L3NwYW4+CVRvRGIodmFsIGludGVyZmFjZXt9KSAoaW50ZXJmYWNle30sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pCgo8c3BhbiBpZD0iVHlwZUNvbnZlcnRlci5Gcm9tRGIiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEZyb21EYiByZXR1cm5zIGEgQ3VzdG9tU2Nhbm5lciBhcHByb3ByaWF0ZSBmb3IgdGhpcyB0eXBlLiBUaGlzIHdpbGwgYmUgdXNlZDwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gdG8gaG9sZCB2YWx1ZXMgcmV0dXJuZWQgZnJvbSBTRUxFQ1QgcXVlcmllcy48L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly88L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSW4gcGFydGljdWxhciB0aGUgQ3VzdG9tU2Nhbm5lciByZXR1cm5lZCBzaG91bGQgaW1wbGVtZW50IGEgQmluZGVyPC9zcGFuPgoJPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGZ1bmN0aW9uIGFwcHJvcHJpYXRlIGZvciB0aGUgR28gdHlwZSB5b3Ugd2lzaCB0byBjb252ZXJ0IHRoZSBkYiB2YWx1ZSB0bzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLzwvc3Bhbj4KCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBJZiBib29sPT1mYWxzZSwgdGhlbiBubyBjdXN0b20gc2Nhbm5lciB3aWxsIGJlIHVzZWQgZm9yIHRoaXMgZmllbGQuPC9zcGFuPgoJRnJvbURiKHRhcmdldCBpbnRlcmZhY2V7fSkgKDxhIGhyZWY9IiNDdXN0b21TY2FubmVyIj5DdXN0b21TY2FubmVyPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4pCn08L3ByZT4KICAgIDwvZGl2PgogIDxwPlRoZSBUeXBlQ29udmVydGVyIGludGVyZmFjZSBwcm92aWRlcyBhIHdheSB0byBtYXAgYSB2YWx1ZSBvZiBvbmUKdHlwZSB0byBhbm90aGVyIHR5cGUgd2hlbiBwZXJzaXN0aW5nIHRvLCBvciBsb2FkaW5nIGZyb20sIGEgZGF0YWJhc2UuCjwvcD48cD5FeGFtcGxlIHVzZSBjYXNlczogSW1wbGVtZW50IHR5cGUgY29udmVydGVyIHRvIGNvbnZlcnQgYm9vbCB0eXBlcyB0byAmIzM0O3kmIzM0Oy8mIzM0O24mIzM0OyBzdHJpbmdzLApvciBzZXJpYWxpemUgYSBzdHJ1Y3QgbWVtYmVyIGFzIGEgSlNPTiBibG9iLgo8L3A+CgogIAoKICAgIDwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgoKCgoKCiAgICAgIAogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAgIAogICAgICAKICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdEZpbGVzIGpzLXVuaXRGaWxlcyI+CiAgICA8aDIgY2xhc3M9IlVuaXRGaWxlcy10aXRsZSIgaWQ9InNlY3Rpb24tc291cmNlZmlsZXMiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9pbnNlcnRfZHJpdmVfZmlsZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tZ29ycC9nb3JwL3RyZWUvdjMuMS4wIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+VmlldyBhbGw8L2E+CiAgICA8L2Rpdj4KICAgIDxkaXY+CiAgICAgIDx1bCBjbGFzcz0iVW5pdEZpbGVzLWZpbGVMaXN0Ij48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvY29sdW1uLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImNvbHVtbi5nbyI+Y29sdW1uLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGIuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGIuZ28iPmRiLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdC5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkaWFsZWN0LmdvIj5kaWFsZWN0LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9teXNxbC5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkaWFsZWN0X215c3FsLmdvIj5kaWFsZWN0X215c3FsLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9vcmFjbGUuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9vcmFjbGUuZ28iPmRpYWxlY3Rfb3JhY2xlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9wb3N0Z3Jlcy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkaWFsZWN0X3Bvc3RncmVzLmdvIj5kaWFsZWN0X3Bvc3RncmVzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zbm93Zmxha2UuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9zbm93Zmxha2UuZ28iPmRpYWxlY3Rfc25vd2ZsYWtlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxpdGUuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9zcWxpdGUuZ28iPmRpYWxlY3Rfc3FsaXRlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZGlhbGVjdF9zcWxzZXJ2ZXIuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZGlhbGVjdF9zcWxzZXJ2ZXIuZ28iPmRpYWxlY3Rfc3Fsc2VydmVyLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZG9jLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImRvYy5nbyI+ZG9jLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZXJyb3JzLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImVycm9ycy5nbyI+ZXJyb3JzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvZ29ycC5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJnb3JwLmdvIj5nb3JwLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvaG9va3MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iaG9va3MuZ28iPmhvb2tzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvaW5kZXguZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iaW5kZXguZ28iPmluZGV4LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbG9ja2Vycm9yLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImxvY2tlcnJvci5nbyI+bG9ja2Vycm9yLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbG9nZ2luZy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJsb2dnaW5nLmdvIj5sb2dnaW5nLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvbnVsbHR5cGVzLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im51bGx0eXBlcy5nbyI+bnVsbHR5cGVzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvc2VsZWN0LmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9InNlbGVjdC5nbyI+c2VsZWN0LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGUuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0idGFibGUuZ28iPnRhYmxlLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdGFibGVfYmluZGluZ3MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0idGFibGVfYmluZGluZ3MuZ28iPnRhYmxlX2JpbmRpbmdzLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1nb3JwL2dvcnAvYmxvYi92My4xLjAvdHJhbnNhY3Rpb24uZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0idHJhbnNhY3Rpb24uZ28iPnRyYW5zYWN0aW9uLmdvPC9hPgogICAgICAgICAgPC9saT48L3VsPgogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAKICAgICAgCiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9hcnRpY2xlPgogICAgPGZvb3RlciBjbGFzcz0iZ28tTWFpbi1mb290ZXIiPjwvZm9vdGVyPgogIDwvbWFpbj4KCiAgICAKICA8Zm9vdGVyIGNsYXNzPSJnby1Gb290ZXIiPgogICAgCiAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua3MiPgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgV2h5IEdvCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyN1c2UtY2FzZXMiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBVc2UgQ2FzZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI2Nhc2Utc3R1ZGllcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIENhc2UgU3R1ZGllcwogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2xlYXJuLmdvLmRldi8iIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBHZXQgU3RhcnRlZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BsYXkuZ29sYW5nLm9yZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFBsYXlncm91bmQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90b3VyLmdvbGFuZy5vcmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBUb3VyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zL3RhZ2dlZC9nbz90YWI9TmV3ZXN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU3RhY2sgT3ZlcmZsb3cKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvaGVscCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEhlbHAKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgUGFja2FnZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iL3N0ZCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFN0YW5kYXJkIExpYnJhcnkKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iL2dvbGFuZy5vcmcveCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFN1Yi1yZXBvc2l0b3JpZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2L2Fib3V0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQWJvdXQgR28gUGFja2FnZXMKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvcHJvamVjdCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEFib3V0CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2RsLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj5Eb3dubG9hZDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9ibG9nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkJsb2c8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9pc3N1ZXMiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBJc3N1ZSBUcmFja2VyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2RvYy9kZXZlbC9yZWxlYXNlLmh0bWwiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBSZWxlYXNlIE5vdGVzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYmxvZy5nb2xhbmcub3JnL2dvLWJyYW5kIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQnJhbmQgR3VpZGVsaW5lcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9jb25kdWN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ29kZSBvZiBDb25kdWN0CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnR3aXR0ZXIuY29tL2dvbGFuZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIENvbm5lY3QKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgVHdpdHRlcgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkdpdEh1YjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2ludml0ZS5zbGFjay5nb2xhbmdicmlkZ2Uub3JnLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFNsYWNrCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcmVkZGl0LmNvbS9yL2dvbGFuZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIHIvZ29sYW5nCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1lZXR1cC5jb20vcHJvL2dvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgTWVldHVwCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nd2Vla2x5LmNvbS8iIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBHb2xhbmcgV2Vla2x5CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWJvdHRvbSI+CiAgICAgIDxpbWcgY2xhc3M9ImdvLUZvb3Rlci1nb3BoZXIiICB3aWR0aD0iMTQzMSIgaGVpZ2h0PSI5MDEiCiAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2dvcGhlci9waWxvdC1idXN0LTE0MzF4OTAxLnN2ZyIgYWx0PSJHb3BoZXIgaW4gZmxpZ2h0IGdvZ2dsZXMiPgogICAgICA8dWwgY2xhc3M9ImdvLUZvb3Rlci1saXN0Um93Ij4KICAgICAgICA8bGkgY2xhc3M9ImdvLUZvb3Rlci1saXN0SXRlbSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9jb3B5cmlnaHQiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkNvcHlyaWdodDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3RvcyIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+VGVybXMgb2YgU2VydmljZTwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuZ29vZ2xlLmNvbS9pbnRsL2VuL3BvbGljaWVzL3ByaXZhY3kvIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIgogICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgICAgUHJpdmFjeSBQb2xpY3kKICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3MvcGtnc2l0ZS1mZWVkYmFjayIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiCiAgICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICAgIFJlcG9ydCBhbiBJc3N1ZQogICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0tdGV4dCBnby1Gb290ZXItdG9nZ2xlVGhlbWUganMtdG9nZ2xlVGhlbWUiIGFyaWEtbGFiZWw9IlRvZ2dsZSB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0iYXV0byIgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2JyaWdodG5lc3NfNl9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IlN5c3RlbSB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0iZGFyayIgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2JyaWdodG5lc3NfMl9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IkRhcmsgdGhlbWUiPgogICAgICAgICAgICA8aW1nIGRhdGEtdmFsdWU9ImxpZ2h0IiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vbGlnaHRfbW9kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IkxpZ2h0IHRoZW1lIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0tdGV4dCBnby1Gb290ZXIta2V5Ym9hcmQganMtb3BlblNob3J0Y3V0cyIgYXJpYS1sYWJlbD0iT3BlbiBzaG9yY3V0cyBtb2RhbCI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0taW52ZXJ0ZWQiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2tleWJvYXJkX2dyZXlfMjRkcC5zdmciIGFsdD0iIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvbGk+CiAgICAgIDwvdWw+CiAgICAgIDxhIGNsYXNzPSJnby1Gb290ZXItZ29vZ2xlTG9nbyIgaHJlZj0iaHR0cHM6Ly9nb29nbGUuY29tIiB0YXJnZXQ9Il9ibGFuayJyZWw9Im5vb3BlbmVyIgogICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgPGltZyBjbGFzcz0iZ28tRm9vdGVyLWdvb2dsZUxvZ29JbWciIGhlaWdodD0iMjQiIHdpZHRoPSI3MiIKICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvb2dsZS13aGl0ZS5zdmciIGFsdD0iR29vZ2xlIGxvZ28iPgogICAgICA8L2E+CiAgICA8L2Rpdj4KICA8L2Zvb3Rlcj4KCiAgICAKICA8ZGlhbG9nIGlkPSJqdW1wLXRvLW1vZGFsIiBjbGFzcz0iSnVtcERpYWxvZyBnby1Nb2RhbCBnby1Nb2RhbC0tbWQganMtbW9kYWwiPgogICAgPGZvcm0gbWV0aG9kPSJkaWFsb2ciIGRhdGEtZ210Yz0ianVtcCB0byBmb3JtIiBhcmlhLWxhYmVsPSJKdW1wIHRvIElkZW50aWZpZXIiPgogICAgICA8ZGl2IGNsYXNzPSJEaWFsb2ctdGl0bGUgZ28tTW9kYWwtaGVhZGVyIj4KICAgICAgICA8aDI+SnVtcCB0bzwvaDI+CiAgICAgICAgPGJ1dHRvbgogICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSIKICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgIGRhdGEtbW9kYWwtY2xvc2UKICAgICAgICAgIGRhdGEtZ3RtYz0ibW9kYWwgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iQ2xvc2UiCiAgICAgICAgPgogICAgICAgICAgPGltZwogICAgICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICAgICAgaGVpZ2h0PSIyNCIKICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2xvc2VfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1maWx0ZXIiPgogICAgICAgIDxpbnB1dCBjbGFzcz0iSnVtcERpYWxvZy1pbnB1dCBnby1JbnB1dCIgYXV0b2NvbXBsZXRlPSJvZmYiIHR5cGU9InRleHQiPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1ib2R5IGdvLU1vZGFsLWJvZHkiPgogICAgICAgIDxkaXYgY2xhc3M9Ikp1bXBEaWFsb2ctbGlzdCI+PC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24iIGRhdGEtdGVzdC1pZD0iY2xvc2UtZGlhbG9nIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KCiAgPGRpYWxvZyBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nIGdvLU1vZGFsIGdvLU1vZGFsLS1zbSBqcy1tb2RhbCI+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyI+CiAgICAgIDxkaXYgY2xhc3M9ImdvLU1vZGFsLWhlYWRlciI+CiAgICAgICAgPGgyPktleWJvYXJkIHNob3J0Y3V0czwvaDI+CiAgICAgICAgPGJ1dHRvbgogICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSIKICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgIGRhdGEtbW9kYWwtY2xvc2UKICAgICAgICAgIGRhdGEtZ3RtYz0ibW9kYWwgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iQ2xvc2UiCiAgICAgICAgPgogICAgICAgICAgPGltZwogICAgICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICAgICAgaGVpZ2h0PSIyNCIKICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2xvc2VfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtYm9keSI+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgPHRib2R5PgogICAgICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij4KICAgICAgICAgICAgICA8c3Ryb25nPj88L3N0cm9uZz48L3RkPjx0ZD4gOiBUaGlzIG1lbnU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij4KICAgICAgICAgICAgICA8c3Ryb25nPi88L3N0cm9uZz48L3RkPjx0ZD4gOiBTZWFyY2ggc2l0ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Zjwvc3Ryb25nPiBvciA8c3Ryb25nPkY8L3N0cm9uZz48L3RkPjx0ZD4gOiBKdW1wIHRvPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgIDx0ZCBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nLWtleSI+PHN0cm9uZz55PC9zdHJvbmc+IG9yIDxzdHJvbmc+WTwvc3Ryb25nPjwvdGQ+CiAgICAgICAgICAgICAgPHRkPiA6IENhbm9uaWNhbCBVUkw8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgPC90Ym9keT4KICAgICAgICA8L3RhYmxlPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtYWN0aW9ucyI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIiBkYXRhLXRlc3QtaWQ9ImNsb3NlLWRpYWxvZyI+Q2xvc2U8L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaWFsb2c+CgogICAgCiAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb29raWUtbm90aWNlIGpzLWNvb2tpZU5vdGljZSI+CiAgICAgICAgPGRpdj5nby5kZXYgdXNlcyBjb29raWVzIGZyb20gR29vZ2xlIHRvIGRlbGl2ZXIgYW5kIGVuaGFuY2UgdGhlIHF1YWxpdHkgb2YgaXRzIHNlcnZpY2VzIGFuZCB0bwogICAgICAgIGFuYWx5emUgdHJhZmZpYy4gPGEgdGFyZ2V0PV9ibGFuayBocmVmPSJodHRwczovL3BvbGljaWVzLmdvb2dsZS5jb20vdGVjaG5vbG9naWVzL2Nvb2tpZXMiPkxlYXJuIG1vcmUuPC9hPjwvZGl2PgogICAgICAgIDxkaXY+PGJ1dHRvbiBjbGFzcz0iZ28tQnV0dG9uIj5Pa2F5PC9idXR0b24+PC9kaXY+CiAgICAgIDwvc2VjdGlvbj4KICAgIAogICAgCiAgICAgIDxzY3JpcHQ+CiAgICAgICAgLy8gdGhpcyB3aWxsIHRocm93IGlmIHRoZSBxdWVyeVNlbGVjdG9yIGNhbuKAmXQgZmluZCB0aGUgZWxlbWVudAogICAgICAgIGNvbnN0IGd0bUlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWd0bUlEJykuZGF0YXNldC5ndG1pZDsKICAgICAgICBpZiAoIWd0bUlkKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dvb2dsZSBUYWcgTWFuYWdlciBJRCBub3QgZm91bmQnKTsKICAgICAgICB9CiAgICAgICAgbG9hZFNjcmlwdChgaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPSR7Z3RtSWR9YCk7CiAgICAgIDwvc2NyaXB0PgogICAgICA8bm9zY3JpcHQ+CiAgICAgICAgPGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVc4TVZRWEciCiAgICAgICAgICAgICAgICBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj4KICAgICAgICA8L2lmcmFtZT4KICAgICAgPC9ub3NjcmlwdD4KICAgIAogICAgCiAgCiAgPGRpdiBjbGFzcz0ianMtY2Fub25pY2FsVVJMUGF0aCIgZGF0YS1jYW5vbmljYWwtdXJsLXBhdGg9Ii9naXRodWIuY29tL2dvLWdvcnAvZ29ycC92M0B2My4xLjAiIGhpZGRlbj48L2Rpdj4KICA8ZGl2IGNsYXNzPSJqcy1wbGF5Z3JvdW5kVmFycyIgZGF0YS1tb2R1bGVwYXRoPSJnaXRodWIuY29tL2dvLWdvcnAvZ29ycC92MyIgZGF0YS12ZXJzaW9uPSJ2My4xLjAiIGhpZGRlbj48L2Rpdj4KICA8c2NyaXB0PgogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9mcm9udGVuZC91bml0L21haW4vbWFpbi5qcycpCiAgPC9zY3JpcHQ+CgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCcvc3RhdGljL2Zyb250ZW5kL3VuaXQvdW5pdC5qcycpCiAgPC9zY3JpcHQ+CgogIDwvYm9keT4KPC9odG1sPgo=
    http_version:
  recorded_at: Mon, 17 Jul 2023 21:26:47 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!package!manager::!go/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3207357532209314862'
      X-Datadog-Parent-Id:
      - '1234708264617719833'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 21:38:40 GMT
      Content-Length:
      - '126'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!package!manager::!go": malformed
        module path "PackageManager::Go": invalid char '':'''
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:38:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!package!manager::!go/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3620602868473635839'
      X-Datadog-Parent-Id:
      - '719587707030511714'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 21:47:29 GMT
      Content-Length:
      - '126'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!package!manager::!go": malformed
        module path "PackageManager::Go": invalid char '':'''
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:47:29 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '992320147297037883'
      X-Datadog-Parent-Id:
      - '1114214997573598531'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '188'
      Content-Type:
      - application/json
      Date:
      - Tue, 18 Jul 2023 21:47:54 GMT
      Expires:
      - Tue, 18 Jul 2023 21:48:54 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.1.0","Time":"2022-10-18T18:02:56Z","Origin":{"VCS":"git","URL":"https://github.com/go-gorp/gorp","Ref":"refs/tags/v3.1.0","Hash":"2db0f5e22596df067c3d4edf9b2f3e0727cc31ca"}}'
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:47:53 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/go-gorp/gorp/v3/@v/v3.1.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '753732696401827274'
      X-Datadog-Parent-Id:
      - '1981274960125815393'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '1007'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 19:27:03 GMT
      Expires:
      - Tue, 18 Jul 2023 22:27:03 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '8451'
      Last-Modified:
      - Thu, 20 Oct 2022 05:14:33 GMT
      Etag:
      - '"09d7fa857da909b65b0866a746a176b718a77f7cda5204b217a2ed715ae8654b"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: "module github.com/go-gorp/gorp/v3\n\ngo 1.18\n\nretract (\n\t// Versions
        prior to 3.0.4 had a vulnerability in the dependency graph.  While we don't\n\t//
        directly use yaml, I'm not comfortable encouraging people to use versions
        with a\n\t// CVE - so prior versions are retracted.\n\t//\n\t// See CVE-2019-11254\n\t[v3.0.0,
        v3.0.3]\n)\n\nrequire (\n\tgithub.com/go-sql-driver/mysql v1.6.0\n\tgithub.com/lib/pq
        v1.10.7\n\tgithub.com/mattn/go-sqlite3 v1.14.15\n\tgithub.com/poy/onpar v1.1.2\n\tgithub.com/stretchr/testify
        v1.8.0\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/fatih/color
        v1.13.0 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/mattn/go-colorable
        v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.16 // indirect\n\tgithub.com/nelsam/hel/v2
        v2.3.3 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgolang.org/x/sys
        v0.0.0-20221013171732-95e765b1cc43 // indirect\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c
        // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:47:54 GMT
recorded_with: VCR 4.0.0
