---
http_interactions:
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!burnt!sushi/xgbutil/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '0'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Thu, 07 Jul 2022 15:51:49 GMT
      Expires:
      - Thu, 07 Jul 2022 15:52:49 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: ''
    http_version:
  recorded_at: Thu, 07 Jul 2022 15:51:49 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!burnt!sushi/xgbutil/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '78'
      Content-Type:
      - application/json
      Date:
      - Thu, 07 Jul 2022 15:51:49 GMT
      Expires:
      - Thu, 07 Jul 2022 15:52:49 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.0.0-20190907113008-ad855c713046","Time":"2019-09-07T11:30:08Z"}'
    http_version:
  recorded_at: Thu, 07 Jul 2022 15:51:49 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!burnt!sushi/xgbutil/@v/v0.0.0-20190907113008-ad855c713046.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '78'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Thu, 07 Jul 2022 15:48:42 GMT
      Expires:
      - Thu, 07 Jul 2022 18:48:42 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '187'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.0.0-20190907113008-ad855c713046","Time":"2019-09-07T11:30:08Z"}'
    http_version:
  recorded_at: Thu, 07 Jul 2022 15:51:49 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/BurntSushi/xgbutil
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 07 Jul 2022 15:51:49 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 07 Jul 2022 15:51:49 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!package!manager::!go/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '4491436029519419772'
      X-Datadog-Parent-Id:
      - '3501048838073403039'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 21:43:10 GMT
      Content-Length:
      - '126'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!package!manager::!go": malformed
        module path "PackageManager::Go": invalid char '':'''
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:43:10 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!burnt!sushi/xgbutil/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3624946249898521367'
      X-Datadog-Parent-Id:
      - '2283114574049571978'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '78'
      Content-Type:
      - application/json
      Date:
      - Tue, 18 Jul 2023 21:55:16 GMT
      Expires:
      - Tue, 18 Jul 2023 21:56:16 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.0.0-20190907113008-ad855c713046","Time":"2019-09-07T11:30:08Z"}'
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:16 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/!burnt!sushi/xgbutil/@v/v0.0.0-20190907113008-ad855c713046.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1612168845513547326'
      X-Datadog-Parent-Id:
      - '1606011742418977492'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '37'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 18 Jul 2023 21:55:16 GMT
      Etag:
      - '"a21ce95fb891178c54ef6fcd26fe95cd0567d7818d73b6abb13f1141d37d80b6"'
      Expires:
      - Wed, 19 Jul 2023 00:55:16 GMT
      Last-Modified:
      - Sat, 07 Sep 2019 14:37:14 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/BurntSushi/xgbutil

        '
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:16 GMT
recorded_with: VCR 4.0.0
