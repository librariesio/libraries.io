---
http_interactions:
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - 40c1954e21202212de0d2bbcd9590fa6
      Date:
      - Tue, 20 Apr 2021 20:54:06 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '110187'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '25'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:54:06 GMT
      Expires:
      - Tue, 20 Apr 2021 20:55:06 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: |
        v3.0.0-rc1
        v3.0.1
        v3.0.0
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.0-rc1.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '54'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 20:34:03 GMT
      Expires:
      - Tue, 20 Apr 2021 23:34:03 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '1203'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v3.0.0-rc1","Time":"2019-05-03T02:07:42Z"}'
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - e18ab03f04dd0aab5846428cd6a46b0f
      Date:
      - Tue, 20 Apr 2021 20:54:06 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '110187'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.1.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 18:32:20 GMT
      Expires:
      - Tue, 20 Apr 2021 21:32:20 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '8506'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v3.0.1","Time":"2020-01-04T01:05:08Z"}'
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - 24e66fd8b06783915a518a15363c975d
      Date:
      - Tue, 20 Apr 2021 20:54:06 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '110187'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 20:34:03 GMT
      Expires:
      - Tue, 20 Apr 2021 23:34:03 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '1203'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v3.0.0","Time":"2019-07-11T17:02:38Z"}'
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron/v3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - 6427e43463253416031d100ef0b20706
      Date:
      - Tue, 20 Apr 2021 20:54:07 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '110187'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iPgoKPHNjcmlwdD53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB3aW5kb3cuX19lcnI9ZnVuY3Rpb24gZihlKXtmLnA9Zi5wfHxbXTtmLnAucHVzaChlKX0pOzwvc2NyaXB0Pgo8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CjxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogIDxtZXRhIG5hbWU9IkRlc2NyaXB0aW9uIiBjb250ZW50PSI1NDgiPgoKPG1ldGEgY2xhc3M9ImpzLWd0bUlEIiBkYXRhLWd0bWlkPSJHVE0tVzhNVlFYRyI+CjxsaW5rIGhyZWY9Ii9zdGF0aWMvY3NzL3N0eWxlc2hlZXQuY3NzP3ZlcnNpb249MjAyMS0wNC0yMHQxNi0xMC04OTNjYzJiNzFhNWFmZTA5N2U5Yjc4Njk5Y2I5Y2M1ZDE5NmQzMDAyIiByZWw9InN0eWxlc2hlZXQiPgo8bGluayBocmVmPSIvdGhpcmRfcGFydHkvZGlhbG9nLXBvbHlmaWxsL2RpYWxvZy1wb2x5ZmlsbC5jc3M/dmVyc2lvbj0yMDIxLTA0LTIwdDE2LTEwLTg5M2NjMmI3MWE1YWZlMDk3ZTliNzg2OTljYjljYzVkMTk2ZDMwMDIiIHJlbD0ic3R5bGVzaGVldCI+Cjx0aXRsZT5jcm9uIMK3IHBrZy5nby5kZXY8L3RpdGxlPgoKICA8bGluayBocmVmPSIvc3RhdGljL2Nzcy91bml0LmNzcz92ZXJzaW9uPTIwMjEtMDQtMjB0MTYtMTAtODkzY2MyYjcxYTVhZmUwOTdlOWI3ODY5OWNiOWNjNWQxOTZkMzAwMiIgcmVsPSJzdHlsZXNoZWV0Ij4KICAKICA8bGluayBocmVmPSIvc3RhdGljL2Nzcy91bml0X2RldGFpbHMuY3NzP3ZlcnNpb249MjAyMS0wNC0yMHQxNi0xMC04OTNjYzJiNzFhNWFmZTA5N2U5Yjc4Njk5Y2I5Y2M1ZDE5NmQzMDAyIiByZWw9InN0eWxlc2hlZXQiPgoKICA8bGluayBocmVmPSIvc3RhdGljL2Nzcy91bml0X291dGxpbmUuY3NzP3ZlcnNpb249MjAyMS0wNC0yMHQxNi0xMC04OTNjYzJiNzFhNWFmZTA5N2U5Yjc4Njk5Y2I5Y2M1ZDE5NmQzMDAyIiByZWw9InN0eWxlc2hlZXQiPgoKPGJvZHkgY2xhc3M9IlNpdGUgU2l0ZS0td2lkZSBTaXRlLS1yZWRlc2lnbiI+CjxoZWFkZXIgY2xhc3M9IlNpdGUtaGVhZGVyIFNpdGUtaGVhZGVyLS1kYXJrIj4KICA8ZGl2IGNsYXNzPSJCYW5uZXIiPgogICAgPGRpdiBjbGFzcz0iQmFubmVyLWlubmVyIj4KICAgICAgPGRpdiBjbGFzcz0iQmFubmVyLW1lc3NhZ2UiPkJsYWNrIExpdmVzIE1hdHRlcjwvZGl2PgogICAgICA8YSBjbGFzcz0iQmFubmVyLWFjdGlvbiIKICAgICAgICAgaHJlZj0iaHR0cHM6Ly9zdXBwb3J0LmVqaS5vcmcvZ2l2ZS8xNTM0MTMvIyEvZG9uYXRpb24vY2hlY2tvdXQiCiAgICAgICAgIHRhcmdldD0iX2JsYW5rIgogICAgICAgICByZWw9Im5vb3BlbmVyIj5TdXBwb3J0IHRoZSBFcXVhbCBKdXN0aWNlIEluaXRpYXRpdmU8L2E+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJIZWFkZXIiPgogICAgPG5hdiBjbGFzcz0iSGVhZGVyLW5hdiI+CiAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgY2xhc3M9IkhlYWRlci1sb2dvTGluayI+CiAgICAgICAgPGltZyBjbGFzcz0iSGVhZGVyLWxvZ28iIHNyYz0iL3N0YXRpYy9pbWcvZ28tbG9nby13aGl0ZS5zdmciIGFsdD0iTGluayB0byBHbyBob21lcGFnZSI+CiAgICAgIDwvYT4KICAgICAgCiAgPGZvcm0gY2xhc3M9IkhlYWRlci1zZWFyY2hGb3JtIiBhY3Rpb249Ii9zZWFyY2giIHJvbGU9InNlYXJjaCI+CiAgICA8YnV0dG9uIGNsYXNzPSJIZWFkZXItc2VhcmNoRm9ybVN1Ym1pdCIgYXJpYS1sYWJlbD0iU2VhcmNoIGZvciBhIHBhY2thZ2UiPgogICAgICA8c3ZnIGNsYXNzPSJIZWFkZXItc2VhcmNoRm9ybVN1Ym1pdEljb24iIGZvY3VzYWJsZT0iZmFsc2UiIHZpZXdCb3g9IjAgMCAyNCAyNCIgYXJpYS1oaWRkZW49InRydWUiIHJvbGU9InByZXNlbnRhdGlvbiI+PHBhdGggZD0iTTE1LjUgMTRoLS43OWwtLjI4LS4yN0MxNS40MSAxMi41OSAxNiAxMS4xMSAxNiA5LjUgMTYgNS45MSAxMy4wOSAzIDkuNSAzUzMgNS45MSAzIDkuNSA1LjkxIDE2IDkuNSAxNmMxLjYxIDAgMy4wOS0uNTkgNC4yMy0xLjU3bC4yNy4yOHYuNzlsNSA0Ljk5TDIwLjQ5IDE5bC00Ljk5LTV6bS02IDBDNy4wMSAxNCA1IDExLjk5IDUgOS41UzcuMDEgNSA5LjUgNSAxNCA3LjAxIDE0IDkuNSAxMS45OSAxNCA5LjUgMTR6Ij48L3BhdGg+PHBhdGggZmlsbD0ibm9uZSIgZD0iTTAgMGgyNHYyNEgweiI+PC9wYXRoPjwvc3ZnPgogICAgPC9idXR0b24+CiAgICA8aW5wdXQgY2xhc3M9IkhlYWRlci1zZWFyY2hGb3JtSW5wdXQganMtc2VhcmNoRm9jdXMiCiAgICAgIGFyaWEtbGFiZWw9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIgogICAgICB0eXBlPSJ0ZXh0IgogICAgICBuYW1lPSJxIgogICAgICBwbGFjZWhvbGRlcj0iU2VhcmNoIGZvciBhIHBhY2thZ2UiCiAgICAgIGF1dG9jYXBpdGFsaXplPSJvZmYiCiAgICAgIGF1dG9jb21wbGV0ZT0ib2ZmIgogICAgICBhdXRvY29ycmVjdD0ib2ZmIgogICAgICBzcGVsbGNoZWNrPSJmYWxzZSIKICAgICAgdGl0bGU9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIgogICAgICB2YWx1ZT0iIgogICAgICA+CiAgPC9mb3JtPgoKICAgICAgPHVsIGNsYXNzPSJIZWFkZXItbWVudSI+CiAgICAgICAgPGxpIGNsYXNzPSJIZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zIiB0aXRsZT0iV2h5IEdvIj5XaHkgR288L2E+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9IkhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2xlYXJuLmdvLmRldiIgdGl0bGU9IkdldHRpbmcgU3RhcnRlZCI+R2V0dGluZyBTdGFydGVkPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJIZWFkZXItbWVudUl0ZW0gSGVhZGVyLW1lbnVJdGVtLS1hY3RpdmUiPgogICAgICAgICAgPGEgaHJlZj0iLyIgdGl0bGU9IkRpc2NvdmVyIFBhY2thZ2VzIj5EaXNjb3ZlciBQYWNrYWdlczwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iSGVhZGVyLW1lbnVJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Fib3V0IiB0aXRsZT0iIj5BYm91dDwvYT4KICAgICAgICA8L2xpPgogICAgICA8L3VsPgogICAgICA8YnV0dG9uIGNsYXNzPSJIZWFkZXItbmF2T3BlbiBqcy1oZWFkZXJNZW51QnV0dG9uIiBhcmlhLWxhYmVsPSJPcGVuIG5hdmlnYXRpb24uIj4KICAgICAgPC9idXR0b24+CiAgICA8L25hdj4KICA8L2Rpdj4KPC9oZWFkZXI+Cjxhc2lkZSBjbGFzcz0iTmF2aWdhdGlvbkRyYXdlciBqcy1oZWFkZXIiPgogIDxuYXYgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItbmF2Ij4KICAgIDxkaXYgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItaGVhZGVyIj4KICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvIj4KICAgICAgICA8aW1nIGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWxvZ28iIHNyYz0iL3N0YXRpYy9pbWcvZ28tbG9nby1ibHVlLnN2ZyIgYWx0PSJHby4iPgogICAgICA8L2E+CiAgICAgIDxidXR0b24gY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItY2xvc2UganMtaGVhZGVyTWVudUJ1dHRvbiIgYXJpYS1sYWJlbD0iQ2xvc2UgbmF2aWdhdGlvbi4iPgogICAgICA8L2J1dHRvbj4KICAgIDwvZGl2PgogICAgPHVsIGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWxpc3QiPgogICAgICA8bGkgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyIgdGl0bGU9IldoeSBHbyI+V2h5IEdvPC9hPgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbGVhcm4uZ28uZGV2IiB0aXRsZT0iR2V0dGluZyBTdGFydGVkIj5HZXR0aW5nIFN0YXJ0ZWQ8L2E+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSBOYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtLS1hY3RpdmUiPgogICAgICAgIDxhIGhyZWY9Ii8iIHRpdGxlPSJEaXNjb3ZlciBQYWNrYWdlcyI+RGlzY292ZXIgUGFja2FnZXM8L2E+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYWJvdXQiIHRpdGxlPSIiPkFib3V0PC9hPgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZyIgdGl0bGU9ImdvbGFuZy5vcmciPmdvbGFuZy5vcmc8L2E+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogIDwvbmF2Pgo8L2FzaWRlPgo8ZGl2IGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLXNjcmltIGpzLXNjcmltIiByb2xlPSJwcmVzZW50YXRpb24iPgo8L2Rpdj4KPGRpdiBjbGFzcz0iU2l0ZS1jb250ZW50Ij4KICA8ZGl2IGNsYXNzPSJDb250YWluZXIiPgogICAgCiAgPGhlYWRlciBjbGFzcz0ianMtdW5pdEhlYWRlciBVbml0SGVhZGVyIFVuaXRIZWFkZXItLWZ1bGwgVW5pdEhlYWRlci0tbWFpbi0tcGFja2FnZSIgYXJpYS1sYWJlbD0icGFja2FnZSBjcm9uIGluZm9ybWF0aW9uIiByb2xlPSJjb21wbGVtZW50YXJ5Ij4KICAgIDxkaXYgY2xhc3M9ImpzLWhlYWRlclNlbnRpbmVsIj48L2Rpdj4KICAgIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItYmFubmVycyI+CiAgICAKICAgIAogICAgCiAgICAKICA8L2Rpdj4KCiAgICAKICA8ZGl2IGNsYXNzPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJzIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItYnJlYWRjcnVtYiI+CiAgICA8ZGl2IGNsYXNzPSJTaXRlLW1hcmdpbiI+CiAgICAgIAogICAgICAgIAogICAgICAgICAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItYnJlYWRjcnVtYkl0ZW0iIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iSXRlbSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICAgICAgPC9zcGFuPgogICAgICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgIDxzcGFuIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iQ3VycmVudCI+Z2l0aHViLmNvbS9yb2JmaWcvY3Jvbi92Mzwvc3Bhbj4KICAgICAgICAgIAogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJDb3B5VG9DbGlwYm9hcmRCdXR0b24ganMtY29weVRvQ2xpcGJvYXJkIgogICAgICAgICAgICAgICAgdGl0bGU9IkNvcHkgcGF0aCB0byBjbGlwYm9hcmQuJiMxMDsmIzEwO2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjMiCiAgICAgICAgICAgICAgICBkYXRhLXRvLWNvcHk9ImdpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjMiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9IkNvcHlUb0NsaXBib2FyZEJ1dHRvbi1pbWFnZSIgc3JjPSIvc3RhdGljL2ltZy9jb3B5LWNsaWNrLnN2ZyIgYWx0PSIiPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KICAgICAgCiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgICAKICA8ZGl2IGNsYXNzPSJVbml0SGVhZGVyLWNvbnRlbnQiPgogICAgPGRpdiBjbGFzcz0iU2l0ZS1tYXJnaW4iPgogICAgICAKICA8ZGl2IGNsYXNzPSJVbml0SGVhZGVyLXRpdGxlIj4KICAgIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItbG9nbyI+CiAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgdGFiaW5kZXg9Ii0xIj4KICAgICAgICA8aW1nIGhlaWdodD0iNzJweCIgd2lkdGg9IjcycHgiIGNsYXNzPSJVbml0SGVhZGVyLWxvZ28iIHNyYz0iL3N0YXRpYy9pbWcvZ28tbG9nby1ibHVlLnN2ZyIgYWx0PSJHbyI+CiAgICAgIDwvYT4KICAgIDwvZGl2PgogICAgPGgxIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci10aXRsZSI+Y3JvbjwvaDE+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItYmFkZ2UiPnBhY2thZ2U8L3NwYW4+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItYmFkZ2UiPm1vZHVsZTwvc3Bhbj4KICAgIAogIDwvZGl2PgoKICAgICAgCiAgICAgICAgCiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJDb3B5VG9DbGlwYm9hcmRCdXR0b24ganMtY29weVRvQ2xpcGJvYXJkIgogICAgICAgICAgICAgIHRpdGxlPSJDb3B5IHBhdGggdG8gY2xpcGJvYXJkLiYjMTA7JiMxMDtnaXRodWIuY29tL3JvYmZpZy9jcm9uL3YzIgogICAgICAgICAgICAgIGRhdGEtdG8tY29weT0iZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi92MyIKICAgICAgICAgICAgICB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJDb3B5VG9DbGlwYm9hcmRCdXR0b24taW1hZ2UiIHNyYz0iL3N0YXRpYy9pbWcvY29weS1jbGljay5zdmciIGFsdD0iIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIAogICAgICAKICAgICAgPGRpdiBzdHlsZT0iZmxleC1ncm93OiAxOyI+PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItZGV0YWlscyI+CiAgICAgICAgCiAgICAgICAgICAKICA8c3BhbiBjbGFzcz0iVW5pdEhlYWRlci1kZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItdmVyc2lvbiI+CiAgICA8YSBocmVmPSI/dGFiPXZlcnNpb25zIj48c3Bhbj5WZXJzaW9uOiA8L3NwYW4+djMuMC4xPC9hPgogICAgCiAgICA8ZGl2IGNsYXNzPSJEZXRhaWxzSGVhZGVyLWJhZGdlIERldGFpbHNIZWFkZXItYmFkZ2UtLWxhdGVzdCIKICAgICAgICBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbWlub3JWZXJzaW9uQmFubmVyIgogICAgICAgIGRhdGEtdmVyc2lvbj0idjMuMC4xIgogICAgICAgIGRhdGEtbXBhdGg9ImdpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjMiCiAgICAgICAgZGF0YS1wcGF0aD0iZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi92MyIKICAgICAgICBkYXRhLXBhZ2V0eXBlPSJwYWNrYWdlIj4KICAgICAgPHNwYW4gY2xhc3M9IkRldGFpbHNIZWFkZXItc3Bhbi0tbGF0ZXN0Ij5MYXRlc3Q8L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEZXRhaWxzSGVhZGVyLXNwYW4tLW5vdEF0TGF0ZXN0Ij4KICAgICAgICBMYXRlc3QKICAgICAgICAKICA8c3BhbiBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLXRvZ2dsZXRpcCI+CiAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgYXJpYS1sYWJlbD0ibW9yZSBpbmZvIiBkYXRhLXRvZ2dsZXRpcC1jb250ZW50PSJUaGlzIHBhY2thZ2UgaXMgbm90IGluIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBpdHMgbW9kdWxlLiI+CiAgICAgIDxpbWcgc3JjPSIvc3RhdGljL2ltZy9zZXZlcml0eS5zdmciIGFsdD0iIiBoZWlnaHQ9IjE0IiB3aWR0aD0iMTUiPgogICAgPC9idXR0b24+CiAgICA8c3BhbiByb2xlPSJzdGF0dXMiPjwvc3Bhbj4KICA8L3NwYW4+CgogICAgICA8L3NwYW4+CiAgICAgIDxhIGhyZWY9Ii9naXRodWIuY29tL3JvYmZpZy9jcm9uL3YzIj5HbyB0byBsYXRlc3Q8L2E+CiAgICA8L2Rpdj4KICA8L3NwYW4+CgogICAgICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItZGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWNvbW1pdFRpbWUiPgogICAgUHVibGlzaGVkOiBKYW4gIDQsIDIwMjAKICA8L3NwYW4+CgogICAgICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItZGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWxpY2Vuc2VzIj4KICAgIExpY2Vuc2U6IDxhIGhyZWY9Ii9naXRodWIuY29tL3JvYmZpZy9jcm9uL3YzP3RhYj1saWNlbnNlcyIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWxpY2Vuc2UiPk1JVDwvYT4KICAgICAgCiAgICAKICA8L3NwYW4+CgogICAgICAgICAgCiAgICAgICAgICAgIAogIDxzcGFuIGNsYXNzPSJVbml0SGVhZGVyLWRldGFpbEl0ZW0iIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1pbXBvcnRzIj4KICAgIDxhIGhyZWY9Ii9naXRodWIuY29tL3JvYmZpZy9jcm9uL3YzP3RhYj1pbXBvcnRzIj4KICAgICAgPHNwYW4+SW1wb3J0czogPC9zcGFuPjEyCiAgICA8L2E+CiAgPC9zcGFuPgoKICAgICAgICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItZGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWltcG9ydGVkYnkiPgogICAgPGEgaHJlZj0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjM/dGFiPWltcG9ydGVkYnkiPgogICAgICAgPHNwYW4+SW1wb3J0ZWQgYnk6IDwvc3Bhbj41NDgKICAgIDwvYT4KICA8L3NwYW4+CgogICAgICAgICAgCiAgICAgICAgCiAgICAgIDwvZGl2PgogICAgICAKICA8ZGl2IGNsYXNzPSJVbml0SGVhZGVyLW92ZXJmbG93Q29udGFpbmVyIj4KICAgIDxzdmcgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dJbWFnZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNCI+CiAgICAgIDxwYXRoIGQ9Ik0wIDBoMjR2MjRIMHoiIGZpbGw9Im5vbmUiLz4KICAgICAgPHBhdGggZD0iTTEyIDhjMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem0wIDJjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yem0wIDZjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yeiIvPgogICAgPC9zdmc+CiAgICA8c2VsZWN0IGNsYXNzPSJVbml0SGVhZGVyLW92ZXJmbG93U2VsZWN0IGpzLW92ZXJmbG93U2VsZWN0IiB0YWJpbmRleD0iLTEiPgogICAgICA8b3B0aW9uPk1haW48L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjM/dGFiPXZlcnNpb25zIj4KICAgICAgICBWZXJzaW9ucwogICAgICA8L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjM/dGFiPWxpY2Vuc2VzIj4KICAgICAgICBMaWNlbnNlcwogICAgICA8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjM/dGFiPWltcG9ydHMiPgogICAgICAgICAgSW1wb3J0cwogICAgICAgIDwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Ii9naXRodWIuY29tL3JvYmZpZy9jcm9uL3YzP3RhYj1pbXBvcnRlZGJ5Ij4KICAgICAgICAgIEltcG9ydGVkIEJ5CiAgICAgICAgPC9vcHRpb24+CiAgICAgIAogICAgPC9zZWxlY3Q+CiAgPC9kaXY+CgogICAgPC9kaXY+CiAgPC9kaXY+CgogIDwvaGVhZGVyPgoKICAgIAogIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzIiBkYXRhLXRlc3QtaWQ9IlVuaXREZXRhaWxzIj4KICAgIAogIDxuYXYgY2xhc3M9IkRvY05hdk1vYmlsZSBqcy1tb2JpbGVOYXYiPgogICAgPGxhYmVsIGZvcj0iRG9jTmF2TW9iaWxlLXNlbGVjdCIgY2xhc3M9IkRvY05hdk1vYmlsZS1sYWJlbCI+CiAgICAgIDxzdmcgY2xhc3M9IkRvY05hdk1vYmlsZS1zZWxlY3RJY29uIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0iYmxhY2siIHdpZHRoPSIxOHB4IiBoZWlnaHQ9IjE4cHgiPgogICAgICAgIDxwYXRoIGQ9Ik0wIDBoMjR2MjRIMHoiIGZpbGw9Im5vbmUiLz48cGF0aCBkPSJNMyA5aDE0VjdIM3Yyem0wIDRoMTR2LTJIM3Yyem0wIDRoMTR2LTJIM3Yyem0xNiAwaDJ2LTJoLTJ2MnptMC0xMHYyaDJWN2gtMnptMCA2aDJ2LTJoLTJ2MnoiLz4KICAgICAgPC9zdmc+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2NOYXZNb2JpbGUtc2VsZWN0VGV4dCBqcy1tb2JpbGVOYXZTZWxlY3RUZXh0Ij5PdXRsaW5lPC9zcGFuPgogICAgPC9sYWJlbD4KICAgIDxzZWxlY3QgaWQ9IkRvY05hdk1vYmlsZS1zZWxlY3QiIGNsYXNzPSJEb2NOYXZNb2JpbGUtc2VsZWN0Ij4KICAgICAgPG9wdGlvbiB2YWx1ZT0iIj5PdXRsaW5lPC9vcHRpb24+CiAgICAgIDxvcHRncm91cCBsYWJlbD0iUkVBRE1FIj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJyZWFkbWUtdXBncmFkaW5nLXRvLXYzLWp1bmUtMjAxOSI+VXBncmFkaW5nIHRvIHYzIChKdW5lIDIwMTkpPC9vcHRpb24+CiAgICAgIDwvb3B0Z3JvdXA+CiAgICAgIAoKPG9wdGdyb3VwIGxhYmVsPSJEb2N1bWVudGF0aW9uIj4KICAKICAgIDxvcHRpb24gdmFsdWU9InBrZy1vdmVydmlldyI+T3ZlcnZpZXc8L29wdGlvbj4KICAKICAKICAgIDxvcHRpb24gdmFsdWU9InBrZy1pbmRleCI+SW5kZXg8L29wdGlvbj4KICAKICAKICAKICAKPC9vcHRncm91cD4KCgogIDxvcHRncm91cCBsYWJlbD0iVHlwZXMiPgogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJDaGFpbiI+dHlwZSBDaGFpbjwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXdDaGFpbiI+TmV3Q2hhaW4oYyk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNoYWluLlRoZW4iPihjKSBUaGVuKGopPC9vcHRpb24+CiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJDb25zdGFudERlbGF5U2NoZWR1bGUiPnR5cGUgQ29uc3RhbnREZWxheVNjaGVkdWxlPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkV2ZXJ5Ij5FdmVyeShkdXJhdGlvbik8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNvbnN0YW50RGVsYXlTY2hlZHVsZS5OZXh0Ij4oc2NoZWR1bGUpIE5leHQodCk8L29wdGlvbj4KICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24iPnR5cGUgQ3Jvbjwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXciPk5ldyhvcHRzKTwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5BZGRGdW5jIj4oYykgQWRkRnVuYyhzcGVjLCBjbWQpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uQWRkSm9iIj4oYykgQWRkSm9iKHNwZWMsIGNtZCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5FbnRyaWVzIj4oYykgRW50cmllcygpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uRW50cnkiPihjKSBFbnRyeShpZCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5Mb2NhdGlvbiI+KGMpIExvY2F0aW9uKCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5SZW1vdmUiPihjKSBSZW1vdmUoaWQpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uUnVuIj4oYykgUnVuKCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5TY2hlZHVsZSI+KGMpIFNjaGVkdWxlKHNjaGVkdWxlLCBjbWQpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uU3RhcnQiPihjKSBTdGFydCgpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uU3RvcCI+KGMpIFN0b3AoKTwvb3B0aW9uPgogICAgICAKICAgIAogICAgICAKICAgICAgPG9wdGlvbiB2YWx1ZT0iRW50cnkiPnR5cGUgRW50cnk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkVudHJ5LlZhbGlkIj4oZSkgVmFsaWQoKTwvb3B0aW9uPgogICAgICAKICAgIAogICAgICAKICAgICAgPG9wdGlvbiB2YWx1ZT0iRW50cnlJRCI+dHlwZSBFbnRyeUlEPC9vcHRpb24+CiAgICAgIAogICAgICAKICAgIAogICAgICAKICAgICAgPG9wdGlvbiB2YWx1ZT0iRnVuY0pvYiI+dHlwZSBGdW5jSm9iPC9vcHRpb24+CiAgICAgIAogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJGdW5jSm9iLlJ1biI+KGYpIFJ1bigpPC9vcHRpb24+CiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJKb2IiPnR5cGUgSm9iPC9vcHRpb24+CiAgICAgIAogICAgICAKICAgIAogICAgICAKICAgICAgPG9wdGlvbiB2YWx1ZT0iSm9iV3JhcHBlciI+dHlwZSBKb2JXcmFwcGVyPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkRlbGF5SWZTdGlsbFJ1bm5pbmciPkRlbGF5SWZTdGlsbFJ1bm5pbmcobG9nZ2VyKTwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJSZWNvdmVyIj5SZWNvdmVyKGxvZ2dlcik8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iU2tpcElmU3RpbGxSdW5uaW5nIj5Ta2lwSWZTdGlsbFJ1bm5pbmcobG9nZ2VyKTwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IkxvZ2dlciI+dHlwZSBMb2dnZXI8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iUHJpbnRmTG9nZ2VyIj5QcmludGZMb2dnZXIobCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iVmVyYm9zZVByaW50ZkxvZ2dlciI+VmVyYm9zZVByaW50ZkxvZ2dlcihsKTwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9Ik9wdGlvbiI+dHlwZSBPcHRpb248L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV2l0aENoYWluIj5XaXRoQ2hhaW4od3JhcHBlcnMpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IldpdGhMb2NhdGlvbiI+V2l0aExvY2F0aW9uKGxvYyk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV2l0aExvZ2dlciI+V2l0aExvZ2dlcihsb2dnZXIpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IldpdGhQYXJzZXIiPldpdGhQYXJzZXIocCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV2l0aFNlY29uZHMiPldpdGhTZWNvbmRzKCk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJQYXJzZU9wdGlvbiI+dHlwZSBQYXJzZU9wdGlvbjwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IlBhcnNlciI+dHlwZSBQYXJzZXI8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTmV3UGFyc2VyIj5OZXdQYXJzZXIob3B0aW9ucyk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IlBhcnNlci5QYXJzZSI+KHApIFBhcnNlKHNwZWMpPC9vcHRpb24+CiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJTY2hlZHVsZSI+dHlwZSBTY2hlZHVsZTwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJQYXJzZVN0YW5kYXJkIj5QYXJzZVN0YW5kYXJkKHN0YW5kYXJkU3BlYyk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJTY2hlZHVsZVBhcnNlciI+dHlwZSBTY2hlZHVsZVBhcnNlcjwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IlNwZWNTY2hlZHVsZSI+dHlwZSBTcGVjU2NoZWR1bGU8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IlNwZWNTY2hlZHVsZS5OZXh0Ij4ocykgTmV4dCh0KTwvb3B0aW9uPgogICAgICAKICAgICAKICA8L29wdGdyb3VwPgoKCgogICAgICA8b3B0aW9uIGNsYXNzPSJqcy1zb3VyY2VmaWxlc09wdGlvbiIgdmFsdWU9InNlY3Rpb24tc291cmNlZmlsZXMiPlNvdXJjZSBGaWxlczwvb3B0aW9uPgogICAgICA8b3B0aW9uIGNsYXNzPSJqcy1kaXJlY3Rvcmllc09wdGlvbiIgdmFsdWU9InNlY3Rpb24tZGlyZWN0b3JpZXMiPkRpcmVjdG9yaWVzPC9vcHRpb24+CiAgICA8L3NlbGVjdD4KICA8L25hdj4KCiAgICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscy1vdXRsaW5lIiByb2xlPSJuYXZpZ2F0aW9uIgogICAgICAgIGFyaWEtbGFiZWw9InBhY2thZ2VkZXRhaWxzIG5hdmlnYXRpb24iPgogICAgICAKICA8ZGl2IGNsYXNzPSJVbml0T3V0bGluZSI+CiAgICA8ZGl2IGNsYXNzPSJVbml0T3V0bGluZS1qdW1wVG8iPgogICAgICA8YnV0dG9uIGNsYXNzPSJVbml0T3V0bGluZS1qdW1wVG9JbnB1dCBqcy1qdW1wVG9JbnB1dCI+CiAgICAgICAgSnVtcCB0byAuLi4KICAgICAgPC9idXR0b24+CiAgICA8L2Rpdj4KICAgIDx1bCBjbGFzcz0ianMtdHJlZSIgcm9sZT0idHJlZSIgYXJpYS1sYWJlbD0iT3V0bGluZSI+CiAgICAgIAogICAgICAgIDxsaSByb2xlPSJub25lIiBjbGFzcz0ianMtcmVhZG1lT3V0bGluZSI+CiAgICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1yZWFkbWUiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1zZWxlY3RlZD0iZmFsc2UiCiAgICAgICAgICAgICAgYXJpYS1sZXZlbD0iMSIgYXJpYS1vd25zPSJyZWFkbWUtb3V0bGluZSIgdGFiaW5kZXg9IjAiPgogICAgICAgICAgICBSRUFETUUKICAgICAgICAgIDwvYT4KICAgICAgICAgIAogIDx1bCByb2xlPSJncm91cCIgaWQ9InJlYWRtZS1vdXRsaW5lIj4KICAgIAogICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS11cGdyYWRpbmctdG8tdjMtanVuZS0yMDE5IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgYXJpYS1vd25zPSJuYXYtZ3JvdXAtcmVhZG1lIgogICAgICAgICAgICB0YWJpbmRleD0iLTEiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgIFVwZ3JhZGluZyB0byB2MyAoSnVuZSAyMDE5KQogICAgICAgIDwvYT4KICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYtZ3JvdXAtcmVhZG1lIj4KICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1iYWNrZ3JvdW5kLWNyb24tc3BlYy1mb3JtYXQiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICAgICAgICBCYWNrZ3JvdW5kIC0gQ3JvbiBzcGVjIGZvcm1hdAogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAKICAgICAgICA8L3VsPgogICAgICA8L2xpPgogICAgCiAgPC91bD4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgIAogICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLWRvY3VtZW50YXRpb24iIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sZXZlbD0iMSIKICAgICAgICAgICAgICBhcmlhLXNlbGVjdGVkPSJmYWxzZSJhcmlhLW93bnM9ImRvYy1vdXRsaW5lIiB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgICA8L2E+CiAgICAgICAgICAKPHVsIHJvbGU9Imdyb3VwIiBpZD0iZG9jLW91dGxpbmUiPgogIAogICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICA8YSBocmVmPSIjcGtnLW92ZXJ2aWV3IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgdGFiaW5kZXg9Ii0xIj5PdmVydmlldzwvYT4KICAgIDwvbGk+CiAgPGxpIGNsYXNzPSJEb2NOYXYtb3ZlcnZpZXciIHJvbGU9Im5vbmUiPgogICAgICA8YSBocmVmPSIjcGtnLWluZGV4IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgdGFiaW5kZXg9Ii0xIiBhcmlhLW93bnM9Im5hdi1ncm91cC1pbmRleCIKICAgICAgICAgID4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyIgcm9sZT0ibm9uZSI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgdGFiaW5kZXg9Ii0xIj5Db25zdGFudHM8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIiByb2xlPSJub25lIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIyIiB0YWJpbmRleD0iLTEiPlZhcmlhYmxlczwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiIHJvbGU9Im5vbmUiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjIiIHRhYmluZGV4PSItMSIgYXJpYS1vd25zPSJuYXYtZ3JvdXAtZnVuY3Rpb25zIgogICAgICAgICAgID4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYtZ3JvdXAtZnVuY3Rpb25zIj4KICAgICAgICAKICAgICAgPC91bD4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi10eXBlcyIgcm9sZT0ibm9uZSI+CiAgICAgIDxhIGhyZWY9IiNwa2ctdHlwZXMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIyIiB0YWJpbmRleD0iLTEiIGFyaWEtb3ducz0ibmF2LWdyb3VwLXR5cGVzIgogICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICBUeXBlcwogICAgICA8L2E+CiAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi1ncm91cC10eXBlcyI+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0NoYWluIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuQ2hhaW4iPgogICAgICAgICAgICAgICAgdHlwZSBDaGFpbgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuQ2hhaW4iPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTmV3Q2hhaW4iIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJOZXdDaGFpbihjKSI+CiAgICAgICAgICAgICAgICAgICAgICBOZXdDaGFpbihjKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjQ2hhaW4uVGhlbiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBUaGVuKGopIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBUaGVuKGopCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuQ29uc3RhbnREZWxheVNjaGVkdWxlIj4KICAgICAgICAgICAgICAgIHR5cGUgQ29uc3RhbnREZWxheVNjaGVkdWxlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi5ncm91cC5Db25zdGFudERlbGF5U2NoZWR1bGUiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjRXZlcnkiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJFdmVyeShkdXJhdGlvbikiPgogICAgICAgICAgICAgICAgICAgICAgRXZlcnkoZHVyYXRpb24pCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUuTmV4dCIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihzY2hlZHVsZSkgTmV4dCh0KSI+CiAgICAgICAgICAgICAgICAgICAgICAoc2NoZWR1bGUpIE5leHQodCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuQ3JvbiI+CiAgICAgICAgICAgICAgICB0eXBlIENyb24KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPHVsIHJvbGU9Imdyb3VwIiBpZD0ibmF2Lmdyb3VwLkNyb24iPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTmV3IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iTmV3KG9wdHMpIj4KICAgICAgICAgICAgICAgICAgICAgIE5ldyhvcHRzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjQ3Jvbi5BZGRGdW5jIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGMpIEFkZEZ1bmMoc3BlYywgY21kKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgQWRkRnVuYyhzcGVjLCBjbWQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjQ3Jvbi5BZGRKb2IiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoYykgQWRkSm9iKHNwZWMsIGNtZCkiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIEFkZEpvYihzcGVjLCBjbWQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjQ3Jvbi5FbnRyaWVzIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGMpIEVudHJpZXMoKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgRW50cmllcygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjQ3Jvbi5FbnRyeSIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBFbnRyeShpZCkiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIEVudHJ5KGlkKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Nyb24uTG9jYXRpb24iIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoYykgTG9jYXRpb24oKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgTG9jYXRpb24oKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Nyb24uUmVtb3ZlIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGMpIFJlbW92ZShpZCkiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFJlbW92ZShpZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLlJ1biIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBSdW4oKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgUnVuKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLlNjaGVkdWxlIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGMpIFNjaGVkdWxlKHNjaGVkdWxlLCBjbWQpIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBTY2hlZHVsZShzY2hlZHVsZSwgY21kKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Nyb24uU3RhcnQiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoYykgU3RhcnQoKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgU3RhcnQoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Nyb24uU3RvcCIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBTdG9wKCkiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFN0b3AoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0VudHJ5IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuRW50cnkiPgogICAgICAgICAgICAgICAgdHlwZSBFbnRyeQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuRW50cnkiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNFbnRyeS5WYWxpZCIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihlKSBWYWxpZCgpIj4KICAgICAgICAgICAgICAgICAgICAgIChlKSBWYWxpZCgpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjRW50cnlJRCIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSI+CiAgICAgICAgICAgICAgICB0eXBlIEVudHJ5SUQKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0Z1bmNKb2IiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sZXZlbD0iMyIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgZGF0YS1hcmlhLW93bnM9Im5hdi5ncm91cC5GdW5jSm9iIj4KICAgICAgICAgICAgICAgIHR5cGUgRnVuY0pvYgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuRnVuY0pvYiI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Z1bmNKb2IuUnVuIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGYpIFJ1bigpIj4KICAgICAgICAgICAgICAgICAgICAgIChmKSBSdW4oKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0pvYiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSI+CiAgICAgICAgICAgICAgICB0eXBlIEpvYgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjSm9iV3JhcHBlciIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICBkYXRhLWFyaWEtb3ducz0ibmF2Lmdyb3VwLkpvYldyYXBwZXIiPgogICAgICAgICAgICAgICAgdHlwZSBKb2JXcmFwcGVyCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi5ncm91cC5Kb2JXcmFwcGVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0RlbGF5SWZTdGlsbFJ1bm5pbmciIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJEZWxheUlmU3RpbGxSdW5uaW5nKGxvZ2dlcikiPgogICAgICAgICAgICAgICAgICAgICAgRGVsYXlJZlN0aWxsUnVubmluZyhsb2dnZXIpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUmVjb3ZlciIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IlJlY292ZXIobG9nZ2VyKSI+CiAgICAgICAgICAgICAgICAgICAgICBSZWNvdmVyKGxvZ2dlcikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNTa2lwSWZTdGlsbFJ1bm5pbmciIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJTa2lwSWZTdGlsbFJ1bm5pbmcobG9nZ2VyKSI+CiAgICAgICAgICAgICAgICAgICAgICBTa2lwSWZTdGlsbFJ1bm5pbmcobG9nZ2VyKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjTG9nZ2VyIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuTG9nZ2VyIj4KICAgICAgICAgICAgICAgIHR5cGUgTG9nZ2VyCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi5ncm91cC5Mb2dnZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUHJpbnRmTG9nZ2VyIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iUHJpbnRmTG9nZ2VyKGwpIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW50ZkxvZ2dlcihsKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1ZlcmJvc2VQcmludGZMb2dnZXIiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJWZXJib3NlUHJpbnRmTG9nZ2VyKGwpIj4KICAgICAgICAgICAgICAgICAgICAgIFZlcmJvc2VQcmludGZMb2dnZXIobCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI09wdGlvbiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICBkYXRhLWFyaWEtb3ducz0ibmF2Lmdyb3VwLk9wdGlvbiI+CiAgICAgICAgICAgICAgICB0eXBlIE9wdGlvbgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuT3B0aW9uIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhDaGFpbiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IldpdGhDaGFpbih3cmFwcGVycykiPgogICAgICAgICAgICAgICAgICAgICAgV2l0aENoYWluKHdyYXBwZXJzKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhMb2NhdGlvbiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IldpdGhMb2NhdGlvbihsb2MpIj4KICAgICAgICAgICAgICAgICAgICAgIFdpdGhMb2NhdGlvbihsb2MpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aExvZ2dlciIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IldpdGhMb2dnZXIobG9nZ2VyKSI+CiAgICAgICAgICAgICAgICAgICAgICBXaXRoTG9nZ2VyKGxvZ2dlcikKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoUGFyc2VyIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iV2l0aFBhcnNlcihwKSI+CiAgICAgICAgICAgICAgICAgICAgICBXaXRoUGFyc2VyKHApCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aFNlY29uZHMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJXaXRoU2Vjb25kcygpIj4KICAgICAgICAgICAgICAgICAgICAgIFdpdGhTZWNvbmRzKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI1BhcnNlT3B0aW9uIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMyIgdGFiaW5kZXg9Ii0xIj4KICAgICAgICAgICAgICAgIHR5cGUgUGFyc2VPcHRpb24KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI1BhcnNlciIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICBkYXRhLWFyaWEtb3ducz0ibmF2Lmdyb3VwLlBhcnNlciI+CiAgICAgICAgICAgICAgICB0eXBlIFBhcnNlcgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuUGFyc2VyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI05ld1BhcnNlciIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9Ik5ld1BhcnNlcihvcHRpb25zKSI+CiAgICAgICAgICAgICAgICAgICAgICBOZXdQYXJzZXIob3B0aW9ucykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1BhcnNlci5QYXJzZSIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihwKSBQYXJzZShzcGVjKSI+CiAgICAgICAgICAgICAgICAgICAgICAocCkgUGFyc2Uoc3BlYykKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9IiNTY2hlZHVsZSIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICBkYXRhLWFyaWEtb3ducz0ibmF2Lmdyb3VwLlNjaGVkdWxlIj4KICAgICAgICAgICAgICAgIHR5cGUgU2NoZWR1bGUKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPHVsIHJvbGU9Imdyb3VwIiBpZD0ibmF2Lmdyb3VwLlNjaGVkdWxlIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1BhcnNlU3RhbmRhcmQiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJQYXJzZVN0YW5kYXJkKHN0YW5kYXJkU3BlYykiPgogICAgICAgICAgICAgICAgICAgICAgUGFyc2VTdGFuZGFyZChzdGFuZGFyZFNwZWMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9IiNTY2hlZHVsZVBhcnNlciIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSI+CiAgICAgICAgICAgICAgICB0eXBlIFNjaGVkdWxlUGFyc2VyCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9IiNTcGVjU2NoZWR1bGUiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sZXZlbD0iMyIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgZGF0YS1hcmlhLW93bnM9Im5hdi5ncm91cC5TcGVjU2NoZWR1bGUiPgogICAgICAgICAgICAgICAgdHlwZSBTcGVjU2NoZWR1bGUKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPHVsIHJvbGU9Imdyb3VwIiBpZD0ibmF2Lmdyb3VwLlNwZWNTY2hlZHVsZSI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NwZWNTY2hlZHVsZS5OZXh0IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKHMpIE5leHQodCkiPgogICAgICAgICAgICAgICAgICAgICAgKHMpIE5leHQodCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgICAKICAgICAgPC91bD4KICAgIDwvbGk+CiAgCiAgCjwvdWw+CgogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAKICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1zb3VyY2VmaWxlcyIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIgogICAgICAgICAgICAgIGFyaWEtc2VsZWN0ZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIxIiB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICBTb3VyY2UgRmlsZXMKICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAKICAgICAgCiAgICA8L3VsPgogIDwvZGl2PgoKICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iVW5pdERldGFpbHMtY29udGVudCBqcy11bml0RGV0YWlsc0NvbnRlbnQiIHJvbGU9Im1haW4iIGRhdGEtdGVzdC1pZD0iVW5pdERldGFpbHMtY29udGVudCI+CiAgICAgIAogICAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXRSZWFkbWUgIGpzLXJlYWRtZSI+CiAgICA8aDIgY2xhc3M9IlVuaXRSZWFkbWUtdGl0bGUiIGlkPSJzZWN0aW9uLXJlYWRtZSI+CiAgICAgIDxpbWcgaGVpZ2h0PSIyNXB4IiB3aWR0aD0iMjBweCIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1yZWFkbWVfMjB4MTYuc3ZnIiBhbHQ9IiI+UkVBRE1FCiAgICAgIDxhIGNsYXNzPSJVbml0UmVhZG1lLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tcmVhZG1lIj7CtjwvYT4KICAgIDwvaDI+CiAgICAKICAgICAgPGRpdiBjbGFzcz0iVW5pdFJlYWRtZS1jb250ZW50IiBkYXRhLXRlc3QtaWQ9IlVuaXQtcmVhZG1lQ29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0iT3ZlcnZpZXctcmVhZG1lQ29udGVudCBqcy1yZWFkbWVDb250ZW50Ij48cD48YSBocmVmPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24iIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24/c3RhdHVzLnBuZyIgYWx0PSJHb0RvYyIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL3JvYmZpZy9jcm9uIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL3JvYmZpZy9jcm9uLnN2Zz9icmFuY2g9bWFzdGVyIiBhbHQ9IkJ1aWxkIFN0YXR1cyIvPjwvYT48L3A+CjxoMyBjbGFzcz0iaDEiIGlkPSJyZWFkbWUtY3JvbiI+Y3JvbjwvaDM+CjxwPkNyb24gVjMgaGFzIGJlZW4gcmVsZWFzZWQhPC9wPgo8cD5UbyBkb3dubG9hZCB0aGUgc3BlY2lmaWMgdGFnZ2VkIHJlbGVhc2UsIHJ1bjo8L3A+CjxwcmU+PGNvZGU+Z28gZ2V0IGdpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjNAdjMuMC4wCjwvY29kZT48L3ByZT4KPHA+SW1wb3J0IGl0IGluIHlvdXIgcHJvZ3JhbSBhczo8L3A+CjxwcmU+PGNvZGU+aW1wb3J0ICYjMzQ7Z2l0aHViLmNvbS9yb2JmaWcvY3Jvbi92MyYjMzQ7CjwvY29kZT48L3ByZT4KPHA+SXQgcmVxdWlyZXMgR28gMS4xMSBvciBsYXRlciBkdWUgdG8gdXNhZ2Ugb2YgR28gTW9kdWxlcy48L3A+CjxwPlJlZmVyIHRvIHRoZSBkb2N1bWVudGF0aW9uIGhlcmU6CjxhIGhyZWY9Imh0dHA6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9yb2JmaWcvY3JvbiIgcmVsPSJub2ZvbGxvdyI+aHR0cDovL2dvZG9jLm9yZy9naXRodWIuY29tL3JvYmZpZy9jcm9uPC9hPjwvcD4KPHA+VGhlIHJlc3Qgb2YgdGhpcyBkb2N1bWVudCBkZXNjcmliZXMgdGhlIHRoZSBhZHZhbmNlcyBpbiB2MyBhbmQgYSBsaXN0IG9mCmJyZWFraW5nIGNoYW5nZXMgZm9yIHVzZXJzIHRoYXQgd2lzaCB0byB1cGdyYWRlIGZyb20gYW4gZWFybGllciB2ZXJzaW9uLjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS11cGdyYWRpbmctdG8tdjMtanVuZS0yMDE5Ij5VcGdyYWRpbmcgdG8gdjMgKEp1bmUgMjAxOSk8L2g0Pgo8cD5jcm9uIHYzIGlzIGEgbWFqb3IgdXBncmFkZSB0byB0aGUgbGlicmFyeSB0aGF0IGFkZHJlc3NlcyBhbGwgb3V0c3RhbmRpbmcgYnVncywKZmVhdHVyZSByZXF1ZXN0cywgYW5kIHJvdWdoIGVkZ2VzLiBJdCBpcyBiYXNlZCBvbiBhIG1lcmdlIG9mIG1hc3RlciB3aGljaApjb250YWlucyB2YXJpb3VzIGZpeGVzIHRvIGlzc3VlcyBmb3VuZCBvdmVyIHRoZSB5ZWFycyBhbmQgdGhlIHYyIGJyYW5jaCB3aGljaApjb250YWlucyBzb21lIGJhY2t3YXJkcy1pbmNvbXBhdGlibGUgZmVhdHVyZXMgbGlrZSB0aGUgYWJpbGl0eSB0byByZW1vdmUgY3Jvbgpqb2JzLiBJbiBhZGRpdGlvbiwgdjMgYWRkcyBzdXBwb3J0IGZvciBHbyBNb2R1bGVzLCBjbGVhbnMgdXAgcm91Z2ggZWRnZXMgbGlrZQp0aGUgdGltZXpvbmUgc3VwcG9ydCwgYW5kIGZpeGVzIGEgbnVtYmVyIG9mIGJ1Z3MuPC9wPgo8cD5OZXcgZmVhdHVyZXM6PC9wPgo8dWw+CjxsaT4KPHA+U3VwcG9ydCBmb3IgR28gbW9kdWxlcy4gQ2FsbGVycyBtdXN0IG5vdyBpbXBvcnQgdGhpcyBsaWJyYXJ5IGFzCjxjb2RlPmdpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjM8L2NvZGU+LCBpbnN0ZWFkIG9mIDxjb2RlPmdvcGtnLmluLy4uLjwvY29kZT48L3A+CjwvbGk+CjxsaT4KPHA+Rml4ZWQgYnVnczo8L3A+Cjx1bD4KPGxpPjBmMDFlNmIgcGFyc2VyOiBmaXggY29tYmluaW5nIG9mIERvdyBhbmQgRG9tICgjNzApPC9saT4KPGxpPmRiZjMyMjAgYWRqdXN0IHRpbWVzIHdoZW4gcm9sbGluZyB0aGUgY2xvY2sgZm9yd2FyZCB0byBoYW5kbGUgbm9uLWV4aXN0ZW50IG1pZG5pZ2h0ICgjMTU3KTwvbGk+CjxsaT5lZWVjZjE1IHNwZWNfdGVzdC5nbzogZW5zdXJlIGFuIGVycm9yIGlzIHJldHVybmVkIG9uIDAgaW5jcmVtZW50ICgjMTQ0KTwvbGk+CjxsaT43MDk3MWRjIGNyb24uRW50cmllcygpOiB1cGRhdGUgcmVxdWVzdCBmb3Igc25hcHNob3QgdG8gaW5jbHVkZSBhIHJlcGx5IGNoYW5uZWwgKCM5Nyk8L2xpPgo8bGk+MWNiYTVlNiBjcm9uOiBmaXg6IHJlbW92aW5nIGEgam9iIGNhdXNlcyB0aGUgbmV4dCBzY2hlZHVsZWQgam9iIHRvIHJ1biB0b28gbGF0ZSAoIzIwNik8L2xpPgo8L3VsPgo8L2xpPgo8bGk+CjxwPlN0YW5kYXJkIGNyb24gc3BlYyBwYXJzaW5nIGJ5IGRlZmF1bHQgKGZpcnN0IGZpZWxkIGlzICYjMzQ7bWludXRlJiMzNDspLCB3aXRoIGFuIGVhc3kKd2F5IHRvIG9wdCBpbnRvIHRoZSBzZWNvbmRzIGZpZWxkIChxdWFydHotY29tcGF0aWJsZSkuIEFsdGhvdWdoLCBub3RlIHRoYXQgdGhlCnllYXIgZmllbGQgKG9wdGlvbmFsIGluIFF1YXJ0eikgaXMgbm90IHN1cHBvcnRlZC48L3A+CjwvbGk+CjxsaT4KPHA+RXh0ZW5zaWJsZSwga2V5L3ZhbHVlIGxvZ2dpbmcgdmlhIGFuIGludGVyZmFjZSB0aGF0IGNvbXBsaWVzIHdpdGgKdGhlIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby1sb2dyL2xvZ3IiIHJlbD0ibm9mb2xsb3ciPmh0dHBzOi8vZ2l0aHViLmNvbS9nby1sb2dyL2xvZ3I8L2E+IHByb2plY3QuPC9wPgo8L2xpPgo8bGk+CjxwPlRoZSBuZXcgQ2hhaW4gJmFtcDsgSm9iV3JhcHBlciB0eXBlcyBhbGxvdyB5b3UgdG8gaW5zdGFsbCAmIzM0O2ludGVyY2VwdG9ycyYjMzQ7IHRvIGFkZApjcm9zcy1jdXR0aW5nIGJlaGF2aW9yIGxpa2UgdGhlIGZvbGxvd2luZzo8L3A+Cjx1bD4KPGxpPlJlY292ZXIgYW55IHBhbmljcyBmcm9tIGpvYnM8L2xpPgo8bGk+RGVsYXkgYSBqb2ImIzM5O3MgZXhlY3V0aW9uIGlmIHRoZSBwcmV2aW91cyBydW4gaGFzbiYjMzk7dCBjb21wbGV0ZWQgeWV0PC9saT4KPGxpPlNraXAgYSBqb2ImIzM5O3MgZXhlY3V0aW9uIGlmIHRoZSBwcmV2aW91cyBydW4gaGFzbiYjMzk7dCBjb21wbGV0ZWQgeWV0PC9saT4KPGxpPkxvZyBlYWNoIGpvYiYjMzk7cyBpbnZvY2F0aW9uczwvbGk+CjxsaT5Ob3RpZmljYXRpb24gd2hlbiBqb2JzIGFyZSBjb21wbGV0ZWQ8L2xpPgo8L3VsPgo8L2xpPgo8L3VsPgo8cD5JdCBpcyBiYWNrd2FyZHMgaW5jb21wYXRpYmxlIHdpdGggYm90aCB2MSBhbmQgdjIuIFRoZXNlIHVwZGF0ZXMgYXJlIHJlcXVpcmVkOjwvcD4KPHVsPgo8bGk+CjxwPlRoZSB2MSBicmFuY2ggYWNjZXB0ZWQgYW4gb3B0aW9uYWwgc2Vjb25kcyBmaWVsZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBjcm9uCnNwZWMuIFRoaXMgaXMgbm9uLXN0YW5kYXJkIGFuZCBoYXMgbGVkIHRvIGEgbG90IG9mIGNvbmZ1c2lvbi4gVGhlIG5ldyBkZWZhdWx0CnBhcnNlciBjb25mb3JtcyB0byB0aGUgc3RhbmRhcmQgYXMgZGVzY3JpYmVkIGJ5IDxhIGhyZWY9Imh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Nyb24iIHJlbD0ibm9mb2xsb3ciPnRoZSBDcm9uIHdpa2lwZWRpYSBwYWdlPC9hPi48L3A+CjxwPlVQREFUSU5HOiBUbyByZXRhaW4gdGhlIG9sZCBiZWhhdmlvciwgY29uc3RydWN0IHlvdXIgQ3JvbiB3aXRoIGEgY3VzdG9tCnBhcnNlcjo8L3A+CjxwcmU+PGNvZGU+Ly8gU2Vjb25kcyBmaWVsZCwgcmVxdWlyZWQKY3Jvbi5OZXcoY3Jvbi5XaXRoU2Vjb25kcygpKQoKLy8gU2Vjb25kcyBmaWVsZCwgb3B0aW9uYWwKY3Jvbi5OZXcoCiAgICBjcm9uLldpdGhQYXJzZXIoCiAgICAgICAgY3Jvbi5TZWNvbmRPcHRpb25hbCB8IGNyb24uTWludXRlIHwgY3Jvbi5Ib3VyIHwgY3Jvbi5Eb20gfCBjcm9uLk1vbnRoIHwgY3Jvbi5Eb3cgfCBjcm9uLkRlc2NyaXB0b3IpKQo8L2NvZGU+PC9wcmU+CjwvbGk+CjxsaT4KPHA+VGhlIENyb24gdHlwZSBub3cgYWNjZXB0cyBmdW5jdGlvbmFsIG9wdGlvbnMgb24gY29uc3RydWN0aW9uIHJhdGhlciB0aGFuIHRoZQpwcmV2aW91cyBhZC1ob2MgYmVoYXZpb3IgbW9kaWZpY2F0aW9uIG1lY2hhbmlzbXMgKHNldHRpbmcgYSBmaWVsZCwgY2FsbGluZyBhIHNldHRlcikuPC9wPgo8cD5VUERBVElORzogQ29kZSB0aGF0IHNldHMgQ3Jvbi5FcnJvckxvZ2dlciBvciBjYWxscyBDcm9uLlNldExvY2F0aW9uIG11c3QgYmUKdXBkYXRlZCB0byBwcm92aWRlIHRob3NlIHZhbHVlcyBvbiBjb25zdHJ1Y3Rpb24uPC9wPgo8L2xpPgo8bGk+CjxwPkNST05fVFogaXMgbm93IHRoZSByZWNvbW1lbmRlZCB3YXkgdG8gc3BlY2lmeSB0aGUgdGltZXpvbmUgb2YgYSBzaW5nbGUKc2NoZWR1bGUsIHdoaWNoIGlzIHNhbmN0aW9uZWQgYnkgdGhlIHNwZWNpZmljYXRpb24uIFRoZSBsZWdhY3kgJiMzNDtUWj0mIzM0OyBwcmVmaXgKd2lsbCBjb250aW51ZSB0byBiZSBzdXBwb3J0ZWQgc2luY2UgaXQgaXMgdW5hbWJpZ3VvdXMgYW5kIGVhc3kgdG8gZG8gc28uPC9wPgo8cD5VUERBVElORzogTm8gdXBkYXRlIGlzIHJlcXVpcmVkLjwvcD4KPC9saT4KPGxpPgo8cD5CeSBkZWZhdWx0LCBjcm9uIHdpbGwgbm8gbG9uZ2VyIHJlY292ZXIgcGFuaWNzIGluIGpvYnMgdGhhdCBpdCBydW5zLgpSZWNvdmVyaW5nIGNhbiBiZSBzdXJwcmlzaW5nIChzZWUgaXNzdWUgIzE5MikgYW5kIHNlZW1zIHRvIGJlIGF0IG9kZHMgd2l0aAp0eXBpY2FsIGJlaGF2aW9yIG9mIGxpYnJhcmllcy4gUmVsYXRlZGx5LCB0aGUgPGNvZGU+Y3Jvbi5XaXRoUGFuaWNMb2dnZXI8L2NvZGU+IG9wdGlvbgpoYXMgYmVlbiByZW1vdmVkIHRvIGFjY29tbW9kYXRlIHRoZSBtb3JlIGdlbmVyYWwgSm9iV3JhcHBlciB0eXBlLjwvcD4KPHA+VVBEQVRJTkc6IFRvIG9wdCBpbnRvIHBhbmljIHJlY292ZXJ5IGFuZCBjb25maWd1cmUgdGhlIHBhbmljIGxvZ2dlcjo8L3A+CjxwcmU+PGNvZGU+Y3Jvbi5OZXcoY3Jvbi5XaXRoQ2hhaW4oCiAgICBjcm9uLlJlY292ZXIobG9nZ2VyKSwgIC8vIG9yIHVzZSBjcm9uLkRlZmF1bHRMb2dnZXIKKSkKPC9jb2RlPjwvcHJlPgo8L2xpPgo8bGk+CjxwPkluIGFkZGluZyBzdXBwb3J0IGZvciA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ28tbG9nci9sb2dyLCIgcmVsPSJub2ZvbGxvdyI+aHR0cHM6Ly9naXRodWIuY29tL2dvLWxvZ3IvbG9nciw8L2E+IDxjb2RlPmNyb24uV2l0aFZlcmJvc2VMb2dnZXI8L2NvZGU+IHdhcwpyZW1vdmVkLCBzaW5jZSBpdCBpcyBkdXBsaWNhdGl2ZSB3aXRoIHRoZSBsZXZlbGVkIGxvZ2dpbmcuPC9wPgo8cD5VUERBVElORzogQ2FsbGVycyBzaG91bGQgdXNlIDxjb2RlPldpdGhMb2dnZXI8L2NvZGU+IGFuZCBzcGVjaWZ5IGEgbG9nZ2VyIHRoYXQgZG9lcyBub3QKZGlzY2FyZCA8Y29kZT5JbmZvPC9jb2RlPiBsb2dzLiBGb3IgY29udmVuaWVuY2UsIG9uZSBpcyBwcm92aWRlZCB0aGF0IHdyYXBzIDxjb2RlPipsb2cuTG9nZ2VyPC9jb2RlPjo8L3A+CjxwcmU+PGNvZGU+Y3Jvbi5OZXcoCiAgICBjcm9uLldpdGhMb2dnZXIoY3Jvbi5WZXJib3NlUHJpbnRmTG9nZ2VyKGxvZ2dlcikpKQo8L2NvZGU+PC9wcmU+CjwvbGk+CjwvdWw+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtYmFja2dyb3VuZC1jcm9uLXNwZWMtZm9ybWF0Ij5CYWNrZ3JvdW5kIC0gQ3JvbiBzcGVjIGZvcm1hdDwvaDU+CjxwPlRoZXJlIGFyZSB0d28gY3JvbiBzcGVjIGZvcm1hdHMgaW4gY29tbW9uIHVzYWdlOjwvcD4KPHVsPgo8bGk+CjxwPlRoZSAmIzM0O3N0YW5kYXJkJiMzNDsgY3JvbiBmb3JtYXQsIGRlc2NyaWJlZCBvbiA8YSBocmVmPSJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uIiByZWw9Im5vZm9sbG93Ij50aGUgQ3JvbiB3aWtpcGVkaWEgcGFnZTwvYT4gYW5kIHVzZWQgYnkKdGhlIGNyb24gTGludXggc3lzdGVtIHV0aWxpdHkuPC9wPgo8L2xpPgo8bGk+CjxwPlRoZSBjcm9uIGZvcm1hdCB1c2VkIGJ5IDxhIGhyZWY9Imh0dHA6Ly93d3cucXVhcnR6LXNjaGVkdWxlci5vcmcvZG9jdW1lbnRhdGlvbi9xdWFydHotMi4zLjAvdHV0b3JpYWxzL3R1dG9yaWFsLWxlc3Nvbi0wNi5odG1sIiByZWw9Im5vZm9sbG93Ij50aGUgUXVhcnR6IFNjaGVkdWxlcjwvYT4sIGNvbW1vbmx5IHVzZWQgZm9yIHNjaGVkdWxlZApqb2JzIGluIEphdmEgc29mdHdhcmU8L3A+CjwvbGk+CjwvdWw+CjxwPlRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mIHRoaXMgcGFja2FnZSBpbmNsdWRlZCBhbiBvcHRpb25hbCAmIzM0O3NlY29uZHMmIzM0OyBmaWVsZCwgd2hpY2gKbWFkZSBpdCBpbmNvbXBhdGlibGUgd2l0aCBib3RoIG9mIHRoZXNlIGZvcm1hdHMuIE5vdywgdGhlICYjMzQ7c3RhbmRhcmQmIzM0OyBmb3JtYXQgaXMKdGhlIGRlZmF1bHQgZm9ybWF0IGFjY2VwdGVkLCBhbmQgdGhlIFF1YXJ0eiBmb3JtYXQgaXMgb3B0LWluLjwvcD4KPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iVW5pdFJlYWRtZS1mYWRlT3V0Ij48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxhIGNsYXNzPSJVbml0UmVhZG1lLWV4cGFuZExpbmsganMtcmVhZG1lRXhwYW5kIiBocmVmPSI/cmVhZG1lPWV4cGFuZGVkI3NlY3Rpb24tcmVhZG1lIj5FeHBhbmQg4pa+PC9hPgogICAgICA8YSBjbGFzcz0iVW5pdFJlYWRtZS1jb2xsYXBzZUxpbmsganMtcmVhZG1lQ29sbGFwc2UiIGhyZWY9IiMiPkNvbGxhcHNlIOKWtDwvYT4KICAgIAogIDwvZGl2PgoKICAgICAgCgogICAgICAKICAgICAgICAKICAgICAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXREb2MiPgogICAgPGgyIGNsYXNzPSJVbml0RG9jLXRpdGxlIiBpZD0ic2VjdGlvbi1kb2N1bWVudGF0aW9uIj4KICAgICAgPGltZyBoZWlnaHQ9IjI1cHgiIHdpZHRoPSIyMHB4IiBzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWRvY18yMHgxMi5zdmciIGFsdD0iIj5Eb2N1bWVudGF0aW9uCiAgICAgIDxhIGNsYXNzPSJVbml0RG9jLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tZG9jdW1lbnRhdGlvbiI+wrY8L2E+CiAgICA8L2gyPgogICAgCiAgCiAgICAKICAKCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uIGpzLWRvY3VtZW50YXRpb24iPgogICAgICAKICAgICAgICAKPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb250ZW50IGpzLWRvY0NvbnRlbnQiPiA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlldyI+CiAgICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLW92ZXJ2aWV3IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlld0hlYWRlciI+T3ZlcnZpZXcgPGEgaHJlZj0iI3BrZy1vdmVydmlldyI+wrY8L2E+PC9oMz4KCjxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1JbnN0YWxsYXRpb24iPkluc3RhbGxhdGlvbjwvYT4KCQkJCQk8L2xpPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1Vc2FnZSI+VXNhZ2U8L2E+CgkJCQkJPC9saT48bGkgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jSXRlbSI+CgkJCQkJCTxhIGhyZWY9IiNoZHItQ1JPTl9FeHByZXNzaW9uX0Zvcm1hdCI+Q1JPTiBFeHByZXNzaW9uIEZvcm1hdDwvYT4KCQkJCQk8L2xpPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1BbHRlcm5hdGl2ZV9Gb3JtYXRzIj5BbHRlcm5hdGl2ZSBGb3JtYXRzPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLVNwZWNpYWxfQ2hhcmFjdGVycyI+U3BlY2lhbCBDaGFyYWN0ZXJzPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLVByZWRlZmluZWRfc2NoZWR1bGVzIj5QcmVkZWZpbmVkIHNjaGVkdWxlczwvYT4KCQkJCQk8L2xpPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1JbnRlcnZhbHMiPkludGVydmFsczwvYT4KCQkJCQk8L2xpPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1UaW1lX3pvbmVzIj5UaW1lIHpvbmVzPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLUpvYl9XcmFwcGVycyI+Sm9iIFdyYXBwZXJzPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLVRocmVhZF9zYWZldHkiPlRocmVhZCBzYWZldHk8L2E+CgkJCQkJPC9saT48bGkgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jSXRlbSI+CgkJCQkJCTxhIGhyZWY9IiNoZHItTG9nZ2luZyI+TG9nZ2luZzwvYT4KCQkJCQk8L2xpPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1JbXBsZW1lbnRhdGlvbiI+SW1wbGVtZW50YXRpb248L2E+CgkJCQkJPC9saT48L3VsPgoJPC9kaXY+PHA+UGFja2FnZSBjcm9uIGltcGxlbWVudHMgYSBjcm9uIHNwZWMgcGFyc2VyIGFuZCBqb2IgcnVubmVyLgo8L3A+PGg0IGlkPSJoZHItSW5zdGFsbGF0aW9uIj5JbnN0YWxsYXRpb24gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLUluc3RhbGxhdGlvbiI+wrY8L2E+PC9oND4KICA8cD5UbyBkb3dubG9hZCB0aGUgc3BlY2lmaWMgdGFnZ2VkIHJlbGVhc2UsIHJ1bjoKPC9wPjxwcmU+Z28gZ2V0IGdpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjNAdjMuMC4wCjwvcHJlPjxwPkltcG9ydCBpdCBpbiB5b3VyIHByb2dyYW0gYXM6CjwvcD48cHJlPmltcG9ydCAmIzM0O2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdjMmIzM0Owo8L3ByZT48cD5JdCByZXF1aXJlcyBHbyAxLjExIG9yIGxhdGVyIGR1ZSB0byB1c2FnZSBvZiBHbyBNb2R1bGVzLgo8L3A+PGg0IGlkPSJoZHItVXNhZ2UiPlVzYWdlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1Vc2FnZSI+wrY8L2E+PC9oND4KICA8cD5DYWxsZXJzIG1heSByZWdpc3RlciBGdW5jcyB0byBiZSBpbnZva2VkIG9uIGEgZ2l2ZW4gc2NoZWR1bGUuICBDcm9uIHdpbGwgcnVuCnRoZW0gaW4gdGhlaXIgb3duIGdvcm91dGluZXMuCjwvcD48cHJlPmMgOj0gY3Jvbi5OZXcoKQpjLkFkZEZ1bmMoJiMzNDszMCAqICogKiAqJiMzNDssIGZ1bmMoKSB7IGZtdC5QcmludGxuKCYjMzQ7RXZlcnkgaG91ciBvbiB0aGUgaGFsZiBob3VyJiMzNDspIH0pCmMuQWRkRnVuYygmIzM0OzMwIDMtNiwyMC0yMyAqICogKiYjMzQ7LCBmdW5jKCkgeyBmbXQuUHJpbnRsbigmIzM0Oy4uIGluIHRoZSByYW5nZSAzLTZhbSwgOC0xMXBtJiMzNDspIH0pCmMuQWRkRnVuYygmIzM0O0NST05fVFo9QXNpYS9Ub2t5byAzMCAwNCAqICogKiYjMzQ7LCBmdW5jKCkgeyBmbXQuUHJpbnRsbigmIzM0O1J1bnMgYXQgMDQ6MzAgVG9reW8gdGltZSBldmVyeSBkYXkmIzM0OykgfSkKYy5BZGRGdW5jKCYjMzQ7QGhvdXJseSYjMzQ7LCAgICAgIGZ1bmMoKSB7IGZtdC5QcmludGxuKCYjMzQ7RXZlcnkgaG91ciwgc3RhcnRpbmcgYW4gaG91ciBmcm9tIG5vdyYjMzQ7KSB9KQpjLkFkZEZ1bmMoJiMzNDtAZXZlcnkgMWgzMG0mIzM0OywgZnVuYygpIHsgZm10LlByaW50bG4oJiMzNDtFdmVyeSBob3VyIHRoaXJ0eSwgc3RhcnRpbmcgYW4gaG91ciB0aGlydHkgZnJvbSBub3cmIzM0OykgfSkKYy5TdGFydCgpCi4uCi8vIEZ1bmNzIGFyZSBpbnZva2VkIGluIHRoZWlyIG93biBnb3JvdXRpbmUsIGFzeW5jaHJvbm91c2x5LgouLi4KLy8gRnVuY3MgbWF5IGFsc28gYmUgYWRkZWQgdG8gYSBydW5uaW5nIENyb24KYy5BZGRGdW5jKCYjMzQ7QGRhaWx5JiMzNDssIGZ1bmMoKSB7IGZtdC5QcmludGxuKCYjMzQ7RXZlcnkgZGF5JiMzNDspIH0pCi4uCi8vIEluc3BlY3QgdGhlIGNyb24gam9iIGVudHJpZXMmIzM5OyBuZXh0IGFuZCBwcmV2aW91cyBydW4gdGltZXMuCmluc3BlY3QoYy5FbnRyaWVzKCkpCi4uCmMuU3RvcCgpICAvLyBTdG9wIHRoZSBzY2hlZHVsZXIgKGRvZXMgbm90IHN0b3AgYW55IGpvYnMgYWxyZWFkeSBydW5uaW5nKS4KPC9wcmU+PGg0IGlkPSJoZHItQ1JPTl9FeHByZXNzaW9uX0Zvcm1hdCI+Q1JPTiBFeHByZXNzaW9uIEZvcm1hdCA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNoZHItQ1JPTl9FeHByZXNzaW9uX0Zvcm1hdCI+wrY8L2E+PC9oND4KICA8cD5BIGNyb24gZXhwcmVzc2lvbiByZXByZXNlbnRzIGEgc2V0IG9mIHRpbWVzLCB1c2luZyA1IHNwYWNlLXNlcGFyYXRlZCBmaWVsZHMuCjwvcD48cHJlPkZpZWxkIG5hbWUgICB8IE1hbmRhdG9yeT8gfCBBbGxvd2VkIHZhbHVlcyAgfCBBbGxvd2VkIHNwZWNpYWwgY2hhcmFjdGVycwotLS0tLS0tLS0tICAgfCAtLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0gIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KTWludXRlcyAgICAgIHwgWWVzICAgICAgICB8IDAtNTkgICAgICAgICAgICB8ICogLyAsIC0KSG91cnMgICAgICAgIHwgWWVzICAgICAgICB8IDAtMjMgICAgICAgICAgICB8ICogLyAsIC0KRGF5IG9mIG1vbnRoIHwgWWVzICAgICAgICB8IDEtMzEgICAgICAgICAgICB8ICogLyAsIC0gPwpNb250aCAgICAgICAgfCBZZXMgICAgICAgIHwgMS0xMiBvciBKQU4tREVDIHwgKiAvICwgLQpEYXkgb2Ygd2VlayAgfCBZZXMgICAgICAgIHwgMC02IG9yIFNVTi1TQVQgIHwgKiAvICwgLSA/CjwvcHJlPjxwPk1vbnRoIGFuZCBEYXktb2Ytd2VlayBmaWVsZCB2YWx1ZXMgYXJlIGNhc2UgaW5zZW5zaXRpdmUuICAmIzM0O1NVTiYjMzQ7LCAmIzM0O1N1biYjMzQ7LCBhbmQKJiMzNDtzdW4mIzM0OyBhcmUgZXF1YWxseSBhY2NlcHRlZC4KPC9wPjxwPlRoZSBzcGVjaWZpYyBpbnRlcnByZXRhdGlvbiBvZiB0aGUgZm9ybWF0IGlzIGJhc2VkIG9uIHRoZSBDcm9uIFdpa2lwZWRpYSBwYWdlOgo8YSBocmVmPSJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uIj5odHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uPC9hPgo8L3A+PGg0IGlkPSJoZHItQWx0ZXJuYXRpdmVfRm9ybWF0cyI+QWx0ZXJuYXRpdmUgRm9ybWF0cyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNoZHItQWx0ZXJuYXRpdmVfRm9ybWF0cyI+wrY8L2E+PC9oND4KICA8cD5BbHRlcm5hdGl2ZSBDcm9uIGV4cHJlc3Npb24gZm9ybWF0cyBzdXBwb3J0IG90aGVyIGZpZWxkcyBsaWtlIHNlY29uZHMuIFlvdSBjYW4KaW1wbGVtZW50IHRoYXQgYnkgY3JlYXRpbmcgYSBjdXN0b20gUGFyc2VyIGFzIGZvbGxvd3MuCjwvcD48cHJlPmNyb24uTmV3KAoJY3Jvbi5XaXRoUGFyc2VyKAoJCWNyb24uTmV3UGFyc2VyKAoJCQljcm9uLlNlY29uZE9wdGlvbmFsIHwgY3Jvbi5NaW51dGUgfCBjcm9uLkhvdXIgfCBjcm9uLkRvbSB8IGNyb24uTW9udGggfCBjcm9uLkRvdyB8IGNyb24uRGVzY3JpcHRvcikpKQo8L3ByZT48cD5TaW5jZSBhZGRpbmcgU2Vjb25kcyBpcyB0aGUgbW9zdCBjb21tb24gbW9kaWZpY2F0aW9uIHRvIHRoZSBzdGFuZGFyZCBjcm9uIHNwZWMsCmNyb24gcHJvdmlkZXMgYSBidWlsdGluIGZ1bmN0aW9uIHRvIGRvIHRoYXQsIHdoaWNoIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGN1c3RvbQpwYXJzZXIgeW91IHNhdyBlYXJsaWVyLCBleGNlcHQgdGhhdCBpdHMgc2Vjb25kcyBmaWVsZCBpcyBSRVFVSVJFRDoKPC9wPjxwcmU+Y3Jvbi5OZXcoY3Jvbi5XaXRoU2Vjb25kcygpKQo8L3ByZT48cD5UaGF0IGVtdWxhdGVzIFF1YXJ0eiwgdGhlIG1vc3QgcG9wdWxhciBhbHRlcm5hdGl2ZSBDcm9uIHNjaGVkdWxlIGZvcm1hdDoKPGEgaHJlZj0iaHR0cDovL3d3dy5xdWFydHotc2NoZWR1bGVyLm9yZy9kb2N1bWVudGF0aW9uL3F1YXJ0ei0yLngvdHV0b3JpYWxzL2Nyb250cmlnZ2VyLmh0bWwiPmh0dHA6Ly93d3cucXVhcnR6LXNjaGVkdWxlci5vcmcvZG9jdW1lbnRhdGlvbi9xdWFydHotMi54L3R1dG9yaWFscy9jcm9udHJpZ2dlci5odG1sPC9hPgo8L3A+PGg0IGlkPSJoZHItU3BlY2lhbF9DaGFyYWN0ZXJzIj5TcGVjaWFsIENoYXJhY3RlcnMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLVNwZWNpYWxfQ2hhcmFjdGVycyI+wrY8L2E+PC9oND4KICA8cD5Bc3RlcmlzayAoICogKQo8L3A+PHA+VGhlIGFzdGVyaXNrIGluZGljYXRlcyB0aGF0IHRoZSBjcm9uIGV4cHJlc3Npb24gd2lsbCBtYXRjaCBmb3IgYWxsIHZhbHVlcyBvZiB0aGUKZmllbGQ7IGUuZy4sIHVzaW5nIGFuIGFzdGVyaXNrIGluIHRoZSA1dGggZmllbGQgKG1vbnRoKSB3b3VsZCBpbmRpY2F0ZSBldmVyeQptb250aC4KPC9wPjxwPlNsYXNoICggLyApCjwvcD48cD5TbGFzaGVzIGFyZSB1c2VkIHRvIGRlc2NyaWJlIGluY3JlbWVudHMgb2YgcmFuZ2VzLiBGb3IgZXhhbXBsZSAzLTU5LzE1IGluIHRoZQoxc3QgZmllbGQgKG1pbnV0ZXMpIHdvdWxkIGluZGljYXRlIHRoZSAzcmQgbWludXRlIG9mIHRoZSBob3VyIGFuZCBldmVyeSAxNQptaW51dGVzIHRoZXJlYWZ0ZXIuIFRoZSBmb3JtICYjMzQ7KlwvLi4uJiMzNDsgaXMgZXF1aXZhbGVudCB0byB0aGUgZm9ybSAmIzM0O2ZpcnN0LWxhc3QvLi4uJiMzNDssCnRoYXQgaXMsIGFuIGluY3JlbWVudCBvdmVyIHRoZSBsYXJnZXN0IHBvc3NpYmxlIHJhbmdlIG9mIHRoZSBmaWVsZC4gIFRoZSBmb3JtCiYjMzQ7Ti8uLi4mIzM0OyBpcyBhY2NlcHRlZCBhcyBtZWFuaW5nICYjMzQ7Ti1NQVgvLi4uJiMzNDssIHRoYXQgaXMsIHN0YXJ0aW5nIGF0IE4sIHVzZSB0aGUKaW5jcmVtZW50IHVudGlsIHRoZSBlbmQgb2YgdGhhdCBzcGVjaWZpYyByYW5nZS4gIEl0IGRvZXMgbm90IHdyYXAgYXJvdW5kLgo8L3A+PHA+Q29tbWEgKCAsICkKPC9wPjxwPkNvbW1hcyBhcmUgdXNlZCB0byBzZXBhcmF0ZSBpdGVtcyBvZiBhIGxpc3QuIEZvciBleGFtcGxlLCB1c2luZyAmIzM0O01PTixXRUQsRlJJJiMzNDsgaW4KdGhlIDV0aCBmaWVsZCAoZGF5IG9mIHdlZWspIHdvdWxkIG1lYW4gTW9uZGF5cywgV2VkbmVzZGF5cyBhbmQgRnJpZGF5cy4KPC9wPjxwPkh5cGhlbiAoIC0gKQo8L3A+PHA+SHlwaGVucyBhcmUgdXNlZCB0byBkZWZpbmUgcmFuZ2VzLiBGb3IgZXhhbXBsZSwgOS0xNyB3b3VsZCBpbmRpY2F0ZSBldmVyeQpob3VyIGJldHdlZW4gOWFtIGFuZCA1cG0gaW5jbHVzaXZlLgo8L3A+PHA+UXVlc3Rpb24gbWFyayAoID8gKQo8L3A+PHA+UXVlc3Rpb24gbWFyayBtYXkgYmUgdXNlZCBpbnN0ZWFkIG9mICYjMzk7KiYjMzk7IGZvciBsZWF2aW5nIGVpdGhlciBkYXktb2YtbW9udGggb3IKZGF5LW9mLXdlZWsgYmxhbmsuCjwvcD48aDQgaWQ9Imhkci1QcmVkZWZpbmVkX3NjaGVkdWxlcyI+UHJlZGVmaW5lZCBzY2hlZHVsZXMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLVByZWRlZmluZWRfc2NoZWR1bGVzIj7CtjwvYT48L2g0PgogIDxwPllvdSBtYXkgdXNlIG9uZSBvZiBzZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbi4KPC9wPjxwcmU+RW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8KLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0KQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKgpAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqCkB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAKQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKgpAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqCjwvcHJlPjxoNCBpZD0iaGRyLUludGVydmFscyI+SW50ZXJ2YWxzIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1JbnRlcnZhbHMiPsK2PC9hPjwvaDQ+CiAgPHA+WW91IG1heSBhbHNvIHNjaGVkdWxlIGEgam9iIHRvIGV4ZWN1dGUgYXQgZml4ZWQgaW50ZXJ2YWxzLCBzdGFydGluZyBhdCB0aGUgdGltZSBpdCYjMzk7cyBhZGRlZApvciBjcm9uIGlzIHJ1bi4gVGhpcyBpcyBzdXBwb3J0ZWQgYnkgZm9ybWF0dGluZyB0aGUgY3JvbiBzcGVjIGxpa2UgdGhpczoKPC9wPjxwcmU+QGV2ZXJ5ICZsdDtkdXJhdGlvbiZndDsKPC9wcmU+PHA+d2hlcmUgJiMzNDtkdXJhdGlvbiYjMzQ7IGlzIGEgc3RyaW5nIGFjY2VwdGVkIGJ5IHRpbWUuUGFyc2VEdXJhdGlvbgooPGEgaHJlZj0iaHR0cDovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iPmh0dHA6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uPC9hPikuCjwvcD48cD5Gb3IgZXhhbXBsZSwgJiMzNDtAZXZlcnkgMWgzMG0xMHMmIzM0OyB3b3VsZCBpbmRpY2F0ZSBhIHNjaGVkdWxlIHRoYXQgYWN0aXZhdGVzIGFmdGVyCjEgaG91ciwgMzAgbWludXRlcywgMTAgc2Vjb25kcywgYW5kIHRoZW4gZXZlcnkgaW50ZXJ2YWwgYWZ0ZXIgdGhhdC4KPC9wPjxwPk5vdGU6IFRoZSBpbnRlcnZhbCBkb2VzIG5vdCB0YWtlIHRoZSBqb2IgcnVudGltZSBpbnRvIGFjY291bnQuICBGb3IgZXhhbXBsZSwKaWYgYSBqb2IgdGFrZXMgMyBtaW51dGVzIHRvIHJ1biwgYW5kIGl0IGlzIHNjaGVkdWxlZCB0byBydW4gZXZlcnkgNSBtaW51dGVzLAppdCB3aWxsIGhhdmUgb25seSAyIG1pbnV0ZXMgb2YgaWRsZSB0aW1lIGJldHdlZW4gZWFjaCBydW4uCjwvcD48aDQgaWQ9Imhkci1UaW1lX3pvbmVzIj5UaW1lIHpvbmVzIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1UaW1lX3pvbmVzIj7CtjwvYT48L2g0PgogIDxwPkJ5IGRlZmF1bHQsIGFsbCBpbnRlcnByZXRhdGlvbiBhbmQgc2NoZWR1bGluZyBpcyBkb25lIGluIHRoZSBtYWNoaW5lJiMzOTtzIGxvY2FsCnRpbWUgem9uZSAodGltZS5Mb2NhbCkuIFlvdSBjYW4gc3BlY2lmeSBhIGRpZmZlcmVudCB0aW1lIHpvbmUgb24gY29uc3RydWN0aW9uOgo8L3A+PHByZT5jcm9uLk5ldygKICAgIGNyb24uV2l0aExvY2F0aW9uKHRpbWUuVVRDKSkKPC9wcmU+PHA+SW5kaXZpZHVhbCBjcm9uIHNjaGVkdWxlcyBtYXkgYWxzbyBvdmVycmlkZSB0aGUgdGltZSB6b25lIHRoZXkgYXJlIHRvIGJlCmludGVycHJldGVkIGluIGJ5IHByb3ZpZGluZyBhbiBhZGRpdGlvbmFsIHNwYWNlLXNlcGFyYXRlZCBmaWVsZCBhdCB0aGUgYmVnaW5uaW5nCm9mIHRoZSBjcm9uIHNwZWMsIG9mIHRoZSBmb3JtICYjMzQ7Q1JPTl9UWj1Bc2lhL1Rva3lvJiMzNDsuCjwvcD48cD5Gb3IgZXhhbXBsZToKPC9wPjxwcmU+IyBSdW5zIGF0IDZhbSBpbiB0aW1lLkxvY2FsCmNyb24uTmV3KCkuQWRkRnVuYygmIzM0OzAgNiAqICogPyYjMzQ7LCAuLi4pCgojIFJ1bnMgYXQgNmFtIGluIEFtZXJpY2EvTmV3X1lvcmsKbnljLCBfIDo9IHRpbWUuTG9hZExvY2F0aW9uKCYjMzQ7QW1lcmljYS9OZXdfWW9yayYjMzQ7KQpjIDo9IGNyb24uTmV3KGNyb24uV2l0aExvY2F0aW9uKG55YykpCmMuQWRkRnVuYygmIzM0OzAgNiAqICogPyYjMzQ7LCAuLi4pCgojIFJ1bnMgYXQgNmFtIGluIEFzaWEvVG9reW8KY3Jvbi5OZXcoKS5BZGRGdW5jKCYjMzQ7Q1JPTl9UWj1Bc2lhL1Rva3lvIDAgNiAqICogPyYjMzQ7LCAuLi4pCgojIFJ1bnMgYXQgNmFtIGluIEFzaWEvVG9reW8KYyA6PSBjcm9uLk5ldyhjcm9uLldpdGhMb2NhdGlvbihueWMpKQpjLlNldExvY2F0aW9uKCYjMzQ7QW1lcmljYS9OZXdfWW9yayYjMzQ7KQpjLkFkZEZ1bmMoJiMzNDtDUk9OX1RaPUFzaWEvVG9reW8gMCA2ICogKiA/JiMzNDssIC4uLikKPC9wcmU+PHA+VGhlIHByZWZpeCAmIzM0O1RaPShUSU1FIFpPTkUpJiMzNDsgaXMgYWxzbyBzdXBwb3J0ZWQgZm9yIGxlZ2FjeSBjb21wYXRpYmlsaXR5Lgo8L3A+PHA+QmUgYXdhcmUgdGhhdCBqb2JzIHNjaGVkdWxlZCBkdXJpbmcgZGF5bGlnaHQtc2F2aW5ncyBsZWFwLWFoZWFkIHRyYW5zaXRpb25zIHdpbGwKbm90IGJlIHJ1biEKPC9wPjxoNCBpZD0iaGRyLUpvYl9XcmFwcGVycyI+Sm9iIFdyYXBwZXJzIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1Kb2JfV3JhcHBlcnMiPsK2PC9hPjwvaDQ+CiAgPHA+QSBDcm9uIHJ1bm5lciBtYXkgYmUgY29uZmlndXJlZCB3aXRoIGEgY2hhaW4gb2Ygam9iIHdyYXBwZXJzIHRvIGFkZApjcm9zcy1jdXR0aW5nIGZ1bmN0aW9uYWxpdHkgdG8gYWxsIHN1Ym1pdHRlZCBqb2JzLiBGb3IgZXhhbXBsZSwgdGhleSBtYXkgYmUgdXNlZAp0byBhY2hpZXZlIHRoZSBmb2xsb3dpbmcgZWZmZWN0czoKPC9wPjxwcmU+LSBSZWNvdmVyIGFueSBwYW5pY3MgZnJvbSBqb2JzIChhY3RpdmF0ZWQgYnkgZGVmYXVsdCkKLSBEZWxheSBhIGpvYiYjMzk7cyBleGVjdXRpb24gaWYgdGhlIHByZXZpb3VzIHJ1biBoYXNuJiMzOTt0IGNvbXBsZXRlZCB5ZXQKLSBTa2lwIGEgam9iJiMzOTtzIGV4ZWN1dGlvbiBpZiB0aGUgcHJldmlvdXMgcnVuIGhhc24mIzM5O3QgY29tcGxldGVkIHlldAotIExvZyBlYWNoIGpvYiYjMzk7cyBpbnZvY2F0aW9ucwo8L3ByZT48cD5JbnN0YWxsIHdyYXBwZXJzIGZvciBhbGwgam9icyBhZGRlZCB0byBhIGNyb24gdXNpbmcgdGhlIGBjcm9uLldpdGhDaGFpbmAgb3B0aW9uOgo8L3A+PHByZT5jcm9uLk5ldyhjcm9uLldpdGhDaGFpbigKCWNyb24uU2tpcElmU3RpbGxSdW5uaW5nKGxvZ2dlciksCikpCjwvcHJlPjxwPkluc3RhbGwgd3JhcHBlcnMgZm9yIGluZGl2aWR1YWwgam9icyBieSBleHBsaWNpdGx5IHdyYXBwaW5nIHRoZW06CjwvcD48cHJlPmpvYiA9IGNyb24uTmV3Q2hhaW4oCgljcm9uLlNraXBJZlN0aWxsUnVubmluZyhsb2dnZXIpLAopLlRoZW4oam9iKQo8L3ByZT48aDQgaWQ9Imhkci1UaHJlYWRfc2FmZXR5Ij5UaHJlYWQgc2FmZXR5IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1UaHJlYWRfc2FmZXR5Ij7CtjwvYT48L2g0PgogIDxwPlNpbmNlIHRoZSBDcm9uIHNlcnZpY2UgcnVucyBjb25jdXJyZW50bHkgd2l0aCB0aGUgY2FsbGluZyBjb2RlLCBzb21lIGFtb3VudCBvZgpjYXJlIG11c3QgYmUgdGFrZW4gdG8gZW5zdXJlIHByb3BlciBzeW5jaHJvbml6YXRpb24uCjwvcD48cD5BbGwgY3JvbiBtZXRob2RzIGFyZSBkZXNpZ25lZCB0byBiZSBjb3JyZWN0bHkgc3luY2hyb25pemVkIGFzIGxvbmcgYXMgdGhlIGNhbGxlcgplbnN1cmVzIHRoYXQgaW52b2NhdGlvbnMgaGF2ZSBhIGNsZWFyIGhhcHBlbnMtYmVmb3JlIG9yZGVyaW5nIGJldHdlZW4gdGhlbS4KPC9wPjxoNCBpZD0iaGRyLUxvZ2dpbmciPkxvZ2dpbmcgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLUxvZ2dpbmciPsK2PC9hPjwvaDQ+CiAgPHA+Q3JvbiBkZWZpbmVzIGEgTG9nZ2VyIGludGVyZmFjZSB0aGF0IGlzIGEgc3Vic2V0IG9mIHRoZSBvbmUgZGVmaW5lZCBpbgpnaXRodWIuY29tL2dvLWxvZ3IvbG9nci4gSXQgaGFzIHR3byBsb2dnaW5nIGxldmVscyAoSW5mbyBhbmQgRXJyb3IpLCBhbmQKcGFyYW1ldGVycyBhcmUga2V5L3ZhbHVlIHBhaXJzLiBUaGlzIG1ha2VzIGl0IHBvc3NpYmxlIGZvciBjcm9uIGxvZ2dpbmcgdG8gcGx1ZwppbnRvIHN0cnVjdHVyZWQgbG9nZ2luZyBzeXN0ZW1zLiBBbiBhZGFwdGVyLCBbVmVyYm9zZV1QcmludGZMb2dnZXIsIGlzIHByb3ZpZGVkCnRvIHdyYXAgdGhlIHN0YW5kYXJkIGxpYnJhcnkgKmxvZy5Mb2dnZXIuCjwvcD48cD5Gb3IgYWRkaXRpb25hbCBpbnNpZ2h0IGludG8gQ3JvbiBvcGVyYXRpb25zLCB2ZXJib3NlIGxvZ2dpbmcgbWF5IGJlIGFjdGl2YXRlZAp3aGljaCB3aWxsIHJlY29yZCBqb2IgcnVucywgc2NoZWR1bGluZyBkZWNpc2lvbnMsIGFuZCBhZGRlZCBvciByZW1vdmVkIGpvYnMuCkFjdGl2YXRlIGl0IHdpdGggYSBvbmUtb2ZmIGxvZ2dlciBhcyBmb2xsb3dzOgo8L3A+PHByZT5jcm9uLk5ldygKCWNyb24uV2l0aExvZ2dlcigKCQljcm9uLlZlcmJvc2VQcmludGZMb2dnZXIobG9nLk5ldyhvcy5TdGRvdXQsICYjMzQ7Y3JvbjogJiMzNDssIGxvZy5Mc3RkRmxhZ3MpKSkpCjwvcHJlPjxoNCBpZD0iaGRyLUltcGxlbWVudGF0aW9uIj5JbXBsZW1lbnRhdGlvbiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNoZHItSW1wbGVtZW50YXRpb24iPsK2PC9hPjwvaDQ+CiAgPHA+Q3JvbiBlbnRyaWVzIGFyZSBzdG9yZWQgaW4gYW4gYXJyYXksIHNvcnRlZCBieSB0aGVpciBuZXh0IGFjdGl2YXRpb24gdGltZS4gIENyb24Kc2xlZXBzIHVudGlsIHRoZSBuZXh0IGpvYiBpcyBkdWUgdG8gYmUgcnVuLgo8L3A+PHA+VXBvbiB3YWtpbmc6CjwvcD48cHJlPi0gaXQgcnVucyBlYWNoIGVudHJ5IHRoYXQgaXMgYWN0aXZlIG9uIHRoYXQgc2Vjb25kCi0gaXQgY2FsY3VsYXRlcyB0aGUgbmV4dCBydW4gdGltZXMgZm9yIHRoZSBqb2JzIHRoYXQgd2VyZSBydW4KLSBpdCByZS1zb3J0cyB0aGUgYXJyYXkgb2YgZW50cmllcyBieSBuZXh0IGFjdGl2YXRpb24gdGltZS4KLSBpdCBnb2VzIHRvIHNsZWVwIHVudGlsIHRoZSBzb29uZXN0IGpvYi4KPC9wcmU+Cjwvc2VjdGlvbj48c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleCI+CiAgICA8aDMgaWQ9InBrZy1pbmRleCIgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhIZWFkZXIiPkluZGV4IDxhIGhyZWY9IiNwa2ctaW5kZXgiPsK2PC9hPjwvaDM+Cgo8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhMaXN0Ij4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI0NoYWluIj50eXBlIENoYWluPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlRnVuY3Rpb25zIj4KPGxpPjxhIGhyZWY9IiNOZXdDaGFpbiI+ZnVuYyBOZXdDaGFpbihjIC4uLkpvYldyYXBwZXIpIENoYWluPC9hPjwvbGk+CgogICAgICAgICAgPC91bD48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+PGEgaHJlZj0iI0NoYWluLlRoZW4iPmZ1bmMgKGMgQ2hhaW4pIFRoZW4oaiBKb2IpIEpvYjwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI0NvbnN0YW50RGVsYXlTY2hlZHVsZSI+dHlwZSBDb25zdGFudERlbGF5U2NoZWR1bGU8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVGdW5jdGlvbnMiPgo8bGk+PGEgaHJlZj0iI0V2ZXJ5Ij5mdW5jIEV2ZXJ5KGR1cmF0aW9uIHRpbWUuRHVyYXRpb24pIENvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPjxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUuTmV4dCI+ZnVuYyAoc2NoZWR1bGUgQ29uc3RhbnREZWxheVNjaGVkdWxlKSBOZXh0KHQgdGltZS5UaW1lKSB0aW1lLlRpbWU8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNDcm9uIj50eXBlIENyb248L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVGdW5jdGlvbnMiPgo8bGk+PGEgaHJlZj0iI05ldyI+ZnVuYyBOZXcob3B0cyAuLi5PcHRpb24pICpDcm9uPC9hPjwvbGk+CgogICAgICAgICAgPC91bD48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZU1ldGhvZHMiPgo8bGk+PGEgaHJlZj0iI0Nyb24uQWRkRnVuYyI+ZnVuYyAoYyAqQ3JvbikgQWRkRnVuYyhzcGVjIHN0cmluZywgY21kIGZ1bmMoKSkgKEVudHJ5SUQsIGVycm9yKTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI0Nyb24uQWRkSm9iIj5mdW5jIChjICpDcm9uKSBBZGRKb2Ioc3BlYyBzdHJpbmcsIGNtZCBKb2IpIChFbnRyeUlELCBlcnJvcik8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNDcm9uLkVudHJpZXMiPmZ1bmMgKGMgKkNyb24pIEVudHJpZXMoKSBbXUVudHJ5PC9hPjwvbGk+CjxsaT48YSBocmVmPSIjQ3Jvbi5FbnRyeSI+ZnVuYyAoYyAqQ3JvbikgRW50cnkoaWQgRW50cnlJRCkgRW50cnk8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNDcm9uLkxvY2F0aW9uIj5mdW5jIChjICpDcm9uKSBMb2NhdGlvbigpICp0aW1lLkxvY2F0aW9uPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjQ3Jvbi5SZW1vdmUiPmZ1bmMgKGMgKkNyb24pIFJlbW92ZShpZCBFbnRyeUlEKTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI0Nyb24uUnVuIj5mdW5jIChjICpDcm9uKSBSdW4oKTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI0Nyb24uU2NoZWR1bGUiPmZ1bmMgKGMgKkNyb24pIFNjaGVkdWxlKHNjaGVkdWxlIFNjaGVkdWxlLCBjbWQgSm9iKSBFbnRyeUlEPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjQ3Jvbi5TdGFydCI+ZnVuYyAoYyAqQ3JvbikgU3RhcnQoKTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI0Nyb24uU3RvcCI+ZnVuYyAoYyAqQ3JvbikgU3RvcCgpIGNvbnRleHQuQ29udGV4dDwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI0VudHJ5Ij50eXBlIEVudHJ5PC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT48YSBocmVmPSIjRW50cnkuVmFsaWQiPmZ1bmMgKGUgRW50cnkpIFZhbGlkKCkgYm9vbDwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI0VudHJ5SUQiPnR5cGUgRW50cnlJRDwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjRnVuY0pvYiI+dHlwZSBGdW5jSm9iPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT48YSBocmVmPSIjRnVuY0pvYi5SdW4iPmZ1bmMgKGYgRnVuY0pvYikgUnVuKCk8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNKb2IiPnR5cGUgSm9iPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNKb2JXcmFwcGVyIj50eXBlIEpvYldyYXBwZXI8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVGdW5jdGlvbnMiPgo8bGk+PGEgaHJlZj0iI0RlbGF5SWZTdGlsbFJ1bm5pbmciPmZ1bmMgRGVsYXlJZlN0aWxsUnVubmluZyhsb2dnZXIgTG9nZ2VyKSBKb2JXcmFwcGVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjUmVjb3ZlciI+ZnVuYyBSZWNvdmVyKGxvZ2dlciBMb2dnZXIpIEpvYldyYXBwZXI8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNTa2lwSWZTdGlsbFJ1bm5pbmciPmZ1bmMgU2tpcElmU3RpbGxSdW5uaW5nKGxvZ2dlciBMb2dnZXIpIEpvYldyYXBwZXI8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNMb2dnZXIiPnR5cGUgTG9nZ2VyPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlRnVuY3Rpb25zIj4KPGxpPjxhIGhyZWY9IiNQcmludGZMb2dnZXIiPmZ1bmMgUHJpbnRmTG9nZ2VyKGwgaW50ZXJmYWNleyAuLi4gfSkgTG9nZ2VyPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjVmVyYm9zZVByaW50ZkxvZ2dlciI+ZnVuYyBWZXJib3NlUHJpbnRmTG9nZ2VyKGwgaW50ZXJmYWNleyAuLi4gfSkgTG9nZ2VyPC9hPjwvbGk+CgogICAgICAgICAgPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjT3B0aW9uIj50eXBlIE9wdGlvbjwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZUZ1bmN0aW9ucyI+CjxsaT48YSBocmVmPSIjV2l0aENoYWluIj5mdW5jIFdpdGhDaGFpbih3cmFwcGVycyAuLi5Kb2JXcmFwcGVyKSBPcHRpb248L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNXaXRoTG9jYXRpb24iPmZ1bmMgV2l0aExvY2F0aW9uKGxvYyAqdGltZS5Mb2NhdGlvbikgT3B0aW9uPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjV2l0aExvZ2dlciI+ZnVuYyBXaXRoTG9nZ2VyKGxvZ2dlciBMb2dnZXIpIE9wdGlvbjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI1dpdGhQYXJzZXIiPmZ1bmMgV2l0aFBhcnNlcihwIFNjaGVkdWxlUGFyc2VyKSBPcHRpb248L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNXaXRoU2Vjb25kcyI+ZnVuYyBXaXRoU2Vjb25kcygpIE9wdGlvbjwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI1BhcnNlT3B0aW9uIj50eXBlIFBhcnNlT3B0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNQYXJzZXIiPnR5cGUgUGFyc2VyPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlRnVuY3Rpb25zIj4KPGxpPjxhIGhyZWY9IiNOZXdQYXJzZXIiPmZ1bmMgTmV3UGFyc2VyKG9wdGlvbnMgUGFyc2VPcHRpb24pIFBhcnNlcjwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPjxhIGhyZWY9IiNQYXJzZXIuUGFyc2UiPmZ1bmMgKHAgUGFyc2VyKSBQYXJzZShzcGVjIHN0cmluZykgKFNjaGVkdWxlLCBlcnJvcik8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNTY2hlZHVsZSI+dHlwZSBTY2hlZHVsZTwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZUZ1bmN0aW9ucyI+CjxsaT48YSBocmVmPSIjUGFyc2VTdGFuZGFyZCI+ZnVuYyBQYXJzZVN0YW5kYXJkKHN0YW5kYXJkU3BlYyBzdHJpbmcpIChTY2hlZHVsZSwgZXJyb3IpPC9hPjwvbGk+CgogICAgICAgICAgPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjU2NoZWR1bGVQYXJzZXIiPnR5cGUgU2NoZWR1bGVQYXJzZXI8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI1NwZWNTY2hlZHVsZSI+dHlwZSBTcGVjU2NoZWR1bGU8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPjxhIGhyZWY9IiNTcGVjU2NoZWR1bGUuTmV4dCI+ZnVuYyAocyAqU3BlY1NjaGVkdWxlKSBOZXh0KHQgdGltZS5UaW1lKSB0aW1lLlRpbWU8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjwvdWw+Cjwvc2VjdGlvbj48aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLWNvbnN0YW50cyIgY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzSGVhZGVyIj5Db25zdGFudHMgPGEgaHJlZj0iI3BrZy1jb25zdGFudHMiPsK2PC9hPjwvaDM+CgogIDxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLWNvbnN0YW50cyI+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvZGl2Pjwvc2VjdGlvbj4KCiAgPGgzIHRhYmluZGV4PSItMSIgaWQ9InBrZy12YXJpYWJsZXMiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXZhcmlhYmxlc0hlYWRlciI+VmFyaWFibGVzIDxhIGhyZWY9IiNwa2ctdmFyaWFibGVzIj7CtjwvYT48L2gzPgoKICA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZW1wdHkiPlRoaXMgc2VjdGlvbiBpcyBlbXB0eS48L2Rpdj48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctZnVuY3Rpb25zIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnNIZWFkZXIiPkZ1bmN0aW9ucyA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25zIj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWVtcHR5Ij5UaGlzIHNlY3Rpb24gaXMgZW1wdHkuPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNoYWluIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY2hhaW4uZ28jTDE1Ij5DaGFpbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ2hhaW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgQ2hhaW4gc3RydWN0IHsKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBjb250YWlucyBmaWx0ZXJlZCBvciB1bmV4cG9ydGVkIGZpZWxkczwvc3Bhbj4KfTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPkNoYWluIGlzIGEgc2VxdWVuY2Ugb2YgSm9iV3JhcHBlcnMgdGhhdCBkZWNvcmF0ZXMgc3VibWl0dGVkIGpvYnMgd2l0aApjcm9zcy1jdXR0aW5nIGJlaGF2aW9ycyBsaWtlIGxvZ2dpbmcgb3Igc3luY2hyb25pemF0aW9uLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJOZXdDaGFpbiIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmNIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jaGFpbi5nbyNMMjAiPk5ld0NoYWluPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOZXdDaGFpbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBOZXdDaGFpbihjIC4uLjxhIGhyZWY9IiNKb2JXcmFwcGVyIj5Kb2JXcmFwcGVyPC9hPikgPGEgaHJlZj0iI0NoYWluIj5DaGFpbjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5OZXdDaGFpbiByZXR1cm5zIGEgQ2hhaW4gY29uc2lzdGluZyBvZiB0aGUgZ2l2ZW4gSm9iV3JhcHBlcnMuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ2hhaW4uVGhlbiIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoQ2hhaW4pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2NoYWluLmdvI0wzMCI+VGhlbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ2hhaW4uVGhlbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyA8YSBocmVmPSIjQ2hhaW4iPkNoYWluPC9hPikgVGhlbihqIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4pIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5UaGVuIGRlY29yYXRlcyB0aGUgZ2l2ZW4gam9iIHdpdGggYWxsIEpvYldyYXBwZXJzIGluIHRoZSBjaGFpbi4KPC9wPjxwPlRoaXM6CjwvcD48cHJlPk5ld0NoYWluKG0xLCBtMiwgbTMpLlRoZW4oam9iKQo8L3ByZT48cD5pcyBlcXVpdmFsZW50IHRvOgo8L3A+PHByZT5tMShtMihtMyhqb2IpKSkKPC9wcmU+CjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbnN0YW50RGVsYXlTY2hlZHVsZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2NvbnN0YW50ZGVsYXkuZ28jTDciPkNvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIENvbnN0YW50RGVsYXlTY2hlZHVsZSBzdHJ1Y3Qgewo8c3BhbiBpZD0iQ29uc3RhbnREZWxheVNjaGVkdWxlLkRlbGF5IiBkYXRhLWtpbmQ9ImZpZWxkIj4JRGVsYXkgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Db25zdGFudERlbGF5U2NoZWR1bGUgcmVwcmVzZW50cyBhIHNpbXBsZSByZWN1cnJpbmcgZHV0eSBjeWNsZSwgZS5nLiAmIzM0O0V2ZXJ5IDUgbWludXRlcyYjMzQ7LgpJdCBkb2VzIG5vdCBzdXBwb3J0IGpvYnMgbW9yZSBmcmVxdWVudCB0aGFuIG9uY2UgYSBzZWNvbmQuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuYyI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkV2ZXJ5IiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2NvbnN0YW50ZGVsYXkuZ28jTDE0Ij5FdmVyeTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRXZlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgRXZlcnkoZHVyYXRpb24gPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4pIDxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUiPkNvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5FdmVyeSByZXR1cm5zIGEgY3JvbnRhYiBTY2hlZHVsZSB0aGF0IGFjdGl2YXRlcyBvbmNlIGV2ZXJ5IGR1cmF0aW9uLgpEZWxheXMgb2YgbGVzcyB0aGFuIGEgc2Vjb25kIGFyZSBub3Qgc3VwcG9ydGVkICh3aWxsIHJvdW5kIHVwIHRvIDEgc2Vjb25kKS4KQW55IGZpZWxkcyBsZXNzIHRoYW4gYSBTZWNvbmQgYXJlIHRydW5jYXRlZC4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJDb25zdGFudERlbGF5U2NoZWR1bGUuTmV4dCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoQ29uc3RhbnREZWxheVNjaGVkdWxlKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jb25zdGFudGRlbGF5LmdvI0wyNSI+TmV4dDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlLk5leHQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHNjaGVkdWxlIDxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUiPkNvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT4pIE5leHQodCA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT4pIDxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNUaW1lIj5UaW1lPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPk5leHQgcmV0dXJucyB0aGUgbmV4dCB0aW1lIHRoaXMgc2hvdWxkIGJlIHJ1bi4KVGhpcyByb3VuZHMgc28gdGhhdCB0aGUgbmV4dCBhY3RpdmF0aW9uIHRpbWUgd2lsbCBiZSBvbiB0aGUgc2Vjb25kLgo8L3A+CjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24iIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wxMyI+Q3JvbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3JvbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDcm9uIHN0cnVjdCB7Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Dcm9uIGtlZXBzIHRyYWNrIG9mIGFueSBudW1iZXIgb2YgZW50cmllcywgaW52b2tpbmcgdGhlIGFzc29jaWF0ZWQgZnVuYyBhcwpzcGVjaWZpZWQgYnkgdGhlIHNjaGVkdWxlLiBJdCBtYXkgYmUgc3RhcnRlZCwgc3RvcHBlZCwgYW5kIHRoZSBlbnRyaWVzIG1heQpiZSBpbnNwZWN0ZWQgd2hpbGUgcnVubmluZy4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTmV3IiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2Nyb24uZ28jTDExMyI+TmV3PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOZXciPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTmV3KG9wdHMgLi4uPGEgaHJlZj0iI09wdGlvbiI+T3B0aW9uPC9hPikgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPk5ldyByZXR1cm5zIGEgbmV3IENyb24gam9iIHJ1bm5lciwgbW9kaWZpZWQgYnkgdGhlIGdpdmVuIG9wdGlvbnMuCjwvcD48cD5BdmFpbGFibGUgU2V0dGluZ3MKPC9wPjxwcmU+VGltZSBab25lCiAgRGVzY3JpcHRpb246IFRoZSB0aW1lIHpvbmUgaW4gd2hpY2ggc2NoZWR1bGVzIGFyZSBpbnRlcnByZXRlZAogIERlZmF1bHQ6ICAgICB0aW1lLkxvY2FsCgpQYXJzZXIKICBEZXNjcmlwdGlvbjogUGFyc2VyIGNvbnZlcnRzIGNyb24gc3BlYyBzdHJpbmdzIGludG8gY3Jvbi5TY2hlZHVsZXMuCiAgRGVmYXVsdDogICAgIEFjY2VwdHMgdGhpcyBzcGVjOiA8YSBocmVmPSJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uIj5odHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uPC9hPgoKQ2hhaW4KICBEZXNjcmlwdGlvbjogV3JhcCBzdWJtaXR0ZWQgam9icyB0byBjdXN0b21pemUgYmVoYXZpb3IuCiAgRGVmYXVsdDogICAgIEEgY2hhaW4gdGhhdCByZWNvdmVycyBwYW5pY3MgYW5kIGxvZ3MgdGhlbSB0byBzdGRlcnIuCjwvcHJlPjxwPlNlZSAmIzM0O2Nyb24uV2l0aComIzM0OyB0byBtb2RpZnkgdGhlIGRlZmF1bHQgYmVoYXZpb3IuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5BZGRGdW5jIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMMTQxIj5BZGRGdW5jPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLkFkZEZ1bmMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPikgQWRkRnVuYyhzcGVjIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY21kIGZ1bmMoKSkgKDxhIGhyZWY9IiNFbnRyeUlEIj5FbnRyeUlEPC9hPiwgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5BZGRGdW5jIGFkZHMgYSBmdW5jIHRvIHRoZSBDcm9uIHRvIGJlIHJ1biBvbiB0aGUgZ2l2ZW4gc2NoZWR1bGUuClRoZSBzcGVjIGlzIHBhcnNlZCB1c2luZyB0aGUgdGltZSB6b25lIG9mIHRoaXMgQ3JvbiBpbnN0YW5jZSBhcyB0aGUgZGVmYXVsdC4KQW4gb3BhcXVlIElEIGlzIHJldHVybmVkIHRoYXQgY2FuIGJlIHVzZWQgdG8gbGF0ZXIgcmVtb3ZlIGl0Lgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uQWRkSm9iIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMMTQ4Ij5BZGRKb2I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Nyb24uQWRkSm9iIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIEFkZEpvYihzcGVjIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY21kIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4pICg8YSBocmVmPSIjRW50cnlJRCI+RW50cnlJRDwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+QWRkSm9iIGFkZHMgYSBKb2IgdG8gdGhlIENyb24gdG8gYmUgcnVuIG9uIHRoZSBnaXZlbiBzY2hlZHVsZS4KVGhlIHNwZWMgaXMgcGFyc2VkIHVzaW5nIHRoZSB0aW1lIHpvbmUgb2YgdGhpcyBDcm9uIGluc3RhbmNlIGFzIHRoZSBkZWZhdWx0LgpBbiBvcGFxdWUgSUQgaXMgcmV0dXJuZWQgdGhhdCBjYW4gYmUgdXNlZCB0byBsYXRlciByZW1vdmUgaXQuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5FbnRyaWVzIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMMTc3Ij5FbnRyaWVzPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLkVudHJpZXMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPikgRW50cmllcygpIFtdPGEgaHJlZj0iI0VudHJ5Ij5FbnRyeTwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5FbnRyaWVzIHJldHVybnMgYSBzbmFwc2hvdCBvZiB0aGUgY3JvbiBlbnRyaWVzLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uRW50cnkiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgKCpDcm9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wxOTQiPkVudHJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLkVudHJ5Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIEVudHJ5KGlkIDxhIGhyZWY9IiNFbnRyeUlEIj5FbnRyeUlEPC9hPikgPGEgaHJlZj0iI0VudHJ5Ij5FbnRyeTwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5FbnRyeSByZXR1cm5zIGEgc25hcHNob3Qgb2YgdGhlIGdpdmVuIGVudHJ5LCBvciBuaWwgaWYgaXQgY291bGRuJiMzOTt0IGJlIGZvdW5kLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uTG9jYXRpb24iIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgKCpDcm9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wxODkiPkxvY2F0aW9uPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLkxvY2F0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIExvY2F0aW9uKCkgKjxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNMb2NhdGlvbiI+TG9jYXRpb248L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+TG9jYXRpb24gZ2V0cyB0aGUgdGltZSB6b25lIGxvY2F0aW9uCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5SZW1vdmUiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgKCpDcm9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wyMDQiPlJlbW92ZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3Jvbi5SZW1vdmUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPikgUmVtb3ZlKGlkIDxhIGhyZWY9IiNFbnRyeUlEIj5FbnRyeUlEPC9hPik8L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5SZW1vdmUgYW4gZW50cnkgZnJvbSBiZWluZyBydW4gaW4gdGhlIGZ1dHVyZS4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJDcm9uLlJ1biIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKkNyb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2Nyb24uZ28jTDIyNiI+UnVuPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLlJ1biI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0Nyb24iPkNyb248L2E+KSBSdW4oKTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlJ1biB0aGUgY3JvbiBzY2hlZHVsZXIsIG9yIG5vLW9wIGlmIGFscmVhZHkgcnVubmluZy4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJDcm9uLlNjaGVkdWxlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMMTU4Ij5TY2hlZHVsZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3Jvbi5TY2hlZHVsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0Nyb24iPkNyb248L2E+KSBTY2hlZHVsZShzY2hlZHVsZSA8YSBocmVmPSIjU2NoZWR1bGUiPlNjaGVkdWxlPC9hPiwgY21kIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4pIDxhIGhyZWY9IiNFbnRyeUlEIj5FbnRyeUlEPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlNjaGVkdWxlIGFkZHMgYSBKb2IgdG8gdGhlIENyb24gdG8gYmUgcnVuIG9uIHRoZSBnaXZlbiBzY2hlZHVsZS4KVGhlIGpvYiBpcyB3cmFwcGVkIHdpdGggdGhlIGNvbmZpZ3VyZWQgQ2hhaW4uCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5TdGFydCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKkNyb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2Nyb24uZ28jTDIxNSI+U3RhcnQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Nyb24uU3RhcnQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPikgU3RhcnQoKTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlN0YXJ0IHRoZSBjcm9uIHNjaGVkdWxlciBpbiBpdHMgb3duIGdvcm91dGluZSwgb3Igbm8tb3AgaWYgYWxyZWFkeSBzdGFydGVkLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uU3RvcCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKkNyb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2Nyb24uZ28jTDMyMyI+U3RvcDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3Jvbi5TdG9wIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIFN0b3AoKSA8YSBocmVmPSIvY29udGV4dCI+Y29udGV4dDwvYT4uPGEgaHJlZj0iL2NvbnRleHQjQ29udGV4dCI+Q29udGV4dDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5TdG9wIHN0b3BzIHRoZSBjcm9uIHNjaGVkdWxlciBpZiBpdCBpcyBydW5uaW5nOyBvdGhlcndpc2UgaXQgZG9lcyBub3RoaW5nLgpBIGNvbnRleHQgaXMgcmV0dXJuZWQgc28gdGhlIGNhbGxlciBjYW4gd2FpdCBmb3IgcnVubmluZyBqb2JzIHRvIGNvbXBsZXRlLgo8L3A+CjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkVudHJ5IiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMNTAiPkVudHJ5PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNFbnRyeSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBFbnRyeSBzdHJ1Y3Qgewo8c3BhbiBpZD0iRW50cnkuSUQiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSUQgaXMgdGhlIGNyb24tYXNzaWduZWQgSUQgb2YgdGhpcyBlbnRyeSwgd2hpY2ggbWF5IGJlIHVzZWQgdG8gbG9vayB1cCBhPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzbmFwc2hvdCBvciByZW1vdmUgaXQuPC9zcGFuPgoJSUQgPGEgaHJlZj0iI0VudHJ5SUQiPkVudHJ5SUQ8L2E+Cgo8c3BhbiBpZD0iRW50cnkuU2NoZWR1bGUiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gU2NoZWR1bGUgb24gd2hpY2ggdGhpcyBqb2Igc2hvdWxkIGJlIHJ1bi48L3NwYW4+Cjwvc3Bhbj4JU2NoZWR1bGUgPGEgaHJlZj0iI1NjaGVkdWxlIj5TY2hlZHVsZTwvYT4KCjxzcGFuIGlkPSJFbnRyeS5OZXh0IiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIE5leHQgdGltZSB0aGUgam9iIHdpbGwgcnVuLCBvciB0aGUgemVybyB0aW1lIGlmIENyb24gaGFzIG5vdCBiZWVuPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBzdGFydGVkIG9yIHRoaXMgZW50cnkmIzM5O3Mgc2NoZWR1bGUgaXMgdW5zYXRpc2ZpYWJsZTwvc3Bhbj4KCU5leHQgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI1RpbWUiPlRpbWU8L2E+Cgo8c3BhbiBpZD0iRW50cnkuUHJldiIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBQcmV2IGlzIHRoZSBsYXN0IHRpbWUgdGhpcyBqb2Igd2FzIHJ1biwgb3IgdGhlIHplcm8gdGltZSBpZiBuZXZlci48L3NwYW4+Cjwvc3Bhbj4JUHJldiA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT4KCjxzcGFuIGlkPSJFbnRyeS5XcmFwcGVkSm9iIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIFdyYXBwZWRKb2IgaXMgdGhlIHRoaW5nIHRvIHJ1biB3aGVuIHRoZSBTY2hlZHVsZSBpcyBhY3RpdmF0ZWQuPC9zcGFuPgo8L3NwYW4+CVdyYXBwZWRKb2IgPGEgaHJlZj0iI0pvYiI+Sm9iPC9hPgoKPHNwYW4gaWQ9IkVudHJ5LkpvYiIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBKb2IgaXMgdGhlIHRoaW5nIHRoYXQgd2FzIHN1Ym1pdHRlZCB0byBjcm9uLjwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSXQgaXMga2VwdCBhcm91bmQgc28gdGhhdCB1c2VyIGNvZGUgdGhhdCBuZWVkcyB0byBnZXQgYXQgdGhlIGpvYiBsYXRlciw8L3NwYW4+Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gZS5nLiB2aWEgRW50cmllcygpIGNhbiBkbyBzby48L3NwYW4+CglKb2IgPGEgaHJlZj0iI0pvYiI+Sm9iPC9hPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+RW50cnkgY29uc2lzdHMgb2YgYSBzY2hlZHVsZSBhbmQgdGhlIGZ1bmMgdG8gZXhlY3V0ZSBvbiB0aGF0IHNjaGVkdWxlLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkVudHJ5LlZhbGlkIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIChFbnRyeSkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMNzUiPlZhbGlkPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNFbnRyeS5WYWxpZCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoZSA8YSBocmVmPSIjRW50cnkiPkVudHJ5PC9hPikgVmFsaWQoKSA8YSBocmVmPSIvYnVpbHRpbiNib29sIj5ib29sPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlZhbGlkIHJldHVybnMgdHJ1ZSBpZiB0aGlzIGlzIG5vdCB0aGUgemVybyBlbnRyeS4KPC9wPgo8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJFbnRyeUlEIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY3Jvbi5nbyNMNDciPkVudHJ5SUQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0VudHJ5SUQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgRW50cnlJRCA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5FbnRyeUlEIGlkZW50aWZpZXMgYW4gZW50cnkgd2l0aGluIGEgQ3JvbiBpbnN0YW5jZQo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkZ1bmNKb2IiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wxMzQiPkZ1bmNKb2I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Z1bmNKb2IiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgRnVuY0pvYiBmdW5jKCk8L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5GdW5jSm9iIGlzIGEgd3JhcHBlciB0aGF0IHR1cm5zIGEgZnVuYygpIGludG8gYSBjcm9uLkpvYgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkZ1bmNKb2IuUnVuIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIChGdW5jSm9iKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wxMzYiPlJ1bjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRnVuY0pvYi5SdW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGYgPGEgaHJlZj0iI0Z1bmNKb2IiPkZ1bmNKb2I8L2E+KSBSdW4oKTwvcHJlPgogICAgPC9kaXY+CiAgCjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkpvYiIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2Nyb24uZ28jTDM1Ij5Kb2I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0pvYiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBKb2IgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IkpvYi5SdW4iIGRhdGEta2luZD0ibWV0aG9kIj4JUnVuKCkKPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Kb2IgaXMgYW4gaW50ZXJmYWNlIGZvciBzdWJtaXR0ZWQgY3JvbiBqb2JzLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkpvYldyYXBwZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jaGFpbi5nbyNMMTEiPkpvYldyYXBwZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0pvYldyYXBwZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgSm9iV3JhcHBlciBmdW5jKDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4pIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Kb2JXcmFwcGVyIGRlY29yYXRlcyB0aGUgZ2l2ZW4gSm9iIHdpdGggc29tZSBiZWhhdmlvci4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iRGVsYXlJZlN0aWxsUnVubmluZyIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmNIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jaGFpbi5nbyNMNjEiPkRlbGF5SWZTdGlsbFJ1bm5pbmc8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0RlbGF5SWZTdGlsbFJ1bm5pbmciPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgRGVsYXlJZlN0aWxsUnVubmluZyhsb2dnZXIgPGEgaHJlZj0iI0xvZ2dlciI+TG9nZ2VyPC9hPikgPGEgaHJlZj0iI0pvYldyYXBwZXIiPkpvYldyYXBwZXI8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+RGVsYXlJZlN0aWxsUnVubmluZyBzZXJpYWxpemVzIGpvYnMsIGRlbGF5aW5nIHN1YnNlcXVlbnQgcnVucyB1bnRpbCB0aGUKcHJldmlvdXMgb25lIGlzIGNvbXBsZXRlLiBKb2JzIHJ1bm5pbmcgYWZ0ZXIgYSBkZWxheSBvZiBtb3JlIHRoYW4gYSBtaW51dGUKaGF2ZSB0aGUgZGVsYXkgbG9nZ2VkIGF0IEluZm8uCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuYyI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IlJlY292ZXIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY2hhaW4uZ28jTDM4Ij5SZWNvdmVyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNSZWNvdmVyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFJlY292ZXIobG9nZ2VyIDxhIGhyZWY9IiNMb2dnZXIiPkxvZ2dlcjwvYT4pIDxhIGhyZWY9IiNKb2JXcmFwcGVyIj5Kb2JXcmFwcGVyPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlJlY292ZXIgcGFuaWNzIGluIHdyYXBwZWQgam9icyBhbmQgbG9nIHRoZW0gd2l0aCB0aGUgcHJvdmlkZWQgbG9nZ2VyLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJTa2lwSWZTdGlsbFJ1bm5pbmciIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY2hhaW4uZ28jTDc4Ij5Ta2lwSWZTdGlsbFJ1bm5pbmc8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NraXBJZlN0aWxsUnVubmluZyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBTa2lwSWZTdGlsbFJ1bm5pbmcobG9nZ2VyIDxhIGhyZWY9IiNMb2dnZXIiPkxvZ2dlcjwvYT4pIDxhIGhyZWY9IiNKb2JXcmFwcGVyIj5Kb2JXcmFwcGVyPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlNraXBJZlN0aWxsUnVubmluZyBza2lwcyBhbiBpbnZvY2F0aW9uIG9mIHRoZSBKb2IgaWYgYSBwcmV2aW91cyBpbnZvY2F0aW9uIGlzCnN0aWxsIHJ1bm5pbmcuIEl0IGxvZ3Mgc2tpcHMgdG8gdGhlIGdpdmVuIGxvZ2dlciBhdCBJbmZvIGxldmVsLgo8L3A+CjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkxvZ2dlciIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2xvZ2dlci5nbyNMMTkiPkxvZ2dlcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTG9nZ2VyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIExvZ2dlciBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iTG9nZ2VyLkluZm8iIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEluZm8gbG9ncyByb3V0aW5lIG1lc3NhZ2VzIGFib3V0IGNyb24mIzM5O3Mgb3BlcmF0aW9uLjwvc3Bhbj4KPC9zcGFuPglJbmZvKG1zZyA8YSBocmVmPSIvYnVpbHRpbiNzdHJpbmciPnN0cmluZzwvYT4sIGtleXNBbmRWYWx1ZXMgLi4uaW50ZXJmYWNle30pCjxzcGFuIGlkPSJMb2dnZXIuRXJyb3IiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEVycm9yIGxvZ3MgYW4gZXJyb3IgY29uZGl0aW9uLjwvc3Bhbj4KPC9zcGFuPglFcnJvcihlcnIgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPiwgbXNnIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwga2V5c0FuZFZhbHVlcyAuLi5pbnRlcmZhY2V7fSkKfTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPkxvZ2dlciBpcyB0aGUgaW50ZXJmYWNlIHVzZWQgaW4gdGhpcyBwYWNrYWdlIGZvciBsb2dnaW5nLCBzbyB0aGF0IGFueSBiYWNrZW5kCmNhbiBiZSBwbHVnZ2VkIGluLiBJdCBpcyBhIHN1YnNldCBvZiB0aGUgZ2l0aHViLmNvbS9nby1sb2dyL2xvZ3IgaW50ZXJmYWNlLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZVZhcmlhYmxlIj4KICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPjxzcGFuIGlkPSJEZWZhdWx0TG9nZ2VyIiBkYXRhLWtpbmQ9InZhcmlhYmxlIj52YXIgRGVmYXVsdExvZ2dlciA8YSBocmVmPSIjTG9nZ2VyIj5Mb2dnZXI8L2E+ID0gPGEgaHJlZj0iI1ByaW50ZkxvZ2dlciI+UHJpbnRmTG9nZ2VyPC9hPig8YSBocmVmPSIvbG9nIj5sb2c8L2E+LjxhIGhyZWY9Ii9sb2cjTmV3Ij5OZXc8L2E+KDxhIGhyZWY9Ii9vcyI+b3M8L2E+LjxhIGhyZWY9Ii9vcyNTdGRvdXQiPlN0ZG91dDwvYT4sICYjMzQ7Y3JvbjogJiMzNDssIDxhIGhyZWY9Ii9sb2ciPmxvZzwvYT4uPGEgaHJlZj0iL2xvZyNMc3RkRmxhZ3MiPkxzdGRGbGFnczwvYT4pKTwvc3Bhbj48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5EZWZhdWx0TG9nZ2VyIGlzIHVzZWQgYnkgQ3JvbiBpZiBub25lIGlzIHNwZWNpZmllZC4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVWYXJpYWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT48c3BhbiBpZD0iRGlzY2FyZExvZ2dlciIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+dmFyIERpc2NhcmRMb2dnZXIgPGEgaHJlZj0iI0xvZ2dlciI+TG9nZ2VyPC9hPiA9IDxhIGhyZWY9IiNQcmludGZMb2dnZXIiPlByaW50ZkxvZ2dlcjwvYT4oPGEgaHJlZj0iL2xvZyI+bG9nPC9hPi48YSBocmVmPSIvbG9nI05ldyI+TmV3PC9hPig8YSBocmVmPSIvaW8vaW91dGlsIj5pb3V0aWw8L2E+LjxhIGhyZWY9Ii9pby9pb3V0aWwjRGlzY2FyZCI+RGlzY2FyZDwvYT4sICYjMzQ7JiMzNDssIDApKTwvc3Bhbj48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5EaXNjYXJkTG9nZ2VyIGNhbiBiZSB1c2VkIGJ5IGNhbGxlcnMgdG8gZGlzY2FyZCBhbGwgbG9nIG1lc3NhZ2VzLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJQcmludGZMb2dnZXIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvbG9nZ2VyLmdvI0wyOCI+UHJpbnRmTG9nZ2VyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQcmludGZMb2dnZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgUHJpbnRmTG9nZ2VyKGwgaW50ZXJmYWNleyBQcmludGYoPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCAuLi5pbnRlcmZhY2V7fSkgfSkgPGEgaHJlZj0iI0xvZ2dlciI+TG9nZ2VyPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlByaW50ZkxvZ2dlciB3cmFwcyBhIFByaW50Zi1iYXNlZCBsb2dnZXIgKHN1Y2ggYXMgdGhlIHN0YW5kYXJkIGxpYnJhcnkgJiMzNDtsb2cmIzM0OykKaW50byBhbiBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgTG9nZ2VyIGludGVyZmFjZSB3aGljaCBsb2dzIGVycm9ycyBvbmx5Lgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJWZXJib3NlUHJpbnRmTG9nZ2VyIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2xvZ2dlci5nbyNMMzQiPlZlcmJvc2VQcmludGZMb2dnZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1ZlcmJvc2VQcmludGZMb2dnZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgVmVyYm9zZVByaW50ZkxvZ2dlcihsIGludGVyZmFjZXsgUHJpbnRmKDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgLi4uaW50ZXJmYWNle30pIH0pIDxhIGhyZWY9IiNMb2dnZXIiPkxvZ2dlcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5WZXJib3NlUHJpbnRmTG9nZ2VyIHdyYXBzIGEgUHJpbnRmLWJhc2VkIGxvZ2dlciAoc3VjaCBhcyB0aGUgc3RhbmRhcmQgbGlicmFyeQomIzM0O2xvZyYjMzQ7KSBpbnRvIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSBMb2dnZXIgaW50ZXJmYWNlIHdoaWNoIGxvZ3MgZXZlcnl0aGluZy4KPC9wPgo8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJPcHRpb24iIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9vcHRpb24uZ28jTDgiPk9wdGlvbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjT3B0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIE9wdGlvbiBmdW5jKCo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+T3B0aW9uIHJlcHJlc2VudHMgYSBtb2RpZmljYXRpb24gdG8gdGhlIGRlZmF1bHQgYmVoYXZpb3Igb2YgYSBDcm9uLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJXaXRoQ2hhaW4iIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvb3B0aW9uLmdvI0wzNCI+V2l0aENoYWluPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoQ2hhaW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgV2l0aENoYWluKHdyYXBwZXJzIC4uLjxhIGhyZWY9IiNKb2JXcmFwcGVyIj5Kb2JXcmFwcGVyPC9hPikgPGEgaHJlZj0iI09wdGlvbiI+T3B0aW9uPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPldpdGhDaGFpbiBzcGVjaWZpZXMgSm9iIHdyYXBwZXJzIHRvIGFwcGx5IHRvIGFsbCBqb2JzIGFkZGVkIHRvIHRoaXMgY3Jvbi4KUmVmZXIgdG8gdGhlIENoYWluKiBmdW5jdGlvbnMgaW4gdGhpcyBwYWNrYWdlIGZvciBwcm92aWRlZCB3cmFwcGVycy4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aExvY2F0aW9uIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL29wdGlvbi5nbyNMMTEiPldpdGhMb2NhdGlvbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aExvY2F0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhMb2NhdGlvbihsb2MgKjxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNMb2NhdGlvbiI+TG9jYXRpb248L2E+KSA8YSBocmVmPSIjT3B0aW9uIj5PcHRpb248L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+V2l0aExvY2F0aW9uIG92ZXJyaWRlcyB0aGUgdGltZXpvbmUgb2YgdGhlIGNyb24gaW5zdGFuY2UuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuYyI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhMb2dnZXIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvb3B0aW9uLmdvI0w0MSI+V2l0aExvZ2dlcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aExvZ2dlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoTG9nZ2VyKGxvZ2dlciA8YSBocmVmPSIjTG9nZ2VyIj5Mb2dnZXI8L2E+KSA8YSBocmVmPSIjT3B0aW9uIj5PcHRpb248L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+V2l0aExvZ2dlciB1c2VzIHRoZSBwcm92aWRlZCBsb2dnZXIuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuYyI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhQYXJzZXIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvb3B0aW9uLmdvI0wyNiI+V2l0aFBhcnNlcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aFBhcnNlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoUGFyc2VyKHAgPGEgaHJlZj0iI1NjaGVkdWxlUGFyc2VyIj5TY2hlZHVsZVBhcnNlcjwvYT4pIDxhIGhyZWY9IiNPcHRpb24iPk9wdGlvbjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5XaXRoUGFyc2VyIG92ZXJyaWRlcyB0aGUgcGFyc2VyIHVzZWQgZm9yIGludGVycHJldGluZyBqb2Igc2NoZWR1bGVzLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJXaXRoU2Vjb25kcyIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmNIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9vcHRpb24uZ28jTDE5Ij5XaXRoU2Vjb25kczwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aFNlY29uZHMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgV2l0aFNlY29uZHMoKSA8YSBocmVmPSIjT3B0aW9uIj5PcHRpb248L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+V2l0aFNlY29uZHMgb3ZlcnJpZGVzIHRoZSBwYXJzZXIgdXNlZCBmb3IgaW50ZXJwcmV0aW5nIGpvYiBzY2hlZHVsZXMgdG8KaW5jbHVkZSBhIHNlY29uZHMgZmllbGQgYXMgdGhlIGZpcnN0IG9uZS4KPC9wPgo8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJQYXJzZU9wdGlvbiIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL3BhcnNlci5nbyNMMTUiPlBhcnNlT3B0aW9uPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQYXJzZU9wdGlvbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBQYXJzZU9wdGlvbiA8YSBocmVmPSIvYnVpbHRpbiNpbnQiPmludDwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Db25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIGNyZWF0aW5nIGEgcGFyc2VyLiBNb3N0IG9wdGlvbnMgc3BlY2lmeSB3aGljaApmaWVsZHMgc2hvdWxkIGJlIGluY2x1ZGVkLCB3aGlsZSBvdGhlcnMgZW5hYmxlIGZlYXR1cmVzLiBJZiBhIGZpZWxkIGlzIG5vdAppbmNsdWRlZCB0aGUgcGFyc2VyIHdpbGwgYXNzdW1lIGEgZGVmYXVsdCB2YWx1ZS4gVGhlc2Ugb3B0aW9ucyBkbyBub3QgY2hhbmdlCnRoZSBvcmRlciBmaWVsZHMgYXJlIHBhcnNlIGluLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUNvbnN0YW50Ij4KICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmNvbnN0ICgKPHNwYW4gaWQ9IlNlY29uZCIgZGF0YS1raW5kPSJjb25zdGFudCI+CVNlY29uZCAgICAgICAgIDxhIGhyZWY9IiNQYXJzZU9wdGlvbiI+UGFyc2VPcHRpb248L2E+ID0gMSAmbHQ7Jmx0OyA8YSBocmVmPSIvYnVpbHRpbiNpb3RhIj5pb3RhPC9hPiA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gU2Vjb25kcyBmaWVsZCwgZGVmYXVsdCAwPC9zcGFuPgo8L3NwYW4+PHNwYW4gaWQ9IlNlY29uZE9wdGlvbmFsIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JU2Vjb25kT3B0aW9uYWwgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIE9wdGlvbmFsIHNlY29uZHMgZmllbGQsIGRlZmF1bHQgMDwvc3Bhbj4KPC9zcGFuPjxzcGFuIGlkPSJNaW51dGUiIGRhdGEta2luZD0iY29uc3RhbnQiPglNaW51dGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gTWludXRlcyBmaWVsZCwgZGVmYXVsdCAwPC9zcGFuPgo8L3NwYW4+PHNwYW4gaWQ9IkhvdXIiIGRhdGEta2luZD0iY29uc3RhbnQiPglIb3VyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gSG91cnMgZmllbGQsIGRlZmF1bHQgMDwvc3Bhbj4KPC9zcGFuPjxzcGFuIGlkPSJEb20iIGRhdGEta2luZD0iY29uc3RhbnQiPglEb20gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gRGF5IG9mIG1vbnRoIGZpZWxkLCBkZWZhdWx0ICo8L3NwYW4+Cjwvc3Bhbj48c3BhbiBpZD0iTW9udGgiIGRhdGEta2luZD0iY29uc3RhbnQiPglNb250aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gTW9udGggZmllbGQsIGRlZmF1bHQgKjwvc3Bhbj4KPC9zcGFuPjxzcGFuIGlkPSJEb3ciIGRhdGEta2luZD0iY29uc3RhbnQiPglEb3cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gRGF5IG9mIHdlZWsgZmllbGQsIGRlZmF1bHQgKjwvc3Bhbj4KPC9zcGFuPjxzcGFuIGlkPSJEb3dPcHRpb25hbCIgZGF0YS1raW5kPSJjb25zdGFudCI+CURvd09wdGlvbmFsICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBPcHRpb25hbCBkYXkgb2Ygd2VlayBmaWVsZCwgZGVmYXVsdCAqPC9zcGFuPgo8L3NwYW4+PHNwYW4gaWQ9IkRlc2NyaXB0b3IiIGRhdGEta2luZD0iY29uc3RhbnQiPglEZXNjcmlwdG9yICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gQWxsb3cgZGVzY3JpcHRvcnMgc3VjaCBhcyBAbW9udGhseSwgQHdlZWtseSwgZXRjLjwvc3Bhbj4KPC9zcGFuPik8L3ByZT4KICAgIDwvZGl2PgogIAo8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJQYXJzZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9wYXJzZXIuZ28jTDQ4Ij5QYXJzZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1BhcnNlciI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBQYXJzZXIgc3RydWN0IHsKCTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBjb250YWlucyBmaWx0ZXJlZCBvciB1bmV4cG9ydGVkIGZpZWxkczwvc3Bhbj4KfTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPkEgY3VzdG9tIFBhcnNlciB0aGF0IGNhbiBiZSBjb25maWd1cmVkLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJOZXdQYXJzZXIiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvcGFyc2VyLmdvI0w3MSI+TmV3UGFyc2VyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNOZXdQYXJzZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTmV3UGFyc2VyKG9wdGlvbnMgPGEgaHJlZj0iI1BhcnNlT3B0aW9uIj5QYXJzZU9wdGlvbjwvYT4pIDxhIGhyZWY9IiNQYXJzZXIiPlBhcnNlcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5OZXdQYXJzZXIgY3JlYXRlcyBhIFBhcnNlciB3aXRoIGN1c3RvbSBvcHRpb25zLgo8L3A+PHA+SXQgcGFuaWNzIGlmIG1vcmUgdGhhbiBvbmUgT3B0aW9uYWwgaXMgZ2l2ZW4sIHNpbmNlIGl0IHdvdWxkIGJlIGltcG9zc2libGUgdG8KY29ycmVjdGx5IGluZmVyIHdoaWNoIG9wdGlvbmFsIGlzIHByb3ZpZGVkIG9yIG1pc3NpbmcgaW4gZ2VuZXJhbC4KPC9wPjxwPkV4YW1wbGVzCjwvcD48cHJlPi8vIFN0YW5kYXJkIHBhcnNlciB3aXRob3V0IGRlc2NyaXB0b3JzCnNwZWNQYXJzZXIgOj0gTmV3UGFyc2VyKE1pbnV0ZSB8IEhvdXIgfCBEb20gfCBNb250aCB8IERvdykKc2NoZWQsIGVyciA6PSBzcGVjUGFyc2VyLlBhcnNlKCYjMzQ7MCAwIDE1ICovMyAqJiMzNDspCgovLyBTYW1lIGFzIGFib3ZlLCBqdXN0IGV4Y2x1ZGVzIHRpbWUgZmllbGRzCnN1YnNQYXJzZXIgOj0gTmV3UGFyc2VyKERvbSB8IE1vbnRoIHwgRG93KQpzY2hlZCwgZXJyIDo9IHNwZWNQYXJzZXIuUGFyc2UoJiMzNDsxNSAqLzMgKiYjMzQ7KQoKLy8gU2FtZSBhcyBhYm92ZSwganVzdCBtYWtlcyBEb3cgb3B0aW9uYWwKc3Vic1BhcnNlciA6PSBOZXdQYXJzZXIoRG9tIHwgTW9udGggfCBEb3dPcHRpb25hbCkKc2NoZWQsIGVyciA6PSBzcGVjUGFyc2VyLlBhcnNlKCYjMzQ7MTUgKi8zJiMzNDspCjwvcHJlPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJQYXJzZXIuUGFyc2UiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgKFBhcnNlcikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvcGFyc2VyLmdvI0w4OCI+UGFyc2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1BhcnNlci5QYXJzZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAocCA8YSBocmVmPSIjUGFyc2VyIj5QYXJzZXI8L2E+KSBQYXJzZShzcGVjIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKDxhIGhyZWY9IiNTY2hlZHVsZSI+U2NoZWR1bGU8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlBhcnNlIHJldHVybnMgYSBuZXcgY3JvbnRhYiBzY2hlZHVsZSByZXByZXNlbnRpbmcgdGhlIGdpdmVuIHNwZWMuCkl0IHJldHVybnMgYSBkZXNjcmlwdGl2ZSBlcnJvciBpZiB0aGUgc3BlYyBpcyBub3QgdmFsaWQuCkl0IGFjY2VwdHMgY3JvbnRhYiBzcGVjcyBhbmQgZmVhdHVyZXMgY29uZmlndXJlZCBieSBOZXdQYXJzZXIuCjwvcD4KPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2NoZWR1bGUiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0w0MCI+U2NoZWR1bGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NjaGVkdWxlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNjaGVkdWxlIGludGVyZmFjZSB7CjxzcGFuIGlkPSJTY2hlZHVsZS5OZXh0IiBkYXRhLWtpbmQ9Im1ldGhvZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOZXh0IHJldHVybnMgdGhlIG5leHQgYWN0aXZhdGlvbiB0aW1lLCBsYXRlciB0aGFuIHRoZSBnaXZlbiB0aW1lLjwvc3Bhbj4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gTmV4dCBpcyBpbnZva2VkIGluaXRpYWxseSwgYW5kIHRoZW4gZWFjaCB0aW1lIHRoZSBqb2IgaXMgcnVuLjwvc3Bhbj4KCU5leHQoPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI1RpbWUiPlRpbWU8L2E+KSA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT4KfTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlNjaGVkdWxlIGRlc2NyaWJlcyBhIGpvYiYjMzk7cyBkdXR5IGN5Y2xlLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJQYXJzZVN0YW5kYXJkIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL3BhcnNlci5nbyNMMjI5Ij5QYXJzZVN0YW5kYXJkPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQYXJzZVN0YW5kYXJkIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFBhcnNlU3RhbmRhcmQoc3RhbmRhcmRTcGVjIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKDxhIGhyZWY9IiNTY2hlZHVsZSI+U2NoZWR1bGU8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlBhcnNlU3RhbmRhcmQgcmV0dXJucyBhIG5ldyBjcm9udGFiIHNjaGVkdWxlIHJlcHJlc2VudGluZyB0aGUgZ2l2ZW4Kc3RhbmRhcmRTcGVjICg8YSBocmVmPSJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uIj5odHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9uPC9hPikuIEl0IHJlcXVpcmVzIDUgZW50cmllcwpyZXByZXNlbnRpbmc6IG1pbnV0ZSwgaG91ciwgZGF5IG9mIG1vbnRoLCBtb250aCBhbmQgZGF5IG9mIHdlZWssIGluIHRoYXQKb3JkZXIuIEl0IHJldHVybnMgYSBkZXNjcmlwdGl2ZSBlcnJvciBpZiB0aGUgc3BlYyBpcyBub3QgdmFsaWQuCjwvcD48cD5JdCBhY2NlcHRzCjwvcD48cHJlPi0gU3RhbmRhcmQgY3JvbnRhYiBzcGVjcywgZS5nLiAmIzM0OyogKiAqICogPyYjMzQ7Ci0gRGVzY3JpcHRvcnMsIGUuZy4gJiMzNDtAbWlkbmlnaHQmIzM0OywgJiMzNDtAZXZlcnkgMWgzMG0mIzM0Owo8L3ByZT4KPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iU2NoZWR1bGVQYXJzZXIiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvI0wzMCI+U2NoZWR1bGVQYXJzZXI8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NjaGVkdWxlUGFyc2VyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNjaGVkdWxlUGFyc2VyIGludGVyZmFjZSB7CjxzcGFuIGlkPSJTY2hlZHVsZVBhcnNlci5QYXJzZSIgZGF0YS1raW5kPSJtZXRob2QiPglQYXJzZShzcGVjIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPikgKDxhIGhyZWY9IiNTY2hlZHVsZSI+U2NoZWR1bGU8L2E+LCA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+KQo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlNjaGVkdWxlUGFyc2VyIGlzIGFuIGludGVyZmFjZSBmb3Igc2NoZWR1bGUgc3BlYyBwYXJzZXJzIHRoYXQgcmV0dXJuIGEgU2NoZWR1bGUKPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcGVjU2NoZWR1bGUiIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9zcGVjLmdvI0w3Ij5TcGVjU2NoZWR1bGU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NwZWNTY2hlZHVsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBTcGVjU2NoZWR1bGUgc3RydWN0IHsKPHNwYW4gaWQ9IlNwZWNTY2hlZHVsZS5TZWNvbmQiIGRhdGEta2luZD0iZmllbGQiPjxzcGFuIGlkPSJTcGVjU2NoZWR1bGUuTWludXRlIiBkYXRhLWtpbmQ9ImZpZWxkIj48c3BhbiBpZD0iU3BlY1NjaGVkdWxlLkhvdXIiIGRhdGEta2luZD0iZmllbGQiPjxzcGFuIGlkPSJTcGVjU2NoZWR1bGUuRG9tIiBkYXRhLWtpbmQ9ImZpZWxkIj48c3BhbiBpZD0iU3BlY1NjaGVkdWxlLk1vbnRoIiBkYXRhLWtpbmQ9ImZpZWxkIj48c3BhbiBpZD0iU3BlY1NjaGVkdWxlLkRvdyIgZGF0YS1raW5kPSJmaWVsZCI+CVNlY29uZCwgTWludXRlLCBIb3VyLCBEb20sIE1vbnRoLCBEb3cgPGEgaHJlZj0iL2J1aWx0aW4jdWludDY0Ij51aW50NjQ8L2E+Cjwvc3Bhbj4KPHNwYW4gaWQ9IlNwZWNTY2hlZHVsZS5Mb2NhdGlvbiIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBPdmVycmlkZSBsb2NhdGlvbiBmb3IgdGhpcyBzY2hlZHVsZS48L3NwYW4+Cjwvc3Bhbj4JTG9jYXRpb24gKjxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNMb2NhdGlvbiI+TG9jYXRpb248L2E+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5TcGVjU2NoZWR1bGUgc3BlY2lmaWVzIGEgZHV0eSBjeWNsZSAodG8gdGhlIHNlY29uZCBncmFudWxhcml0eSksIGJhc2VkIG9uIGEKdHJhZGl0aW9uYWwgY3JvbnRhYiBzcGVjaWZpY2F0aW9uLiBJdCBpcyBjb21wdXRlZCBpbml0aWFsbHkgYW5kIHN0b3JlZCBhcyBiaXQgc2V0cy4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcGVjU2NoZWR1bGUuTmV4dCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKlNwZWNTY2hlZHVsZSkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvc3BlYy5nbyNMNTgiPk5leHQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NwZWNTY2hlZHVsZS5OZXh0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChzICo8YSBocmVmPSIjU3BlY1NjaGVkdWxlIj5TcGVjU2NoZWR1bGU8L2E+KSBOZXh0KHQgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI1RpbWUiPlRpbWU8L2E+KSA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5OZXh0IHJldHVybnMgdGhlIG5leHQgdGltZSB0aGlzIHNjaGVkdWxlIGlzIGFjdGl2YXRlZCwgZ3JlYXRlciB0aGFuIHRoZSBnaXZlbgp0aW1lLiAgSWYgbm8gdGltZSBjYW4gYmUgZm91bmQgdG8gc2F0aXNmeSB0aGUgc2NoZWR1bGUsIHJldHVybiB0aGUgemVybyB0aW1lLgo8L3A+CjwvZGl2PjwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgogICAgICAKICAgIDwvZGl2PgogIDwvZGl2PgoKICAgICAgICAKICAgICAgCgogICAgICAKICAgICAgICAKICA8ZGl2IGNsYXNzPSJVbml0RmlsZXMganMtdW5pdEZpbGVzIj4KICAgIDxoMiBjbGFzcz0iVW5pdEZpbGVzLXRpdGxlIiBpZD0ic2VjdGlvbi1zb3VyY2VmaWxlcyI+CiAgICAgIDxpbWcgaGVpZ2h0PSIxNnB4IiB3aWR0aD0iMTJweCIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1maWxlXzE2eDEyLnN2ZyIgYWx0PSIiPlNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdHJlZS92My4wLjEiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj5WaWV3IGFsbDwvYT4KICAgIDwvZGl2PgogICAgPGRpdj4KICAgICAgPHVsIGNsYXNzPSJVbml0RmlsZXMtZmlsZUxpc3QiPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2NoYWluLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImNoYWluLmdvIj5jaGFpbi5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvY29uc3RhbnRkZWxheS5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJjb25zdGFudGRlbGF5LmdvIj5jb25zdGFudGRlbGF5LmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9jcm9uLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImNyb24uZ28iPmNyb24uZ288L2E+CiAgICAgICAgICA8L2xpPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL2RvYy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJkb2MuZ28iPmRvYy5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvbG9nZ2VyLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9ImxvZ2dlci5nbyI+bG9nZ2VyLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YzLjAuMS9vcHRpb24uZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0ib3B0aW9uLmdvIj5vcHRpb24uZ288L2E+CiAgICAgICAgICA8L2xpPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjMuMC4xL3BhcnNlci5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJwYXJzZXIuZ28iPnBhcnNlci5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92My4wLjEvc3BlYy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJzcGVjLmdvIj5zcGVjLmdvPC9hPgogICAgICAgICAgPC9saT48L3VsPgogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAKICAgICAgCiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzLW1ldGEiIHJvbGU9ImNvbXBsZW1lbnRhcnkiIGFyaWEtbGFiZWw9ImxpbmtzIj4KICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdE1ldGEiPgogICAgPGgyIGNsYXNzPSJVbml0TWV0YS1kZXRhaWxzVGl0bGUiPkRldGFpbHM8L2gyPgogICAgPGRpdiBjbGFzcz0iVW5pdE1ldGEtZGV0YWlscyI+CiAgICAgIAogIDx1bD4KICAgIDxsaT4KICAgICAgCiAgPGltZyBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLWljb24ic3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1jaGVja0NpcmNsZU91dGxpbmVfMjR4MjQuc3ZnIiBhbHQ9ImNoZWNrZWQiaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KCiAgICAgIFZhbGlkIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi90cmVlL3YzLjAuMS9nby5tb2QiIHRhcmdldD0iX2JsYW5rIj5nby5tb2Q8L2E+IGZpbGUKICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRNZXRhRGV0YWlscy10b2dnbGV0aXAiPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGFyaWEtbGFiZWw9Im1vcmUgaW5mbyIgZGF0YS10b2dnbGV0aXAtY29udGVudD0iVGhlIEdvIG1vZHVsZSBzeXN0ZW0gd2FzIGludHJvZHVjZWQgaW4gR28gMS4xMSBhbmQgaXMgdGhlIG9mZmljaWFsIGRlcGVuZGVuY3kgbWFuYWdlbWVudCBzb2x1dGlvbiBmb3IgR28uIj4KICAgICAgPGltZyBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLWljb24iIHNyYz0iL3N0YXRpYy9pbWcvcGtnLWljb24taGVscF8yNHgyNC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgPC9idXR0b24+CiAgICA8c3BhbiByb2xlPSJzdGF0dXMiPjwvc3Bhbj4KICA8L3NwYW4+CgogICAgPC9saT4KICAgIDxsaT4KICAgICAgCiAgPGltZyBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLWljb24ic3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1jaGVja0NpcmNsZU91dGxpbmVfMjR4MjQuc3ZnIiBhbHQ9ImNoZWNrZWQiaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KCiAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgIAogIDxzcGFuIGNsYXNzPSJVbml0TWV0YURldGFpbHMtdG9nZ2xldGlwIj4KICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBhcmlhLWxhYmVsPSJtb3JlIGluZm8iIGRhdGEtdG9nZ2xldGlwLWNvbnRlbnQ9IlJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlcyBwbGFjZSBtaW5pbWFsIHJlc3RyaWN0aW9ucyBvbiBob3cgc29mdHdhcmUgY2FuIGJlIHVzZWQsIG1vZGlmaWVkLCBhbmQgcmVkaXN0cmlidXRlZC4iPgogICAgICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1oZWxwXzI0eDI0LnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICA8L2J1dHRvbj4KICAgIDxzcGFuIHJvbGU9InN0YXR1cyI+PC9zcGFuPgogIDwvc3Bhbj4KCiAgICA8L2xpPgogICAgPGxpPgogICAgICAKICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiJzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWNoZWNrQ2lyY2xlT3V0bGluZV8yNHgyNC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRNZXRhRGV0YWlscy10b2dnbGV0aXAiPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGFyaWEtbGFiZWw9Im1vcmUgaW5mbyIgZGF0YS10b2dnbGV0aXAtY29udGVudD0iTW9kdWxlcyB3aXRoIHRhZ2dlZCB2ZXJzaW9ucyBnaXZlIGltcG9ydGVycyBtb3JlIHByZWRpY3RhYmxlIGJ1aWxkcy4iPgogICAgICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1oZWxwXzI0eDI0LnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICA8L2J1dHRvbj4KICAgIDxzcGFuIHJvbGU9InN0YXR1cyI+PC9zcGFuPgogIDwvc3Bhbj4KCiAgICA8L2xpPgogICAgPGxpPgogICAgICAKICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiJzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWNoZWNrQ2lyY2xlT3V0bGluZV8yNHgyNC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgU3RhYmxlIHZlcnNpb24KICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRNZXRhRGV0YWlscy10b2dnbGV0aXAiPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGFyaWEtbGFiZWw9Im1vcmUgaW5mbyIgZGF0YS10b2dnbGV0aXAtY29udGVudD0iV2hlbiBhIHByb2plY3QgcmVhY2hlcyBtYWpvciB2ZXJzaW9uIHYxIGl0IGlzIGNvbnNpZGVyZWQgc3RhYmxlLiI+CiAgICAgIDxpbWcgY2xhc3M9IlVuaXRNZXRhRGV0YWlscy1pY29uIiBzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWhlbHBfMjR4MjQuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgIDwvYnV0dG9uPgogICAgPHNwYW4gcm9sZT0ic3RhdHVzIj48L3NwYW4+CiAgPC9zcGFuPgoKICAgIDwvbGk+CiAgPC91bD4KCiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9IlVuaXRNZXRhLWxlYXJuIj4KICAgICAgPGEgaHJlZj0iL2Fib3V0I2Jlc3QtcHJhY3RpY2VzLWgyIj5MZWFybiBtb3JlPC9hPgogICAgPC9kaXY+CiAgICA8aDIgY2xhc3M9IlVuaXRNZXRhLXJlcG9UaXRsZSI+UmVwb3NpdG9yeTwvaDI+CiAgICA8ZGl2IGNsYXNzPSJVbml0TWV0YS1yZXBvIj4KICAgICAgCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+CiAgICAgICAgICBnaXRodWIuY29tL3JvYmZpZy9jcm9uCiAgICAgICAgPC9hPgogICAgICAKICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJVbml0TWV0YS1saW5rcyI+CiAgICAgIDx1bD4KICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICAgIAogIAoKICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2PgoKICAgIDwvZGl2PgogIDwvZGl2PgoKICA8L2Rpdj4KCiAgPGRpYWxvZyBjbGFzcz0iSnVtcERpYWxvZyBEaWFsb2ciPgogICAgPGgyIGNsYXNzPSJEaWFsb2ctdGl0bGUiPkp1bXAgdG88L2gyPgogICAgPGZvcm0gbWV0aG9kPSJkaWFsb2ciPgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWZpbHRlciI+CiAgICAgICAgPGlucHV0IGNsYXNzPSJKdW1wRGlhbG9nLWlucHV0IiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0idGV4dCI+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWJvZHkiPgogICAgICAgIDxkaXYgY2xhc3M9Ikp1bXBEaWFsb2ctbGlzdCI+PC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJEaWFsb2ctYWN0aW9ucyI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRGlhbG9nLWJ1dHRvbiI+Q2xvc2U8L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaWFsb2c+CgogIDxkaWFsb2cgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZyBEaWFsb2ciPgogICAgPGgyIGNsYXNzPSJEaWFsb2ctdGl0bGUiPktleWJvYXJkIHNob3J0Y3V0czwvaDI+CiAgICA8dGFibGU+CiAgICAgIDx0Ym9keT4KICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48Yj4/PC9iPjwvdGQ+PHRkPiA6IFRoaXMgbWVudTwvdGQ+PC90cj4KICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48Yj4vPC9iPjwvdGQ+PHRkPiA6IFNlYXJjaCBzaXRlPC90ZD48L3RyPgogICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPjxiPmY8L2I+IG9yIDxiPkY8L2I+PC90ZD48dGQ+IDogSnVtcCB0bzwvdGQ+PC90cj4KICAgICAgPC90Ym9keT4KICAgIDwvdGFibGU+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyI+CiAgICAgIDxkaXYgY2xhc3M9IkRpYWxvZy1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJEaWFsb2ctYnV0dG9uIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KPC9kaXY+Cjxmb290ZXIgY2xhc3M9IlNpdGUtZm9vdGVyIj4KICAKICA8ZGl2IGNsYXNzPSJGb290ZXIiPgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLWxpbmtzIj4KICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyIgY2xhc3M9IkZvb3Rlci1saW5rIEZvb3Rlci1saW5rLS1wcmltYXJ5IiB0aXRsZT0iV2h5IEdvIj4KICAgICAgICAgIFdoeSBHbwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjdXNlLWNhc2VzIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSJVc2UgQ2FzZXMiPgogICAgICAgICAgVXNlIENhc2VzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyNjYXNlLXN0dWRpZXMiIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IkNhc2UgU3R1ZGllcyI+CiAgICAgICAgICBDYXNlIFN0dWRpZXMKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJGb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9sZWFybi5nby5kZXYvIiBjbGFzcz0iRm9vdGVyLWxpbmsgRm9vdGVyLWxpbmstLXByaW1hcnkiIHRpdGxlPSJHZXR0aW5nIFN0YXJ0ZWQiPgogICAgICAgICAgR2V0dGluZyBTdGFydGVkCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb2xhbmcub3JnIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgUGxheWdyb3VuZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3RvdXIuZ29sYW5nLm9yZyIgY2xhc3M9IkZvb3Rlci1saW5rIiB0aXRsZT0iIj4KICAgICAgICAgIFRvdXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2dvP3RhYj1OZXdlc3QiIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IiI+CiAgICAgICAgICBTdGFjayBPdmVyZmxvdwogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYiIGNsYXNzPSJGb290ZXItbGluayBGb290ZXItbGluay0tcHJpbWFyeSIgdGl0bGU9IkRpc2NvdmVyIFBhY2thZ2VzIj4KICAgICAgICAgIERpc2NvdmVyIFBhY2thZ2VzCiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Fib3V0IiBjbGFzcz0iRm9vdGVyLWxpbmsgRm9vdGVyLWxpbmstLXByaW1hcnkiIHRpdGxlPSJBYm91dCI+CiAgICAgICAgICBBYm91dAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvZGwvIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgRG93bmxvYWQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9ibG9nLmdvbGFuZy5vcmciIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IiI+CiAgICAgICAgICBCbG9nCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvZGV2ZWwvcmVsZWFzZS5odG1sIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgUmVsZWFzZSBOb3RlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2Jsb2cuZ29sYW5nLm9yZy9nby1icmFuZCIgY2xhc3M9IkZvb3Rlci1saW5rIiB0aXRsZT0iIj4KICAgICAgICAgIEJyYW5kIEd1aWRlbGluZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnL2NvbmR1Y3QiIGNsYXNzPSJGb290ZXItbGluayI+CiAgICAgICAgICBDb2RlIG9mIENvbmR1Y3QKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJGb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iRm9vdGVyLWxpbmsgRm9vdGVyLWxpbmstLXByaW1hcnkiIHRpdGxlPSJDb25uZWN0Ij4KICAgICAgICAgIENvbm5lY3QKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgVHdpdHRlcgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgR2l0SHViCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgU2xhY2sKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IiI+CiAgICAgICAgICBNZWV0dXAKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iRm9vdGVyIj4KICAgIDxkaXYgY2xhc3M9IkNvbnRhaW5lciBDb250YWluZXItLWZ1bGxCbGVlZCI+CiAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1ib3R0b20iPgogICAgICAgIDxpbWcgY2xhc3M9IkZvb3Rlci1nb3BoZXIiIHNyYz0iL3N0YXRpYy9pbWcvcGlsb3QtYnVzdC5zdmciIGFsdD0iR29waGVyIGluIGZsaWdodCBnb2dnbGVzIj4KICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1saXN0Um93Ij4KICAgICAgICAgIDxsaSBjbGFzcz0iRm9vdGVyLWxpc3RJdGVtIj48YSBocmVmPSJodHRwczovL2dvLmRldi9jb3B5cmlnaHQiPkNvcHlyaWdodDwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJGb290ZXItbGlzdEl0ZW0iPjxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3RvcyI+VGVybXMgb2YgU2VydmljZTwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJGb290ZXItbGlzdEl0ZW0iPjxhIGhyZWY9Imh0dHA6Ly93d3cuZ29vZ2xlLmNvbS9pbnRsL2VuL3BvbGljaWVzL3ByaXZhY3kvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+UHJpdmFjeQogICAgICAgICAgICAgIFBvbGljeTwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJGb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvcy9wa2dzaXRlLWZlZWRiYWNrIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+CiAgICAgICAgICAgICAgUmVwb3J0IGFuIElzc3VlCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9IkZvb3Rlci1saXN0SXRlbSI+PGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+Z29sYW5nLm9yZzwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci1nb29nbGVMb2dvIiBocmVmPSJodHRwczovL2dvb2dsZS5jb20iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgIDxpbWcgY2xhc3M9IkZvb3Rlci1nb29nbGVMb2dvSW1nIiBzcmM9Ii9zdGF0aWMvaW1nL2dvb2dsZS13aGl0ZS5zdmciIGFsdD0iR29vZ2xlIGxvZ28iPgogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9mb290ZXI+Cgo8c2NyaXB0PgogIGZ1bmN0aW9uIGxvYWRTY3JpcHQoc3JjLCBwcm9wcyA9IHt9KSB7CiAgICBsZXQgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgcy5zcmMgPSBzcmM7CiAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHsKICAgICAgc1trXSA9IHYKICAgIH0KICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocyk7CiAgfQogIGxvYWRTY3JpcHQoIi9zdGF0aWMvanMvc2l0ZS5qcyIpOwo8L3NjcmlwdD4KCgogIDxkaXYgY2xhc3M9ImpzLWNhbm9uaWNhbFVSTFBhdGgiIGRhdGEtY2Fub25pY2FsLXVybC1wYXRoPSIvZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi92M0B2My4wLjEiIGhpZGRlbiAvPgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCcvc3RhdGljL2pzL2tleWJvYXJkLmpzJywge3R5cGU6ICdtb2R1bGUnLCBhc3luYzogdHJ1ZSwgZGVmZXI6IHRydWV9KQogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9qcy91bml0LmpzJywge3R5cGU6ICdtb2R1bGUnLCBhc3luYzogdHJ1ZSwgZGVmZXI6IHRydWV9KQogIDwvc2NyaXB0PgogIAogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCIvc3RhdGljL2pzL2p1bXAuanMiLCB7dHlwZTogJ21vZHVsZScsIGFzeW5jOiB0cnVlLCBkZWZlcjogdHJ1ZX0pOwogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCIvc3RhdGljL2pzL3BsYXlncm91bmQuanMiLCB7dHlwZTogJ21vZHVsZScsIGFzeW5jOiB0cnVlLCBkZWZlcjogdHJ1ZX0pOwogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCcvc3RhdGljL2pzL3NpZGVuYXYuanMnLCB7dHlwZTogJ21vZHVsZScsIGFzeW5jOiB0cnVlLCBkZWZlcjogdHJ1ZX0pCiAgPC9zY3JpcHQ+CgoKCgo8c2NyaXB0IGFzeW5jPgogIGNvbnN0IGd0bUlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWd0bUlEJykuZGF0YXNldC5ndG1pZDsgLy8gdGhpcyB3aWxsIHRocm93IGlmIHRoZSBxdWVyeVNlbGVjdG9yIGNhbuKAmXQgZmluZCB0aGUgZWxlbWVudAogIGlmICghZ3RtSWQpIHsKICAgIHRocm93IG5ldyBFcnJvcignR29vZ2xlIFRhZyBNYW5hZ2VyIElEIG5vdCBmb3VuZCcpOwogIH0KICBsb2FkU2NyaXB0KGBodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JHtndG1JZH1gKTsKPC9zY3JpcHQ+Cjxub3NjcmlwdD4KICA8aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tVzhNVlFYRyIKICAgICAgICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPgogIDwvaWZyYW1lPgo8L25vc2NyaXB0PgoK
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:06 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.0-rc1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '42'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:34:05 GMT
      Etag:
      - '"f895601ed42554966d2979f56420f655966b079254d92205b53828422298244f"'
      Expires:
      - Tue, 20 Apr 2021 23:34:05 GMT
      Last-Modified:
      - Mon, 17 Jun 2019 12:48:28 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '1202'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: |
        module github.com/robfig/cron/v3

        go 1.12
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:07 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '42'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 19:38:21 GMT
      Etag:
      - '"f895601ed42554966d2979f56420f655966b079254d92205b53828422298244f"'
      Expires:
      - Tue, 20 Apr 2021 22:38:21 GMT
      Last-Modified:
      - Sat, 04 Jan 2020 01:34:27 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Age:
      - '4546'
      Cache-Control:
      - public, max-age=10800
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: |
        module github.com/robfig/cron/v3

        go 1.12
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:07 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '42'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:01:21 GMT
      Etag:
      - '"f895601ed42554966d2979f56420f655966b079254d92205b53828422298244f"'
      Expires:
      - Tue, 20 Apr 2021 23:01:21 GMT
      Last-Modified:
      - Thu, 11 Jul 2019 19:10:18 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Age:
      - '3166'
      Cache-Control:
      - public, max-age=10800
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: |
        module github.com/robfig/cron/v3

        go 1.12
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:07 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - f5ca993ce055585117034fa0d3e99d56
      Date:
      - Tue, 20 Apr 2021 20:54:08 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '71781'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '21'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:54:07 GMT
      Expires:
      - Tue, 20 Apr 2021 20:55:07 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=60
      Age:
      - '1'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: |
        v1.0.0
        v1.2.0
        v1.1.0
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.0.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 20:34:05 GMT
      Expires:
      - Tue, 20 Apr 2021 23:34:05 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '1203'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v1.0.0","Time":"2014-01-19T01:50:47Z"}'
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - 6fd6e83230253ea799bb8ab4bc964cfd;o=1
      Date:
      - Tue, 20 Apr 2021 20:54:08 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '71781'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.2.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 20:45:11 GMT
      Expires:
      - Tue, 20 Apr 2021 23:45:11 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '537'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v1.2.0","Time":"2018-05-05T20:34:41Z"}'
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - 84148a4504bc95a7719625ea858cc650
      Date:
      - Tue, 20 Apr 2021 20:54:08 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '71781'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.1.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 19:20:21 GMT
      Expires:
      - Tue, 20 Apr 2021 22:20:21 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '5627'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v1.1.0","Time":"2018-05-05T20:34:41Z"}'
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - eb945028e673dc787d0bcc1109126980
      Date:
      - Tue, 20 Apr 2021 20:54:08 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '71781'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.0.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '30'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:34:06 GMT
      Etag:
      - '"38c3512f0207856125c29e96d7919ed25e0c2c5aa18f09208e5bc227e580f584"'
      Expires:
      - Tue, 20 Apr 2021 23:34:06 GMT
      Last-Modified:
      - Tue, 04 Jun 2019 11:05:10 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Age:
      - '1202'
      Cache-Control:
      - public, max-age=10800
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: 'module github.com/robfig/cron

        '
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.2.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '30'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:38:55 GMT
      Etag:
      - '"38c3512f0207856125c29e96d7919ed25e0c2c5aa18f09208e5bc227e580f584"'
      Expires:
      - Tue, 20 Apr 2021 23:38:55 GMT
      Last-Modified:
      - Mon, 17 Jun 2019 12:19:42 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Age:
      - '913'
      Cache-Control:
      - public, max-age=10800
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: 'module github.com/robfig/cron

        '
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.1.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '30'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 20 Apr 2021 20:53:08 GMT
      Etag:
      - '"38c3512f0207856125c29e96d7919ed25e0c2c5aa18f09208e5bc227e580f584"'
      Expires:
      - Tue, 20 Apr 2021 23:53:08 GMT
      Last-Modified:
      - Sun, 05 May 2019 12:19:27 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Age:
      - '60'
      Cache-Control:
      - public, max-age=10800
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: 'module github.com/robfig/cron

        '
    http_version:
  recorded_at: Tue, 20 Apr 2021 20:54:08 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:35 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '81'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:35 GMT
      Expires:
      - Fri, 08 Jul 2022 13:26:35 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        v0.3.9
        v0.3.11
        v0.3.8
        v0.3.6
        v0.3.4
        v0.3.7
        v0.3.5
        v0.3.13
        v0.3.12
        v0.3.3
        v0.3.10
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.9.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 12:46:02 GMT
      Expires:
      - Fri, 08 Jul 2022 15:46:02 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '2373'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.9","Time":"2020-03-24T21:25:48Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:35 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.11.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '51'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 12:22:17 GMT
      Expires:
      - Fri, 08 Jul 2022 15:22:17 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '3798'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.11","Time":"2020-08-11T19:49:30Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:35 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.8.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:36 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.8","Time":"2019-10-03T07:39:17Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:35 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.6.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 11:45:43 GMT
      Expires:
      - Fri, 08 Jul 2022 14:45:43 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '5993'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.6","Time":"2018-07-30T21:26:40Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.4.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:36 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.4","Time":"2018-04-04T21:29:33Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.7.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:36 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.7","Time":"2019-01-23T23:28:27Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.5.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:01:26 GMT
      Expires:
      - Fri, 08 Jul 2022 16:01:26 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '1450'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.5","Time":"2018-06-08T14:01:56Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.13.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '51'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 12:39:45 GMT
      Expires:
      - Fri, 08 Jul 2022 15:39:45 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '2751'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.13","Time":"2022-05-25T20:08:08Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.12.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '51'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 10:45:15 GMT
      Expires:
      - Fri, 08 Jul 2022 13:45:15 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '9621'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.12","Time":"2021-03-03T22:10:52Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.3.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:36 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:36 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.3","Time":"2018-04-02T13:55:43Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:36 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:37 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:37 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.10.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '51'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 12:47:09 GMT
      Expires:
      - Fri, 08 Jul 2022 15:47:09 GMT
      Cache-Control:
      - public, max-age=10800
      Content-Type:
      - application/json
      Age:
      - '2308'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.10","Time":"2020-07-18T11:18:36Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:37 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/imdario/mergo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:37 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:37 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.9.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '32'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 11:11:25 GMT
      Expires:
      - Fri, 08 Jul 2022 14:11:25 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '8052'
      Last-Modified:
      - Tue, 24 Mar 2020 21:33:08 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:37 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.11.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '74'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 11:13:08 GMT
      Expires:
      - Fri, 08 Jul 2022 14:13:08 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '7949'
      Last-Modified:
      - Tue, 11 Aug 2020 19:51:41 GMT
      Etag:
      - '"31bbd3c9d8b390093bf1f10994207cbf5c158797283911af5dad728a344e3af9"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        module github.com/imdario/mergo

        go 1.13

        require gopkg.in/yaml.v2 v2.3.0
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:37 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v2?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:38 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v2 git https://gopkg.in/yaml.v2">
        <meta name="go-source" content="gopkg.in/yaml.v2 _ https://github.com/go-yaml/yaml/tree/v2.4.0{/dir} https://github.com/go-yaml/yaml/blob/v2.4.0{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v2
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v2?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:38 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v2 git https://gopkg.in/yaml.v2">
        <meta name="go-source" content="gopkg.in/yaml.v2 _ https://github.com/go-yaml/yaml/tree/v2.4.0{/dir} https://github.com/go-yaml/yaml/blob/v2.4.0{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v2
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.8.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '32'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:25:38 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:38 GMT
      Cache-Control:
      - public, max-age=10800
      Last-Modified:
      - Thu, 03 Oct 2019 11:24:54 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Content-Type:
      - text/plain; charset=UTF-8
      Age:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.6.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '32'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 11:25:38 GMT
      Expires:
      - Fri, 08 Jul 2022 14:25:38 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '7200'
      Last-Modified:
      - Thu, 11 Apr 2019 14:57:29 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.4.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '32'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:14:21 GMT
      Expires:
      - Fri, 08 Jul 2022 16:14:21 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '677'
      Last-Modified:
      - Thu, 11 Apr 2019 15:08:21 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.7.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '32'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:14:18 GMT
      Expires:
      - Fri, 08 Jul 2022 16:14:18 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '680'
      Last-Modified:
      - Thu, 11 Apr 2019 18:51:53 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.5.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '32'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:19:19 GMT
      Expires:
      - Fri, 08 Jul 2022 16:19:19 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '379'
      Last-Modified:
      - Tue, 23 Apr 2019 21:16:57 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.13.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '74'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 12:39:45 GMT
      Expires:
      - Fri, 08 Jul 2022 15:39:45 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '2753'
      Last-Modified:
      - Wed, 25 May 2022 20:16:41 GMT
      Etag:
      - '"ca5731139deb241ecd04a991864e74e16cc922493ee217b59ae6c5ae309a07ac"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        module github.com/imdario/mergo

        go 1.13

        require gopkg.in/yaml.v3 v3.0.0
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:38 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v3?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:39 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v3 git https://gopkg.in/yaml.v3">
        <meta name="go-source" content="gopkg.in/yaml.v3 _ https://github.com/go-yaml/yaml/tree/v3.0.1{/dir} https://github.com/go-yaml/yaml/blob/v3.0.1{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v3
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:39 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v3?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:40 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v3 git https://gopkg.in/yaml.v3">
        <meta name="go-source" content="gopkg.in/yaml.v3 _ https://github.com/go-yaml/yaml/tree/v3.0.1{/dir} https://github.com/go-yaml/yaml/blob/v3.0.1{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v3
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.12.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '74'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 12:51:02 GMT
      Expires:
      - Fri, 08 Jul 2022 15:51:02 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '2078'
      Last-Modified:
      - Tue, 09 Mar 2021 21:44:30 GMT
      Etag:
      - '"31bbd3c9d8b390093bf1f10994207cbf5c158797283911af5dad728a344e3af9"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        module github.com/imdario/mergo

        go 1.13

        require gopkg.in/yaml.v2 v2.3.0
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:40 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v2?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:40 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v2 git https://gopkg.in/yaml.v2">
        <meta name="go-source" content="gopkg.in/yaml.v2 _ https://github.com/go-yaml/yaml/tree/v2.4.0{/dir} https://github.com/go-yaml/yaml/blob/v2.4.0{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v2
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:40 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v2?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:40 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v2 git https://gopkg.in/yaml.v2">
        <meta name="go-source" content="gopkg.in/yaml.v2 _ https://github.com/go-yaml/yaml/tree/v2.4.0{/dir} https://github.com/go-yaml/yaml/blob/v2.4.0{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v2
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.3.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '32'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:40 GMT
      Etag:
      - '"b5bce6ab66c097f3454be93c3d25b7daddf49183f5d5bac776c81c456bbdcb00"'
      Expires:
      - Fri, 08 Jul 2022 16:25:40 GMT
      Last-Modified:
      - Fri, 10 May 2019 10:34:51 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/imdario/mergo

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v0.3.10.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '74'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:25:40 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:40 GMT
      Cache-Control:
      - public, max-age=10800
      Last-Modified:
      - Sat, 18 Jul 2020 14:59:43 GMT
      Etag:
      - '"31bbd3c9d8b390093bf1f10994207cbf5c158797283911af5dad728a344e3af9"'
      Content-Type:
      - text/plain; charset=UTF-8
      Age:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        module github.com/imdario/mergo

        go 1.13

        require gopkg.in/yaml.v2 v2.3.0
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:40 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v2?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v2 git https://gopkg.in/yaml.v2">
        <meta name="go-source" content="gopkg.in/yaml.v2 _ https://github.com/go-yaml/yaml/tree/v2.4.0{/dir} https://github.com/go-yaml/yaml/blob/v2.4.0{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v2
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://gopkg.in/yaml.v2?go-get=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Content-Type:
      - text/html
      Vary:
      - Accept-Encoding
      Content-Length:
      - '318'
    body:
      encoding: ASCII-8BIT
      string: |2

        <html>
        <head>
        <meta name="go-import" content="gopkg.in/yaml.v2 git https://gopkg.in/yaml.v2">
        <meta name="go-source" content="gopkg.in/yaml.v2 _ https://github.com/go-yaml/yaml/tree/v2.4.0{/dir} https://github.com/go-yaml/yaml/blob/v2.4.0{/dir}/{file}#L{line}">
        </head>
        <body>
        go get gopkg.in/yaml.v2
        </body>
        </html>
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iIGRhdGEtbGF5b3V0PSJyZXNwb25zaXZlIj4KICA8aGVhZD4KICAgIAogICAgPHNjcmlwdD4KICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgd2luZG93Ll9fZXJyPWZ1bmN0aW9uIGYoZSl7Zi5wPWYucHx8W107Zi5wLnB1c2goZSl9KTsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgKGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnN0IHRoZW1lID0gZG9jdW1lbnQuY29va2llLm1hdGNoKC9wcmVmZXJzLWNvbG9yLXNjaGVtZT0obGlnaHR8ZGFya3xhdXRvKS8pPy5bMV0KICAgICAgICBpZiAodGhlbWUpIHsKICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2h0bWwnKS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCB0aGVtZSk7CiAgICAgICAgfQogICAgICB9KCkpCiAgICA8L3NjcmlwdD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8bWV0YSBuYW1lPSJEZXNjcmlwdGlvbiIgY29udGVudD0iUGFja2FnZSBtZXJnbyBtZXJnZXMgc2FtZS10eXBlIHN0cnVjdHMgYW5kIG1hcHMgYnkgc2V0dGluZyBkZWZhdWx0IHZhbHVlcyBpbiB6ZXJvLXZhbHVlIGZpZWxkcy4iPgogICAgCiAgICA8bWV0YSBjbGFzcz0ianMtZ3RtSUQiIGRhdGEtZ3RtaWQ9IkdUTS1XOE1WUVhHIj4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iL3N0YXRpYy9zaGFyZWQvaWNvbi9mYXZpY29uLmljbyI+CiAgICAKICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2L2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAiPgoKICAgIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvZnJvbnRlbmQubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNDItbWFiIiByZWw9InN0eWxlc2hlZXQiPgogICAgCiAgPHRpdGxlPm1lcmdvIHBhY2thZ2UgLSBnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIC0gR28gUGFja2FnZXM8L3RpdGxlPgoKICAgIAogIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvdW5pdC91bml0Lm1pbi5jc3M/dmVyc2lvbj1wcm9kLWZyb250ZW5kLTAwMDQyLW1hYiIgcmVsPSJzdHlsZXNoZWV0Ij4KICAKICA8bGluayBocmVmPSIvc3RhdGljL2Zyb250ZW5kL3VuaXQvbWFpbi9tYWluLm1pbi5jc3M/dmVyc2lvbj1wcm9kLWZyb250ZW5kLTAwMDQyLW1hYiIgcmVsPSJzdHlsZXNoZWV0Ij4KCgogIDwvaGVhZD4KICA8Ym9keT4KICAgIAogICAgPHNjcmlwdD4KICAgICAgZnVuY3Rpb24gbG9hZFNjcmlwdChzcmMsIG1vZCA9IHRydWUpIHsKICAgICAgICBsZXQgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICAgIHMuc3JjID0gc3JjOwogICAgICAgIGlmIChtb2QpIHsKICAgICAgICAgIHMudHlwZSA9ICdtb2R1bGUnOwogICAgICAgICAgcy5hc3luYyA9IHRydWU7CiAgICAgICAgICBzLmRlZmVyID0gdHJ1ZQogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHMpOwogICAgICB9CiAgICAgIGxvYWRTY3JpcHQoIi90aGlyZF9wYXJ0eS9kaWFsb2ctcG9seWZpbGwvZGlhbG9nLXBvbHlmaWxsLmpzIiwgZmFsc2UpCiAgICAgIGxvYWRTY3JpcHQoIi9zdGF0aWMvZnJvbnRlbmQvZnJvbnRlbmQuanMiKTsKICAgIDwvc2NyaXB0PgogICAgCiAgPGhlYWRlciBjbGFzcz0iZ28tSGVhZGVyIGdvLUhlYWRlci0tZnVsbCBqcy1zaXRlSGVhZGVyIj4KICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1pbm5lciBnby1IZWFkZXItaW5uZXItLWRhcmsiPgogICAgICA8bmF2IGNsYXNzPSJnby1IZWFkZXItbmF2Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi8iIGNsYXNzPSJqcy1oZWFkZXJMb2dvIiBkYXRhLWd0bWM9Im5hdiBsaW5rIgogICAgICAgICAgICBkYXRhLXRlc3QtaWQ9ImdvLWhlYWRlci1sb2dvLWxpbmsiPgogICAgICAgICAgPGltZyBjbGFzcz0iZ28tSGVhZGVyLWxvZ28iIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby13aGl0ZS5zdmciIGFsdD0iR28iPgogICAgICAgIDwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJnby1IZWFkZXItcmlnaHRDb250ZW50Ij4KICAgICAgICAgIAo8ZGl2IGNsYXNzPSJnby1TZWFyY2hGb3JtIGpzLXNlYXJjaEZvcm0iPgogIDxmb3JtCiAgICBjbGFzcz0iZ28tSW5wdXRHcm91cCBnby1TaG9ydGN1dEtleSBnby1TZWFyY2hGb3JtLWZvcm0iCiAgICBhY3Rpb249Ii9zZWFyY2giCiAgICBkYXRhLXNob3J0Y3V0PSIvIgogICAgZGF0YS1zaG9ydGN1dC1hbHQ9InNlYXJjaCIKICAgIGRhdGEtZ3RtYz0ic2VhcmNoIGZvcm0iCiAgICBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIKICAgIHJvbGU9InNlYXJjaCIKICA+CiAgICA8aW5wdXQgbmFtZT0icSIgY2xhc3M9ImdvLUlucHV0IGpzLXNlYXJjaEZvY3VzIiBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIgdHlwZT0ic2VhcmNoIgogICAgICAgIGF1dG9jYXBpdGFsaXplPSJvZmYiIGF1dG9jb21wbGV0ZT0ib2ZmIiBhdXRvY29ycmVjdD0ib2ZmIiBzcGVsbGNoZWNrPSJmYWxzZSIKICAgICAgICBwbGFjZWhvbGRlcj0iU2VhcmNoIHBhY2thZ2VzIG9yIHN5bWJvbHMiCiAgICAgICAgdmFsdWU9IiIgLz4KICAgIDxpbnB1dCBuYW1lPSJtIiB2YWx1ZT0iIiBoaWRkZW4+CiAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS1pbnZlcnRlZCIgYXJpYS1sYWJlbD0iU3VibWl0IHNlYXJjaCI+CiAgICAgIDxpbWcKICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgIHdpZHRoPSIyNCIKICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vc2VhcmNoX2dtX2dyZXlfMjRkcC5zdmciCiAgICAgICAgYWx0PSIiCiAgICAgIC8+CiAgICA8L2J1dHRvbj4KICA8L2Zvcm0+CiAgPGJ1dHRvbiBjbGFzcz0iZ28tU2VhcmNoRm9ybS1leHBhbmRTZWFyY2gganMtZXhwYW5kU2VhcmNoIiBkYXRhLWd0bWM9Im5hdiBidXR0b24iCiAgICAgIGFyaWEtbGFiZWw9Ik9wZW4gc2VhcmNoIiBkYXRhLXRlc3QtaWQ9ImV4cGFuZC1zZWFyY2giPgogICAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IgogICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9zZWFyY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogIDwvYnV0dG9uPgo8L2Rpdj4KCiAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1tZW51Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucy8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPldoeSBHbzwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2xlYXJuLyIgZGF0YS1ndG1jPSJuYXYgbGluayI+R2V0IFN0YXJ0ZWQ8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLW1lbnVJdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvZG9jLyIgZGF0YS1ndG1jPSJuYXYgbGluayI+RG9jczwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0gZ28tSGVhZGVyLW1lbnVJdGVtLS1hY3RpdmUiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPlBhY2thZ2VzPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5LmdvbGFuZy5vcmcvIiBkYXRhLWd0bWM9Im5hdiBsaW5rIj5QbGF5PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYmxvZy8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPkJsb2c8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tSGVhZGVyLW5hdk9wZW4ganMtaGVhZGVyTWVudUJ1dHRvbiBnby1IZWFkZXItbmF2T3Blbi0td2hpdGUiIGRhdGEtZ3RtYz0ibmF2IGJ1dHRvbiIgYXJpYS1sYWJlbD0iT3BlbiBuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICA8L25hdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgogIDxhc2lkZSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlciBqcy1oZWFkZXIiPgogICAgPG5hdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1oZWFkZXIiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgdGFiaW5kZXg9Ii0xIj4KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbG9nbyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLWJsdWUuc3ZnIiBhbHQ9IkdvLiI+CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPHVsIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3QiPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zLyIgdGFiaW5kZXg9Ii0xIj5XaHkgR288L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIiB0YWJpbmRleD0iLTEiPkdldCBTdGFydGVkPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvIiB0YWJpbmRleD0iLTEiPkRvY3M8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIGdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0tLWFjdGl2ZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iIHRhYmluZGV4PSItMSI+UGFja2FnZXM8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5LmdvbGFuZy5vcmcvIiB0YWJpbmRleD0iLTEiPlBsYXk8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYmxvZyIgdGFiaW5kZXg9Ii0xIj5CbG9nPC9hPgogICAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgIDwvbmF2PgogIDwvYXNpZGU+CiAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1zY3JpbSBqcy1zY3JpbSIgcm9sZT0icHJlc2VudGF0aW9uIj48L2Rpdj4KCiAgICAKICA8bWFpbiBjbGFzcz0iZ28tTWFpbiI+CiAgICA8ZGl2IGNsYXNzPSJnby1NYWluLWJhbm5lciIgcm9sZT0iYWxlcnQiPjwvZGl2PgogICAgPGhlYWRlciBjbGFzcz0iZ28tTWFpbi1oZWFkZXIganMtbWFpbkhlYWRlciI+CiAgCiAgCiAgPG5hdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJCcmVhZGNydW1iIGdvLUJyZWFkY3J1bWIiIGFyaWEtbGFiZWw9IkJyZWFkY3J1bWIiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iIj4KICAgIDxvbD4KICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGkgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyIgZGF0YS1ndG1jPSJicmVhZGNydW1iIGxpbmsiPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MEB2MC4zLjkiIGRhdGEtZ3RtYz0iYnJlYWRjcnVtYiBsaW5rIiBhcmlhLWN1cnJlbnQ9ImxvY2F0aW9uIgogICAgICAgICAgICAgIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iQ3VycmVudCI+CiAgICAgICAgICAgIGdvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAKICAgICAgICAgIDwvYT4KICAgICAgICAgIAogICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSBnby1DbGlwYm9hcmQganMtY2xpcGJvYXJkIgogICAgICAgICAgICAgIHRpdGxlPSJDb3B5IHBhdGggdG8gY2xpcGJvYXJkLiYjMTA7JiMxMDtnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIgogICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICAgICAgZGF0YS10by1jb3B5PSJnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIgogICAgICAgICAgICAgIGRhdGEtZ3RtYz0iYnJlYWRjcnVtYnMgYnV0dG9uIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0tYWNjZW50ZWQiCiAgICAgICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2NvbnRlbnRfY29weV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIAogICAgICAgIAogICAgICA8L2xpPgogICAgPC9vbD4KICA8L25hdj4KCiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJDb250ZW50Ij4KICAgIAogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyVGl0bGUganMtc3RpY2t5SGVhZGVyIj4KICAgIDxhIGNsYXNzPSJnby1NYWluLWhlYWRlckxvZ28iIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgZGF0YS1ndG1jPSJoZWFkZXIgbGluayIgYXJpYS1sYWJlbD0iTGluayB0byBHbyBIb21lcGFnZSI+CiAgICAgIDxpbWcgaGVpZ2h0PSI3OCIgd2lkdGg9IjIwNyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLWJsdWUuc3ZnIiBhbHQ9IkdvIj4KICAgIDwvYT4KICAgIDxoMSBjbGFzcz0iVW5pdEhlYWRlci10aXRsZUhlYWRpbmciIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci10aXRsZSI+bWVyZ288L2gxPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5wYWNrYWdlPC9zcGFuPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5tb2R1bGU8L3NwYW4+CiAgICAKICAgIAogICAgICAKICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICB0aXRsZT0iQ29weSBwYXRoIHRvIGNsaXBib2FyZC4mIzEwOyYjMTA7Z29wa2cuaW4vaW1kYXJpby9tZXJnby52MCIKICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICBkYXRhLXRvLWNvcHk9ImdvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAiCiAgICAgICAgICBkYXRhLWd0bWM9InRpdGxlIGJ1dHRvbiIKICAgICAgICAgIHRhYmluZGV4PSItMSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb250ZW50X2NvcHlfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICAKICAgIAogIDwvZGl2PgoKICAgIAogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlscyI+CiAgICAKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLXZlcnNpb24iPgogICAgPGEgaHJlZj0iP3RhYj12ZXJzaW9ucyIgYXJpYS1sYWJlbD0iR28gdG8gVmVyc2lvbnMiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPjxzcGFuIGNsYXNzPSJnby10ZXh0U3VidGxlIj5WZXJzaW9uOiA8L3NwYW4+djAuMy45PC9hPgogICAgCiAgICA8c3BhbiBjbGFzcz0iRGV0YWlsc0hlYWRlci1iYWRnZS0tbGF0ZXN0IiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbWlub3JWZXJzaW9uQmFubmVyIj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLUNoaXAgRGV0YWlsc0hlYWRlci1zcGFuLS1sYXRlc3QiPkxhdGVzdDwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLUNoaXAgRGV0YWlsc0hlYWRlci1zcGFuLS1ub3RBdExhdGVzdCI+CiAgICAgICAgTGF0ZXN0CiAgICAgICAgCiAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgIDxzdW1tYXJ5PgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9hbGVydF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9Ildhcm5pbmciPgogICAgPC9zdW1tYXJ5PgogICAgPHA+VGhpcyBwYWNrYWdlIGlzIG5vdCBpbiB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgaXRzIG1vZHVsZS48L3A+CiAgPC9kZXRhaWxzPgoKICAgICAgPC9zcGFuPgogICAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MCIgYXJpYS1sYWJlbD0iR28gdG8gTGF0ZXN0IFZlcnNpb24iIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWFsZXJ0IERldGFpbHNIZWFkZXItc3Bhbi0tZ29Ub0xhdGVzdCI+R28gdG8gbGF0ZXN0PC9zcGFuPgogICAgICA8L2E+CiAgICA8L3NwYW4+CiAgPC9zcGFuPgoKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWNvbW1pdFRpbWUiPgogICAgUHVibGlzaGVkOiBNYXIgMjQsIDIwMjAKICA8L3NwYW4+CgogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZXMiPgogICAgTGljZW5zZTogPGEgaHJlZj0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWxpY2Vuc2VzIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZSIKICAgICAgICAgICAgYXJpYS1sYWJlbD0iR28gdG8gTGljZW5zZXMiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPkJTRC0zLUNsYXVzZTwvYT4KICAgICAgCiAgICAKICA8L3NwYW4+CgogICAgICAKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0cyI+CiAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MD90YWI9aW1wb3J0cyIgYXJpYS1sYWJlbD0iR28gdG8gSW1wb3J0cyIKICAgICAgICBkYXRhLWd0bWM9ImhlYWRlciBsaW5rIj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPkltcG9ydHM6IDwvc3Bhbj42CiAgICA8L2E+CiAgPC9zcGFuPgoKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0ZWRieSI+CiAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MD90YWI9aW1wb3J0ZWRieSIgYXJpYS1sYWJlbD0iR28gdG8gSW1wb3J0ZWQgQnkiCiAgICAgICAgZGF0YS1ndG1jPSJoZWFkZXIgbGluayI+CiAgICAgICA8c3BhbiBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+SW1wb3J0ZWQgYnk6IDwvc3Bhbj4xNQogICAgPC9hPgogIDwvc3Bhbj4KCiAgICAgIAogICAgCiAgPC9kaXY+CiAgCiAgPGRpdiBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd0NvbnRhaW5lciI+CiAgICA8c3ZnIGNsYXNzPSJVbml0SGVhZGVyLW92ZXJmbG93SW1hZ2UiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPgogICAgICA8cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBmaWxsPSJub25lIi8+CiAgICAgIDxwYXRoIGQ9Ik0xMiA4YzEuMSAwIDItLjkgMi0ycy0uOS0yLTItMi0yIC45LTIgMiAuOSAyIDIgMnptMCAyYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptMCA2Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnoiLz4KICAgIDwvc3ZnPgogICAgPHNlbGVjdCBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd1NlbGVjdCBqcy1zZWxlY3ROYXYiIHRhYmluZGV4PSItMSI+CiAgICAgIDxvcHRpb24gdmFsdWU9Ii8iPk1haW48L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPXZlcnNpb25zIj4KICAgICAgICBWZXJzaW9ucwogICAgICA8L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWxpY2Vuc2VzIj4KICAgICAgICBMaWNlbnNlcwogICAgICA8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWltcG9ydHMiPgogICAgICAgICAgSW1wb3J0cwogICAgICAgIDwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Ii9nb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwP3RhYj1pbXBvcnRlZGJ5Ij4KICAgICAgICAgIEltcG9ydGVkIEJ5CiAgICAgICAgPC9vcHRpb24+CiAgICAgIAogICAgPC9zZWxlY3Q+CiAgPC9kaXY+CgoKICA8L2Rpdj4KCjwvaGVhZGVyPgogICAgPGFzaWRlIGNsYXNzPSJnby1NYWluLWFzaWRlICBqcy1tYWluQXNpZGUiPgogIAogIDxkaXYgY2xhc3M9IlVuaXRNZXRhIj4KICAgIDxoMiBjbGFzcz0iZ28tdGV4dExhYmVsIj5EZXRhaWxzPC9oMj4KICAgIAogIDx1bCBjbGFzcz0iVW5pdE1ldGEtZGV0YWlscyI+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2FuY2VsX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0idW5jaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVmFsaWQgZ28ubW9kIGZpbGUKICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD4KICAgICAgICAgIFRoZSBHbyBtb2R1bGUgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkIGluIEdvIDEuMTEgYW5kIGlzIHRoZSBvZmZpY2lhbCBkZXBlbmRlbmN5IG1hbmFnZW1lbnQKICAgICAgICAgIHNvbHV0aW9uIGZvciBHby4KICAgICAgICA8L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1hY2NlbnRlZCJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2hlY2tfY2lyY2xlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vaGVscF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgICAgICA8L3N1bW1hcnk+CiAgICAgICAgPHA+CiAgICAgICAgICBSZWRpc3RyaWJ1dGFibGUgbGljZW5zZXMgcGxhY2UgbWluaW1hbCByZXN0cmljdGlvbnMgb24gaG93IHNvZnR3YXJlIGNhbiBiZSB1c2VkLAogICAgICAgICAgbW9kaWZpZWQsIGFuZCByZWRpc3RyaWJ1dGVkLgogICAgICAgIDwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5Nb2R1bGVzIHdpdGggdGFnZ2VkIHZlcnNpb25zIGdpdmUgaW1wb3J0ZXJzIG1vcmUgcHJlZGljdGFibGUgYnVpbGRzLjwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jYW5jZWxfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJ1bmNoZWNrZWQiaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KCiAgICAgICAgICBTdGFibGUgdmVyc2lvbgogICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2hlbHBfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICAgICAgPC9zdW1tYXJ5PgogICAgICAgIDxwPldoZW4gYSBwcm9qZWN0IHJlYWNoZXMgbWFqb3IgdmVyc2lvbiB2MSBpdCBpcyBjb25zaWRlcmVkIHN0YWJsZS48L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IlVuaXRNZXRhLWRldGFpbHNMZWFybiI+CiAgICAgIDxhIGhyZWY9Ii9hYm91dCNiZXN0LXByYWN0aWNlcy1oMiIgZGF0YS1ndG1jPSJtZXRhIGxpbmsiPkxlYXJuIG1vcmU8L2E+CiAgICA8L2xpPgogIDwvdWw+CgogICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPlJlcG9zaXRvcnk8L2gyPgogICAgPGRpdiBjbGFzcz0iVW5pdE1ldGEtcmVwbyI+CiAgICAgIAogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgIGdpdGh1Yi5jb20vaW1kYXJpby9tZXJnbwogICAgICAgIDwvYT4KICAgICAgCiAgICA8L2Rpdj4KICAgIAogICAgICA8aDIgY2xhc3M9ImdvLXRleHRMYWJlbCI+TGlua3M8L2gyPgogICAgICA8dWwgY2xhc3M9IlVuaXRNZXRhLWxpbmtzIj4KICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kZXBzLmRldi9nby9nb3BrZy5pbiUyRmltZGFyaW8lMkZtZXJnby52MC92MC4zLjkiIHRpdGxlPSJWaWV3IHRoaXMgbW9kdWxlIG9uIE9wZW4gU291cmNlIEluc2lnaHRzIgogICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiBkYXRhLXRlc3QtaWQ9Im1ldGEtbGluay1kZXBzZGV2Ij4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJkZXBzZGV2LUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9kZXBzZGV2LWxvZ28uc3ZnIiAKICAgICAgICAgICAgICAgIGFsdD0iT3BlbiBTb3VyY2UgSW5zaWdodHMgTG9nbyIgLz4KICAgICAgICAgICAgICBPcGVuIFNvdXJjZSBJbnNpZ2h0cwogICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgIAogIAoKICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICA8L3VsPgogICAgCiAgPC9kaXY+Cgo8L2FzaWRlPgogICAgPG5hdiBjbGFzcz0iZ28tTWFpbi1uYXYgZ28tTWFpbi1uYXYtLXN0aWNreSBqcy1tYWluTmF2IiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdkRlc2t0b3AiPgogICAgCiAgPGRpdiBjbGFzcz0iVW5pdE91dGxpbmUtanVtcFRvIj4KICAgIDxidXR0b24gY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUb0lucHV0IGdvLVNob3J0Y3V0S2V5IGpzLWp1bXBUb0lucHV0IgogICAgICAgIGFyaWEtY29udHJvbHM9Imp1bXAtdG8tbW9kYWwiCiAgICAgICAgYXJpYS1sYWJlbD0iT3BlbiBKdW1wIHRvIElkZW50aWZpZXIiCiAgICAgICAgZGF0YS1zaG9ydGN1dD0iZiIKICAgICAgICBkYXRhLXNob3J0Y3V0LWFsdD0iZmluZCIKICAgICAgICBkYXRhLXRlc3QtaWQ9Imp1bXAtdG8tYnV0dG9uIiBkYXRhLWd0bWM9Im91dGxpbmUgYnV0dG9uIj4KICAgICAgSnVtcCB0byAuLi4KICAgIDwvYnV0dG9uPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iZ28tVHJlZSBqcy10cmVlIiByb2xlPSJ0cmVlIiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICAgIAogICAgICA8bGkgY2xhc3M9ImpzLXJlYWRtZU91dGxpbmUiPgogICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgUkVBRE1FCiAgICAgICAgPC9hPgogICAgICAgIAogIDx1bCBpZD0icmVhZG1lLW91dGxpbmUiPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXN0YXR1cyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFN0YXR1cwogICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICAgIDx1bD4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1sYXRlc3QtcmVsZWFzZSIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgTGF0ZXN0IHJlbGVhc2UKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWltcG9ydGFudC1ub3RlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBJbXBvcnRhbnQgbm90ZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtZG9uYXRpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBEb25hdGlvbnMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW1lcmdvLWluLXRoZS13aWxkIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBNZXJnbyBpbiB0aGUgd2lsZAogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvdWw+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWluc3RhbGxhdGlvbiIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEluc3RhbGxhdGlvbgogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdXNhZ2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBVc2FnZQogICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICAgIDx1bD4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1uaWNlLWV4YW1wbGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIE5pY2UgZXhhbXBsZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdHJhbnNmb3JtZXJzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBUcmFuc2Zvcm1lcnMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1jb250YWN0LW1lIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgQ29udGFjdCBtZQogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtYWJvdXQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBBYm91dAogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdG9wLWNvbnRyaWJ1dG9ycyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFRvcCBDb250cmlidXRvcnMKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWxpY2Vuc2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBMaWNlbnNlCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgICAKICA8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIiBkYXRhLWd0bWM9Im91dGxpbmUgbGluayI+CiAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgIAo8dWw+CiAgCiAgICA8bGk+CiAgICAgIDxhIGhyZWY9IiNwa2ctb3ZlcnZpZXciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+T3ZlcnZpZXc8L2E+CiAgICA8L2xpPgogIDxsaSBjbGFzcz0iRG9jTmF2LW92ZXJ2aWV3Ij4KICAgICAgPGEgaHJlZj0iI3BrZy1pbmRleCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIENvbnN0YW50cwogICAgICA8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgVmFyaWFibGVzCiAgICAgIDwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICAKICAgICAgICA8dWw+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNNYXAiIHRpdGxlPSJNYXAoZHN0LCBzcmMsIG9wdHMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTWFwKGRzdCwgc3JjLCBvcHRzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI01hcFdpdGhPdmVyd3JpdGUiIHRpdGxlPSJNYXBXaXRoT3ZlcndyaXRlKGRzdCwgc3JjLCBvcHRzKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIE1hcFdpdGhPdmVyd3JpdGUoZHN0LCBzcmMsIG9wdHMpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjTWVyZ2UiIHRpdGxlPSJNZXJnZShkc3QsIHNyYywgb3B0cykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBNZXJnZShkc3QsIHNyYywgb3B0cykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiIHRpdGxlPSJNZXJnZVdpdGhPdmVyd3JpdGUoZHN0LCBzcmMsIG9wdHMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTWVyZ2VXaXRoT3ZlcndyaXRlKGRzdCwgc3JjLCBvcHRzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhBcHBlbmRTbGljZSIgdGl0bGU9IldpdGhBcHBlbmRTbGljZShjb25maWcpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aEFwcGVuZFNsaWNlKGNvbmZpZykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcnJpZGUiIHRpdGxlPSJXaXRoT3ZlcnJpZGUoY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhPdmVycmlkZShjb25maWcpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aE92ZXJyaWRlRW1wdHlTbGljZSIgdGl0bGU9IldpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZSIgdGl0bGU9IldpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZShjb25maWcpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlKGNvbmZpZykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoVHJhbnNmb3JtZXJzIiB0aXRsZT0iV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aFR5cGVDaGVjayIgdGl0bGU9IldpdGhUeXBlQ2hlY2soY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhUeXBlQ2hlY2soY29uZmlnKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgIDwvdWw+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LXR5cGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy10eXBlcyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBUeXBlcwogICAgICA8L2E+CiAgICAgIDx1bD4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ29uZmlnIiB0aXRsZT0idHlwZSBDb25maWciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBDb25maWcKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2Zvcm1lcnMiIHRpdGxlPSJ0eXBlIFRyYW5zZm9ybWVycyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIFRyYW5zZm9ybWVycwogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgIAogICAgICA8L3VsPgogICAgPC9saT4KICAKICAKPC91bD4KCiAgICAgIDwvbGk+CiAgICAKICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiIGRhdGEtZ3RtYz0ib3V0bGluZSBsaW5rIj4KICAgICAgICAgIFNvdXJjZSBGaWxlcwogICAgICAgIDwvYT4KICAgICAgPC9saT4KICAgIAogICAgCiAgPC91bD4KCiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1uYXZNb2JpbGUganMtbWFpbk5hdk1vYmlsZSI+CiAgICA8bGFiZWwgY2xhc3M9ImdvLUxhYmVsIj4KICAgICAgPHNlbGVjdCBjbGFzcz0iZ28tU2VsZWN0Ij4KICAgICAgICAKICAgICAgICAgIDxvcHRpb24gc2VsZWN0ZWQgZGlzYWJsZWQ+UkVBRE1FPC9vcHRpb24+CiAgICAgICAgCiAgICAgIDwvc2VsZWN0PgogICAgPC9sYWJlbD4KICA8L2Rpdj4KPC9uYXY+CiAgICA8YXJ0aWNsZSBjbGFzcz0iZ28tTWFpbi1hcnRpY2xlIGpzLW1haW5Db250ZW50Ij4KICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscyIgZGF0YS10ZXN0LWlkPSJVbml0RGV0YWlscyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyI+CiAgICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscy1jb250ZW50IGpzLXVuaXREZXRhaWxzQ29udGVudCIgZGF0YS10ZXN0LWlkPSJVbml0RGV0YWlscy1jb250ZW50Ij4KICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdFJlYWRtZSBVbml0UmVhZG1lLS1leHBhbmRlZCBqcy1yZWFkbWUiPgogICAgPGgyIGNsYXNzPSJVbml0UmVhZG1lLXRpdGxlIiBpZD0ic2VjdGlvbi1yZWFkbWUiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaHJvbWVfcmVhZGVyX21vZGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICBSRUFETUUKICAgICAgPGEgY2xhc3M9IlVuaXRSZWFkbWUtaWRMaW5rIiBocmVmPSIjc2VjdGlvbi1yZWFkbWUiPsK2PC9hPgogICAgPC9oMj4KICAgIAogICAgICA8ZGl2IGNsYXNzPSJVbml0UmVhZG1lLWNvbnRlbnQiIGRhdGEtdGVzdC1pZD0iVW5pdC1yZWFkbWVDb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJPdmVydmlldy1yZWFkbWVDb250ZW50IGpzLXJlYWRtZUNvbnRlbnQiPjxoMyBjbGFzcz0iaDEiIGlkPSJyZWFkbWUtbWVyZ28iPk1lcmdvPC9oMz4KPHA+QSBoZWxwZXIgdG8gbWVyZ2Ugc3RydWN0cyBhbmQgbWFwcyBpbiBHb2xhbmcuIFVzZWZ1bCBmb3IgY29uZmlndXJhdGlvbiBkZWZhdWx0IHZhbHVlcywgYXZvaWRpbmcgbWVzc3kgaWYtc3RhdGVtZW50cy48L3A+CjxwPkFsc28gYSBsb3ZlbHkgPGEgaHJlZj0iaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NZXJnbyIgcmVsPSJub2ZvbGxvdyI+Y29tdW5lPC9hPiAobXVuaWNpcGFsaXR5KSBpbiB0aGUgUHJvdmluY2Ugb2YgQW5jb25hIGluIHRoZSBJdGFsaWFuIHJlZ2lvbiBvZiBNYXJjaGUuPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLXN0YXR1cyI+U3RhdHVzPC9oND4KPHA+SXQgaXMgcmVhZHkgZm9yIHByb2R1Y3Rpb24gdXNlLiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyNtZXJnby1pbi10aGUtd2lsZCIgcmVsPSJub2ZvbGxvdyI+SXQgaXMgdXNlZCBpbiBzZXZlcmFsIHByb2plY3RzIGJ5IERvY2tlciwgR29vZ2xlLCBUaGUgTGludXggRm91bmRhdGlvbiwgVk1XYXJlLCBTaG9waWZ5LCBldGM8L2E+LjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvP3N0YXR1cy5zdmc9IiBhbHQ9IkdvRG9jIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2dvcmVwb3J0Y2FyZC5jb20vcmVwb3J0L2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vZ29yZXBvcnRjYXJkLmNvbS9iYWRnZS9pbWRhcmlvL21lcmdvIiBhbHQ9IkdvQ2FyZCIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL2ltZGFyaW8vbWVyZ28iIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3RyYXZpcy1jaS5vcmcvaW1kYXJpby9tZXJnby5wbmciIGFsdD0iQnVpbGQgU3RhdHVzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2NvdmVyYWxscy5pby9naXRodWIvaW1kYXJpby9tZXJnbz9icmFuY2g9bWFzdGVyIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3MvZ2l0aHViL2ltZGFyaW8vbWVyZ28vYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXIiIGFsdD0iQ292ZXJhZ2UgU3RhdHVzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZWdyYXBoLmNvbS9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28/YmFkZ2U9IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VncmFwaC5jb20vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvLy0vYmFkZ2Uuc3ZnIiBhbHQ9IlNvdXJjZWdyYXBoIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2FwcC5mb3NzYS5pby9wcm9qZWN0cy9naXQlMkJnaXRodWIuY29tJTJGaW1kYXJpbyUyRm1lcmdvP3JlZj1iYWRnZV9zaGllbGQiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2FwcC5mb3NzYS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnby5zdmc/dHlwZT1zaGllbGQiIGFsdD0iRk9TU0EgU3RhdHVzIi8+PC9hPjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1sYXRlc3QtcmVsZWFzZSI+TGF0ZXN0IHJlbGVhc2U8L2g1Pgo8cD48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9yZWxlYXNlcy90YWcvdjAuMy43IiByZWw9Im5vZm9sbG93Ij5SZWxlYXNlIHYwLjMuNzwvYT4uPC9wPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLWltcG9ydGFudC1ub3RlIj5JbXBvcnRhbnQgbm90ZTwvaDU+CjxwPlBsZWFzZSBrZWVwIGluIG1pbmQgdGhhdCBpbiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9pbWRhcmlvL21lcmdvL3JlbGVhc2VzL3RhZy8wLjMuMiIgcmVsPSJub2ZvbGxvdyI+MC4zLjI8L2E+IE1lcmdvIGNoYW5nZWQgPGNvZGU+TWVyZ2UoKTwvY29kZT5hbmQgPGNvZGU+TWFwKCk8L2NvZGU+IHNpZ25hdHVyZXMgdG8gc3VwcG9ydCA8YSBocmVmPSIjcmVhZG1lLXRyYW5zZm9ybWVycyIgcmVsPSJub2ZvbGxvdyI+dHJhbnNmb3JtZXJzPC9hPi4gQW4gb3B0aW9uYWwvdmFyaWFkaWMgYXJndW1lbnQgaGFzIGJlZW4gYWRkZWQsIHNvIGl0IHdvbiYjMzk7dCBicmVhayBleGlzdGluZyBjb2RlLjwvcD4KPHA+SWYgeW91IHdlcmUgdXNpbmcgTWVyZ28gPHN0cm9uZz5iZWZvcmU8L3N0cm9uZz4gQXByaWwgNnRoIDIwMTUsIHBsZWFzZSBjaGVjayB5b3VyIHByb2plY3Qgd29ya3MgYXMgaW50ZW5kZWQgYWZ0ZXIgdXBkYXRpbmcgeW91ciBsb2NhbCBjb3B5IHdpdGggPGNvZGU+Z28gZ2V0IC11IGdpdGh1Yi5jb20vaW1kYXJpby9tZXJnbzwvY29kZT4uIEkgYXBvbG9naXplIGZvciBhbnkgaXNzdWUgY2F1c2VkIGJ5IGl0cyBwcmV2aW91cyBiZWhhdmlvciBhbmQgYW55IGZ1dHVyZSBidWcgdGhhdCBNZXJnbyBjb3VsZCBjYXVzZSAoSSBob3BlIGl0IHdvbiYjMzk7dCEpIGluIGV4aXN0aW5nIHByb2plY3RzIGFmdGVyIHRoZSBjaGFuZ2UgKHJlbGVhc2UgMC4yLjApLjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1kb25hdGlvbnMiPkRvbmF0aW9uczwvaDU+CjxwPklmIE1lcmdvIGlzIHVzZWZ1bCB0byB5b3UsIGNvbnNpZGVyIGJ1eWluZyBtZSBhIGNvZmZlZSwgYSBiZWVyIG9yIG1ha2luZyBhIG1vbnRobHkgZG9uYXRpb24gc28gSSBjYW4ga2VlcCBidWlsZGluZyBncmVhdCBmcmVlIHNvZnR3YXJlLiDwn5iNPC9wPgo8cD48YSBocmVmPSJodHRwczovL2tvLWZpLmNvbS9CMEI1ODgzOSIgcmVsPSJub2ZvbGxvdyI+PGltZyBoZWlnaHQ9IjM2IiBzcmM9Imh0dHBzOi8vYXo3NDM3MDIudm8ubXNlY25kLm5ldC9jZG4va29maTEucG5nP3Y9MCIgYWx0PSJCdXkgTWUgYSBDb2ZmZWUgYXQga28tZmkuY29tIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2JlZXJwYXkuaW8vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vYmVlcnBheS5pby9pbWRhcmlvL21lcmdvL2JhZGdlLnN2ZyIgYWx0PSJCZWVycGF5Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL2JlZXJwYXkuaW8vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vYmVlcnBheS5pby9pbWRhcmlvL21lcmdvL21ha2Utd2lzaC5zdmciIGFsdD0iQmVlcnBheSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9saWJlcmFwYXkuY29tL2RhcmlvL2RvbmF0ZSIgcmVsPSJub2ZvbGxvdyI+PGltZyBhbHQ9IkRvbmF0ZSB1c2luZyBMaWJlcmFwYXkiIHNyYz0iaHR0cHM6Ly9saWJlcmFwYXkuY29tL2Fzc2V0cy93aWRnZXRzL2RvbmF0ZS5zdmciPjwvYT48L3A+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtbWVyZ28taW4tdGhlLXdpbGQiPk1lcmdvIGluIHRoZSB3aWxkPC9oNT4KPHVsPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21vYnkvbW9ieSIgcmVsPSJub2ZvbGxvdyI+bW9ieS9tb2J5PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy9rdWJlcm5ldGVzIiByZWw9Im5vZm9sbG93Ij5rdWJlcm5ldGVzL2t1YmVybmV0ZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS92bXdhcmUvZGlzcGF0Y2giIHJlbD0ibm9mb2xsb3ciPnZtd2FyZS9kaXNwYXRjaDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1Nob3BpZnkvdGhlbWVraXQiIHJlbD0ibm9mb2xsb3ciPlNob3BpZnkvdGhlbWVraXQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL3phcyIgcmVsPSJub2ZvbGxvdyI+aW1kYXJpby96YXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tYXRjb3JuaWMvaGVybWVzIiByZWw9Im5vZm9sbG93Ij5tYXRjb3JuaWMvaGVybWVzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vT3BlbkJhemFhci9vcGVuYmF6YWFyLWdvIiByZWw9Im5vZm9sbG93Ij5PcGVuQmF6YWFyL29wZW5iYXphYXItZ288L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rYXRhcmFzL2lyaXMiIHJlbD0ibm9mb2xsb3ciPmthdGFyYXMvaXJpczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21pY2hhZWxzYXV0ZXIvY3JhbmUiIHJlbD0ibm9mb2xsb3ciPm1pY2hhZWxzYXV0ZXIvY3JhbmU8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby10YXNrL3Rhc2siIHJlbD0ibm9mb2xsb3ciPmdvLXRhc2svdGFzazwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NlbnN1L3VjaGl3YSIgcmVsPSJub2ZvbGxvdyI+c2Vuc3UvdWNoaXdhPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vb3J5L2h5ZHJhIiByZWw9Im5vZm9sbG93Ij5vcnkvaHlkcmE8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zaXNhdGVjaC92Y2xpIiByZWw9Im5vZm9sbG93Ij5zaXNhdGVjaC92Y2xpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZGFpcnljYXJ0L2RhaXJ5Y2FydCIgcmVsPSJub2ZvbGxvdyI+ZGFpcnljYXJ0L2RhaXJ5Y2FydDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RjYWxpY28vZmVsaXgiIHJlbD0ibm9mb2xsb3ciPnByb2plY3RjYWxpY28vZmVsaXg8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yZXNpbi1vcy9iYWxlbmEiIHJlbD0ibm9mb2xsb3ciPnJlc2luLW9zL2JhbGVuYTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWtpdmlrL2tpdmlrIiByZWw9Im5vZm9sbG93Ij5nby1raXZpay9raXZpazwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1RlbGVmb25pY2EvZ292aWNlIiByZWw9Im5vZm9sbG93Ij5UZWxlZm9uaWNhL2dvdmljZTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvc3VwZXJnaWFudC9zdXBlcmdpYW50IiByZWw9Im5vZm9sbG93Ij5zdXBlcmdpYW50L3N1cGVyZ2lhbnQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9TZXJnZXlUc2Fsa292L2Jyb29jZSIgcmVsPSJub2ZvbGxvdyI+U2VyZ2V5VHNhbGtvdi9icm9vY2U8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zb25pYWgvZG5zbWFkZWVhc3kiIHJlbD0ibm9mb2xsb3ciPnNvbmlhaC9kbnNtYWRlZWFzeTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL29oc3UtY29tcC1iaW8vZnVubmVsIiByZWw9Im5vZm9sbG93Ij5vaHN1LWNvbXAtYmlvL2Z1bm5lbDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0VhZ2VySU8vU3RvdXQiIHJlbD0ibm9mb2xsb3ciPkVhZ2VySU8vU3RvdXQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9seW5uZHlsYW5odXJsZXkvZGVmc3ludGgtYXBpIiByZWw9Im5vZm9sbG93Ij5seW5uZHlsYW5odXJsZXkvZGVmc3ludGgtYXBpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcnVzc3Jvc3MvY2FudmFzYXNzaWdubWVudHMiIHJlbD0ibm9mb2xsb3ciPnJ1c3Nyb3NzL2NhbnZhc2Fzc2lnbm1lbnRzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcmRlZ2dlcy9jcnlwdGx5LWFwaSIgcmVsPSJub2ZvbGxvdyI+cmRlZ2dlcy9jcnlwdGx5LWFwaTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Nhc3VhbGppbS9leGVnZ3V0b3IiIHJlbD0ibm9mb2xsb3ciPmNhc3VhbGppbS9leGVnZ3V0b3I8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kaXZzaG90L2dpdGxpbmciIHJlbD0ibm9mb2xsb3ciPmRpdnNob3QvZ2l0bGluZzwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1JXSk11cnBoeS9nb3JsIiByZWw9Im5vZm9sbG93Ij5SV0pNdXJwaHkvZ29ybDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FuZHJlcm9ja2VyL2RlcGxveTQyIiByZWw9Im5vZm9sbG93Ij5hbmRyZXJvY2tlci9kZXBsb3k0MjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Vsd2luYXIvcmFtYmxlciIgcmVsPSJub2ZvbGxvdyI+ZWx3aW5hci9yYW1ibGVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdG1haWFyb3RvL2dvcGFydG1hbiIgcmVsPSJub2ZvbGxvdyI+dG1haWFyb3RvL2dvcGFydG1hbjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pmYnVzL2ltcHJlc3Npb25pc3QiIHJlbD0ibm9mb2xsb3ciPmpmYnVzL2ltcHJlc3Npb25pc3Q8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9KbWV5ZXJpbmcvemVhbG90IiByZWw9Im5vZm9sbG93Ij5KbWV5ZXJpbmcvemVhbG90PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29kZXAtbWlncmF0b3IvcmlnZ2VyLWhvc3QiIHJlbD0ibm9mb2xsb3ciPmdvZGVwLW1pZ3JhdG9yL3JpZ2dlci1ob3N0PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRHJvbmV2ZXJ5L011bHRpd2F5U3dpdGNoLUdvIiByZWw9Im5vZm9sbG93Ij5Ecm9uZXZlcnkvTXVsdGl3YXlTd2l0Y2gtR288L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aG9hcy9waWNmaXQiIHJlbD0ibm9mb2xsb3ciPnRob2FzL3BpY2ZpdDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21hbnRhc21hdGVsaXMvd2hvb3BsaXN0LXNlcnZlciIgcmVsPSJub2ZvbGxvdyI+bWFudGFzbWF0ZWxpcy93aG9vcGxpc3Qtc2VydmVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vam51dGhvbmcvaXRlbV9zZWFyY2giIHJlbD0ibm9mb2xsb3ciPmpudXRob25nL2l0ZW1fc2VhcmNoPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnVrYWxhcGFrL3Nub3dib2FyZCIgcmVsPSJub2ZvbGxvdyI+YnVrYWxhcGFrL3Nub3dib2FyZDwvYT48L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWluc3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uPC9oND4KPHByZT48Y29kZT5nbyBnZXQgZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvCgovLyB1c2UgaW4geW91ciAuZ28gY29kZQppbXBvcnQgKAogICAgJiMzNDtnaXRodWIuY29tL2ltZGFyaW8vbWVyZ28mIzM0OwopCjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS11c2FnZSI+VXNhZ2U8L2g0Pgo8cD5Zb3UgY2FuIG9ubHkgbWVyZ2Ugc2FtZS10eXBlIHN0cnVjdHMgd2l0aCBleHBvcnRlZCBmaWVsZHMgaW5pdGlhbGl6ZWQgYXMgemVybyB2YWx1ZSBvZiB0aGVpciB0eXBlIGFuZCBzYW1lLXR5cGVzIG1hcHMuIE1lcmdvIHdvbiYjMzk7dCBtZXJnZSB1bmV4cG9ydGVkIChwcml2YXRlKSBmaWVsZHMgYnV0IHdpbGwgZG8gcmVjdXJzaXZlbHkgYW55IGV4cG9ydGVkIG9uZS4gSXQgd29uJiMzOTt0IG1lcmdlIGVtcHR5IHN0cnVjdHMgdmFsdWUgYXMgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnL3JlZi9zcGVjI1RoZV96ZXJvX3ZhbHVlIiByZWw9Im5vZm9sbG93Ij50aGV5IGFyZSBub3QgY29uc2lkZXJlZCB6ZXJvIHZhbHVlczwvYT4gZWl0aGVyLiBBbHNvIG1hcHMgd2lsbCBiZSBtZXJnZWQgcmVjdXJzaXZlbHkgZXhjZXB0IGZvciBzdHJ1Y3RzIGluc2lkZSBtYXBzIChiZWNhdXNlIHRoZXkgYXJlIG5vdCBhZGRyZXNzYWJsZSB1c2luZyBHbyByZWZsZWN0aW9uKS48L3A+CjxwcmU+PGNvZGU+aWYgZXJyIDo9IG1lcmdvLk1lcmdlKCZhbXA7ZHN0LCBzcmMpOyBlcnIgIT0gbmlsIHsKICAgIC8vIC4uLgp9CjwvY29kZT48L3ByZT4KPHA+QWxzbywgeW91IGNhbiBtZXJnZSBvdmVyd3JpdGluZyB2YWx1ZXMgdXNpbmcgdGhlIHRyYW5zZm9ybWVyIDxjb2RlPldpdGhPdmVycmlkZTwvY29kZT4uPC9wPgo8cHJlPjxjb2RlPmlmIGVyciA6PSBtZXJnby5NZXJnZSgmYW1wO2RzdCwgc3JjLCBtZXJnby5XaXRoT3ZlcnJpZGUpOyBlcnIgIT0gbmlsIHsKICAgIC8vIC4uLgp9CjwvY29kZT48L3ByZT4KPHA+QWRkaXRpb25hbGx5LCB5b3UgY2FuIG1hcCBhIDxjb2RlPm1hcFtzdHJpbmddaW50ZXJmYWNle308L2NvZGU+IHRvIGEgc3RydWN0IChhbmQgb3RoZXJ3aXNlLCBmcm9tIHN0cnVjdCB0byBtYXApLCBmb2xsb3dpbmcgdGhlIHNhbWUgcmVzdHJpY3Rpb25zIGFzIGluIDxjb2RlPk1lcmdlKCk8L2NvZGU+LiBLZXlzIGFyZSBjYXBpdGFsaXplZCB0byBmaW5kIGVhY2ggY29ycmVzcG9uZGluZyBleHBvcnRlZCBmaWVsZC48L3A+CjxwcmU+PGNvZGU+aWYgZXJyIDo9IG1lcmdvLk1hcCgmYW1wO2RzdCwgc3JjTWFwKTsgZXJyICE9IG5pbCB7CiAgICAvLyAuLi4KfQo8L2NvZGU+PC9wcmU+CjxwPldhcm5pbmc6IGlmIHlvdSBtYXAgYSBzdHJ1Y3QgdG8gbWFwLCBpdCB3b24mIzM5O3QgZG8gaXQgcmVjdXJzaXZlbHkuIERvbiYjMzk7dCBleHBlY3QgTWVyZ28gdG8gbWFwIHN0cnVjdCBtZW1iZXJzIG9mIHlvdXIgc3RydWN0IGFzIDxjb2RlPm1hcFtzdHJpbmddaW50ZXJmYWNle308L2NvZGU+LiBUaGV5IHdpbGwgYmUganVzdCBhc3NpZ25lZCBhcyB2YWx1ZXMuPC9wPgo8cD5Nb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcyBpbiA8YSBocmVmPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+Z29kb2MgZG9jdW1lbnRhdGlvbjwvYT4uPC9wPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLW5pY2UtZXhhbXBsZSI+TmljZSBleGFtcGxlPC9oNT4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCgkmIzM0O2ZtdCYjMzQ7CgkmIzM0O2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyYjMzQ7CikKCnR5cGUgRm9vIHN0cnVjdCB7CglBIHN0cmluZwoJQiBpbnQ2NAp9CgpmdW5jIG1haW4oKSB7CglzcmMgOj0gRm9vewoJCUE6ICYjMzQ7b25lJiMzNDssCgkJQjogMiwKCX0KCWRlc3QgOj0gRm9vewoJCUE6ICYjMzQ7dHdvJiMzNDssCgl9CgltZXJnby5NZXJnZSgmYW1wO2Rlc3QsIHNyYykKCWZtdC5QcmludGxuKGRlc3QpCgkvLyBXaWxsIHByaW50CgkvLyB7dHdvIDJ9Cn0KPC9jb2RlPjwvcHJlPgo8cD5Ob3RlOiBpZiB0ZXN0IGFyZSBmYWlsaW5nIGR1ZSBtaXNzaW5nIHBhY2thZ2UsIHBsZWFzZSBleGVjdXRlOjwvcD4KPHByZT48Y29kZT5nbyBnZXQgZ29wa2cuaW4veWFtbC52Mgo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtdHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2g1Pgo8cD5UcmFuc2Zvcm1lcnMgYWxsb3cgdG8gbWVyZ2Ugc3BlY2lmaWMgdHlwZXMgZGlmZmVyZW50bHkgdGhhbiBpbiB0aGUgZGVmYXVsdCBiZWhhdmlvci4gSW4gb3RoZXIgd29yZHMsIG5vdyB5b3UgY2FuIGN1c3RvbWl6ZSBob3cgc29tZSB0eXBlcyBhcmUgbWVyZ2VkLiBGb3IgZXhhbXBsZSwgPGNvZGU+dGltZS5UaW1lPC9jb2RlPiBpcyBhIHN0cnVjdDsgaXQgZG9lc24mIzM5O3QgaGF2ZSB6ZXJvIHZhbHVlIGJ1dCBJc1plcm8gY2FuIHJldHVybiB0cnVlIGJlY2F1c2UgaXQgaGFzIGZpZWxkcyB3aXRoIHplcm8gdmFsdWUuIEhvdyBjYW4gd2UgbWVyZ2UgYSBub24temVybyA8Y29kZT50aW1lLlRpbWU8L2NvZGU+PzwvcD4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCgkmIzM0O2ZtdCYjMzQ7CgkmIzM0O2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyYjMzQ7CiAgICAgICAgJiMzNDtyZWZsZWN0JiMzNDsKICAgICAgICAmIzM0O3RpbWUmIzM0OwopCgp0eXBlIHRpbWVUcmFuc2ZvbWVyIHN0cnVjdCB7Cn0KCmZ1bmMgKHQgdGltZVRyYW5zZm9tZXIpIFRyYW5zZm9ybWVyKHR5cCByZWZsZWN0LlR5cGUpIGZ1bmMoZHN0LCBzcmMgcmVmbGVjdC5WYWx1ZSkgZXJyb3IgewoJaWYgdHlwID09IHJlZmxlY3QuVHlwZU9mKHRpbWUuVGltZXt9KSB7CgkJcmV0dXJuIGZ1bmMoZHN0LCBzcmMgcmVmbGVjdC5WYWx1ZSkgZXJyb3IgewoJCQlpZiBkc3QuQ2FuU2V0KCkgewoJCQkJaXNaZXJvIDo9IGRzdC5NZXRob2RCeU5hbWUoJiMzNDtJc1plcm8mIzM0OykKCQkJCXJlc3VsdCA6PSBpc1plcm8uQ2FsbChbXXJlZmxlY3QuVmFsdWV7fSkKCQkJCWlmIHJlc3VsdFswXS5Cb29sKCkgewoJCQkJCWRzdC5TZXQoc3JjKQoJCQkJfQoJCQl9CgkJCXJldHVybiBuaWwKCQl9Cgl9CglyZXR1cm4gbmlsCn0KCnR5cGUgU25hcHNob3Qgc3RydWN0IHsKCVRpbWUgdGltZS5UaW1lCgkvLyAuLi4KfQoKZnVuYyBtYWluKCkgewoJc3JjIDo9IFNuYXBzaG90e3RpbWUuTm93KCl9CglkZXN0IDo9IFNuYXBzaG90e30KCW1lcmdvLk1lcmdlKCZhbXA7ZGVzdCwgc3JjLCBtZXJnby5XaXRoVHJhbnNmb3JtZXJzKHRpbWVUcmFuc2ZvbWVye30pKQoJZm10LlByaW50bG4oZGVzdCkKCS8vIFdpbGwgcHJpbnQKCS8vIHsgMjAxOC0wMS0xMiAwMToxNTowMCArMDAwMCBVVEMgbT0rMC4wMDAwMDAwMDEgfQp9CjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1jb250YWN0LW1lIj5Db250YWN0IG1lPC9oND4KPHA+SWYgSSBjYW4gaGVscCB5b3UsIHlvdSBoYXZlIGFuIGlkZWEgb3IgeW91IGFyZSB1c2luZyBNZXJnbyBpbiB5b3VyIHByb2plY3RzLCBkb24mIzM5O3QgaGVzaXRhdGUgdG8gZHJvcCBtZSBhIGxpbmUgKG9yIGEgcHVsbCByZXF1ZXN0KTogPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbV9kYXJpbyIgcmVsPSJub2ZvbGxvdyI+QGltX2RhcmlvPC9hPjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1hYm91dCI+QWJvdXQ8L2g0Pgo8cD5Xcml0dGVuIGJ5IDxhIGhyZWY9Imh0dHA6Ly9kYXJpby5pbSIgcmVsPSJub2ZvbGxvdyI+RGFyaW8gQ2FzdGHDscOpPC9hPi48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtdG9wLWNvbnRyaWJ1dG9ycyI+VG9wIENvbnRyaWJ1dG9yczwvaDQ+CjxwPjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzAiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvMCIgYWx0PSIwIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy8xIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzEiIGFsdD0iMSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vbGlua3MvMiIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2ltYWdlcy8yIiBhbHQ9IjIiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzMiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvMyIgYWx0PSIzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy80IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzQiIGFsdD0iNCIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vbGlua3MvNSIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2ltYWdlcy81IiBhbHQ9IjUiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzYiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvNiIgYWx0PSI2Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy83IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzciIGFsdD0iNyIvPjwvYT48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtbGljZW5zZSI+TGljZW5zZTwvaDQ+CjxwPjxhIGhyZWY9Imh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2UiIHJlbD0ibm9mb2xsb3ciPkJTRCAzLUNsYXVzZTwvYT4gbGljZW5zZSwgYXMgPGEgaHJlZj0iaHR0cDovL2dvbGFuZy5vcmcvTElDRU5TRSIgcmVsPSJub2ZvbGxvdyI+R28gbGFuZ3VhZ2U8L2E+LjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9hcHAuZm9zc2EuaW8vcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnbz9yZWY9YmFkZ2VfbGFyZ2UiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2FwcC5mb3NzYS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnby5zdmc/dHlwZT1sYXJnZSIgYWx0PSJGT1NTQSBTdGF0dXMiLz48L2E+PC9wPgo8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxidXR0b24gY2xhc3M9IlVuaXRSZWFkbWUtZXhwYW5kTGluayBqcy1yZWFkbWVFeHBhbmQiCiAgICAgICAgICBkYXRhLXRlc3QtaWQ9InJlYWRtZS1leHBhbmQiIGRhdGEtZ3RtYz0icmVhZG1lIGJ1dHRvbiIKICAgICAgICAgIGFyaWEtbGFiZWw9IkV4cGFuZCBSZWFkbWUiPkV4cGFuZCDilr48L2J1dHRvbj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iVW5pdFJlYWRtZS1jb2xsYXBzZUxpbmsganMtcmVhZG1lQ29sbGFwc2UiCiAgICAgICAgICBkYXRhLXRlc3QtaWQ9InJlYWRtZS1jb2xsYXBzZSIgZGF0YS1ndG1jPSJyZWFkbWUgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iRXhwYW5kIFJlYWRtZSI+Q29sbGFwc2Ug4pa0PC9idXR0b24+CiAgICAKICA8L2Rpdj4KCiAgICAgIAogICAgICAKICAgICAgICAKICAgICAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXREb2MiPgogICAgPGgyIGNsYXNzPSJVbml0RG9jLXRpdGxlIiBpZD0ic2VjdGlvbi1kb2N1bWVudGF0aW9uIj4KICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY29kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIERvY3VtZW50YXRpb24KICAgICAgPGEgY2xhc3M9IlVuaXREb2MtaWRMaW5rIiBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIj7CtjwvYT4KICAgIDwvaDI+CiAgICAKICAKICAgIAogIAoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24ganMtZG9jdW1lbnRhdGlvbiI+CiAgICAgIAogICAgICAgIAoKPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb250ZW50IGpzLWRvY0NvbnRlbnQiPiA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlldyI+CiAgICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLW92ZXJ2aWV3IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlld0hlYWRlciI+T3ZlcnZpZXcgPGEgaHJlZj0iI3BrZy1vdmVydmlldyI+wrY8L2E+PC9oMz4KCjxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgogIDx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPgogICAgPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgogICAgICAgIDxhIGhyZWY9IiNoZHItVXNhZ2UiPlVzYWdlPC9hPgogICAgICA8L2xpPgogICAgPC91bD4KPC9kaXY+CjxwPlBhY2thZ2UgbWVyZ28gbWVyZ2VzIHNhbWUtdHlwZSBzdHJ1Y3RzIGFuZCBtYXBzIGJ5IHNldHRpbmcgZGVmYXVsdCB2YWx1ZXMgaW4gemVyby12YWx1ZSBmaWVsZHMuCjwvcD48cD5NZXJnbyB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGJ1dCB3aWxsIGRvIHJlY3Vyc2l2ZWx5IGFueSBleHBvcnRlZCBvbmUuIEl0IGFsc28gd29uJiMzOTt0IG1lcmdlIHN0cnVjdHMgaW5zaWRlIG1hcHMgKGJlY2F1c2UgdGhleSBhcmUgbm90IGFkZHJlc3NhYmxlIHVzaW5nIEdvIHJlZmxlY3Rpb24pLgo8L3A+PGg0IGlkPSJoZHItVXNhZ2UiPlVzYWdlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1Vc2FnZSI+wrY8L2E+PC9oND48cD5Gcm9tIG15IG93biB3b3JrLWluLXByb2dyZXNzIHByb2plY3Q6CjwvcD48cHJlPnR5cGUgbmV0d29ya0NvbmZpZyBzdHJ1Y3QgewoJUHJvdG9jb2wgc3RyaW5nCglBZGRyZXNzIHN0cmluZwoJU2VydmVyVHlwZSBzdHJpbmcgYGpzb246ICYjMzQ7c2VydmVyX3R5cGUmIzM0O2AKCVBvcnQgdWludDE2Cn0KCnR5cGUgRnNzbkNvbmZpZyBzdHJ1Y3QgewoJTmV0d29yayBuZXR3b3JrQ29uZmlnCn0KCnZhciBmc3NuRGVmYXVsdCA9IEZzc25Db25maWcgewoJbmV0d29ya0NvbmZpZyB7CgkJJiMzNDt0Y3AmIzM0OywKCQkmIzM0OzEyNy4wLjAuMSYjMzQ7LAoJCSYjMzQ7aHR0cCYjMzQ7LAoJCTMxNTYwLAoJfSwKfQoKLy8gSW5zaWRlIGEgZnVuY3Rpb24gWy4uLl0KCmlmIGVyciA6PSBtZXJnby5NZXJnZSgmYW1wO2NvbmZpZywgZnNzbkRlZmF1bHQpOyBlcnIgIT0gbmlsIHsKCWxvZy5GYXRhbChlcnIpCn0KCi8vIE1vcmUgY29kZSBbLi4uXQo8L3ByZT4KPC9zZWN0aW9uPjxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4Ij4KICAgIDxoMyBpZD0icGtnLWluZGV4IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEhlYWRlciI+SW5kZXggPGEgaHJlZj0iI3BrZy1pbmRleCI+wrY8L2E+PC9oMz4KCjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleExpc3QiPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhWYXJpYWJsZXMiPjxhIGhyZWY9IiNwa2ctdmFyaWFibGVzIj5WYXJpYWJsZXM8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNNYXAiPmZ1bmMgTWFwKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjTWFwV2l0aE92ZXJ3cml0ZSI+ZnVuYyBNYXBXaXRoT3ZlcndyaXRlKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjTWVyZ2UiPmZ1bmMgTWVyZ2UoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqQ29uZmlnKSkgZXJyb3I8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiPmZ1bmMgTWVyZ2VXaXRoT3ZlcndyaXRlKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjV2l0aEFwcGVuZFNsaWNlIj5mdW5jIFdpdGhBcHBlbmRTbGljZShjb25maWcgKkNvbmZpZyk8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcnJpZGUiPmZ1bmMgV2l0aE92ZXJyaWRlKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1dpdGhPdmVycmlkZUVtcHR5U2xpY2UiPmZ1bmMgV2l0aE92ZXJyaWRlRW1wdHlTbGljZShjb25maWcgKkNvbmZpZyk8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWUiPmZ1bmMgV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1dpdGhUcmFuc2Zvcm1lcnMiPmZ1bmMgV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMgVHJhbnNmb3JtZXJzKSBmdW5jKCpDb25maWcpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjV2l0aFR5cGVDaGVjayI+ZnVuYyBXaXRoVHlwZUNoZWNrKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDb25maWciPnR5cGUgQ29uZmlnPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1RyYW5zZm9ybWVycyI+dHlwZSBUcmFuc2Zvcm1lcnM8L2E+PC9saT4KPC91bD4KPC9zZWN0aW9uPjxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctY29uc3RhbnRzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb25zdGFudHNIZWFkZXIiPkNvbnN0YW50cyA8YSBocmVmPSIjcGtnLWNvbnN0YW50cyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctdmFyaWFibGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXNIZWFkZXIiPlZhcmlhYmxlcyA8YSBocmVmPSIjcGtnLXZhcmlhYmxlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdmFyaWFibGVzIj4KICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbkxpbmsiPjxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ28uZ28jTDE3Ij5WaWV3IFNvdXJjZTwvYT48L3NwYW4+CiAgICAgIDxwcmU+dmFyICgKPHNwYW4gaWQ9IkVyck5pbEFyZ3VtZW50cyIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyck5pbEFyZ3VtZW50cyAgICAgICAgICAgICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtzcmMgYW5kIGRzdCBtdXN0IG5vdCBiZSBuaWwmIzM0OykKPC9zcGFuPjxzcGFuIGlkPSJFcnJEaWZmZXJlbnRBcmd1bWVudHNUeXBlcyIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyckRpZmZlcmVudEFyZ3VtZW50c1R5cGVzICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtzcmMgYW5kIGRzdCBtdXN0IGJlIG9mIHNhbWUgdHlwZSYjMzQ7KQo8L3NwYW4+PHNwYW4gaWQ9IkVyck5vdFN1cHBvcnRlZCIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyck5vdFN1cHBvcnRlZCAgICAgICAgICAgICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtvbmx5IHN0cnVjdHMgYW5kIG1hcHMgYXJlIHN1cHBvcnRlZCYjMzQ7KQo8L3NwYW4+PHNwYW4gaWQ9IkVyckV4cGVjdGVkTWFwQXNEZXN0aW5hdGlvbiIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyckV4cGVjdGVkTWFwQXNEZXN0aW5hdGlvbiAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtkc3Qgd2FzIGV4cGVjdGVkIHRvIGJlIGEgbWFwJiMzNDspCjwvc3Bhbj48c3BhbiBpZD0iRXJyRXhwZWN0ZWRTdHJ1Y3RBc0Rlc3RpbmF0aW9uIiBkYXRhLWtpbmQ9InZhcmlhYmxlIj4JRXJyRXhwZWN0ZWRTdHJ1Y3RBc0Rlc3RpbmF0aW9uID0gPGEgaHJlZj0iL2Vycm9ycyI+ZXJyb3JzPC9hPi48YSBocmVmPSIvZXJyb3JzI05ldyI+TmV3PC9hPigmIzM0O2RzdCB3YXMgZXhwZWN0ZWQgdG8gYmUgYSBzdHJ1Y3QmIzM0OykKPC9zcGFuPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkVycm9ycyByZXBvcnRlZCBieSBNZXJnbyB3aGVuIGl0IGZpbmRzIGludmFsaWQgYXJndW1lbnRzLgo8L3A+Cjwvc2VjdGlvbj4KCiAgPGgzIHRhYmluZGV4PSItMSIgaWQ9InBrZy1mdW5jdGlvbnMiIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uc0hlYWRlciI+RnVuY3Rpb25zIDxhIGhyZWY9IiNwa2ctZnVuY3Rpb25zIj7CtjwvYT48L2gzPgoKICA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNYXAiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21hcC5nbyNMMTMyIj5NYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI01hcCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIE1hcChkc3QsIHNyYyBpbnRlcmZhY2V7fSwgb3B0cyAuLi5mdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+TWFwIHNldHMgZmllbGRzJiMzOTsgdmFsdWVzIGluIGRzdCBmcm9tIHNyYy4Kc3JjIGNhbiBiZSBhIG1hcCB3aXRoIHN0cmluZyBrZXlzIG9yIGEgc3RydWN0LiBkc3QgbXVzdCBiZSB0aGUgb3Bwb3NpdGU6CmlmIHNyYyBpcyBhIG1hcCwgZHN0IG11c3QgYmUgYSB2YWxpZCBwb2ludGVyIHRvIHN0cnVjdC4gSWYgc3JjIGlzIGEgc3RydWN0LApkc3QgbXVzdCBiZSBtYXBbc3RyaW5nXWludGVyZmFjZXt9LgpJdCB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGFuZCB3aWxsIGRvIHJlY3Vyc2l2ZWx5CmFueSBleHBvcnRlZCBmaWVsZC4KSWYgZHN0IGlzIGEgbWFwLCBrZXlzIHdpbGwgYmUgc3JjIGZpZWxkcyYjMzk7IG5hbWVzIGluIGxvd2VyIGNhbWVsIGNhc2UuCk1pc3Npbmcga2V5IGluIHNyYyB0aGF0IGRvZXNuJiMzOTt0IG1hdGNoIGEgZmllbGQgaW4gZHN0IHdpbGwgYmUgc2tpcHBlZC4gVGhpcwpkb2VzbiYjMzk7dCBhcHBseSBpZiBkc3QgaXMgYSBtYXAuClRoaXMgaXMgc2VwYXJhdGVkIG1ldGhvZCBmcm9tIE1lcmdlIGJlY2F1c2UgaXQgaXMgY2xlYW5lciBhbmQgaXQga2VlcHMgc2FuZQpzZW1hbnRpY3M6IG1lcmdpbmcgZXF1YWwgdHlwZXMsIG1hcHBpbmcgZGlmZmVyZW50IChyZXN0cmljdGVkKSB0eXBlcy4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik1hcFdpdGhPdmVyd3JpdGUiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21hcC5nbyNMMTM5Ij5NYXBXaXRoT3ZlcndyaXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNYXBXaXRoT3ZlcndyaXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTWFwV2l0aE92ZXJ3cml0ZShkc3QsIHNyYyBpbnRlcmZhY2V7fSwgb3B0cyAuLi5mdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+TWFwV2l0aE92ZXJ3cml0ZSB3aWxsIGRvIHRoZSBzYW1lIGFzIE1hcCBleGNlcHQgdGhhdCBub24tZW1wdHkgZHN0IGF0dHJpYnV0ZXMgd2lsbCBiZSBvdmVycmlkZGVuIGJ5Cm5vbi1lbXB0eSBzcmMgYXR0cmlidXRlIHZhbHVlcy4KRGVwcmVjYXRlZDogVXNlIE1hcCjigKYpIHdpdGggV2l0aE92ZXJyaWRlCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNZXJnZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI1OSI+TWVyZ2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI01lcmdlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTWVyZ2UoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqPGEgaHJlZj0iI0NvbmZpZyI+Q29uZmlnPC9hPikpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPk1lcmdlIHdpbGwgZmlsbCBhbnkgZW1wdHkgZm9yIHZhbHVlIHR5cGUgYXR0cmlidXRlcyBvbiB0aGUgZHN0IHN0cnVjdCB1c2luZyBjb3JyZXNwb25kaW5nCnNyYyBhdHRyaWJ1dGVzIGlmIHRoZXkgdGhlbXNlbHZlcyBhcmUgbm90IGVtcHR5LiBkc3QgYW5kIHNyYyBtdXN0IGJlIHZhbGlkIHNhbWUtdHlwZSBzdHJ1Y3RzCmFuZCBkc3QgbXVzdCBiZSBhIHBvaW50ZXIgdG8gc3RydWN0LgpJdCB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGFuZCB3aWxsIGRvIHJlY3Vyc2l2ZWx5IGFueSBleHBvcnRlZCBmaWVsZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik1lcmdlV2l0aE92ZXJ3cml0ZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI2NiI+TWVyZ2VXaXRoT3ZlcndyaXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBNZXJnZVdpdGhPdmVyd3JpdGUoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqPGEgaHJlZj0iI0NvbmZpZyI+Q29uZmlnPC9hPikpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPk1lcmdlV2l0aE92ZXJ3cml0ZSB3aWxsIGRvIHRoZSBzYW1lIGFzIE1lcmdlIGV4Y2VwdCB0aGF0IG5vbi1lbXB0eSBkc3QgYXR0cmlidXRlcyB3aWxsIGJlIG92ZXJyaWRkZW4gYnkKbm9uLWVtcHR5IHNyYyBhdHRyaWJ1dGUgdmFsdWVzLgpEZXByZWNhdGVkOiB1c2UgTWVyZ2Uo4oCmKSB3aXRoIFdpdGhPdmVycmlkZQo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aEFwcGVuZFNsaWNlIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjkzIj5XaXRoQXBwZW5kU2xpY2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhBcHBlbmRTbGljZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjQ8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhBcHBlbmRTbGljZShjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoQXBwZW5kU2xpY2Ugd2lsbCBtYWtlIG1lcmdlIGFwcGVuZCBzbGljZXMgaW5zdGVhZCBvZiBvdmVyd3JpdGluZyBpdC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhPdmVycmlkZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI3OCI+V2l0aE92ZXJyaWRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoT3ZlcnJpZGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoT3ZlcnJpZGUoY29uZmlnICo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aE92ZXJyaWRlIHdpbGwgbWFrZSBtZXJnZSBvdmVycmlkZSBub24tZW1wdHkgZHN0IGF0dHJpYnV0ZXMgd2l0aCBub24tZW1wdHkgc3JjIGF0dHJpYnV0ZXMgdmFsdWVzLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aE92ZXJyaWRlRW1wdHlTbGljZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI4OCI+V2l0aE92ZXJyaWRlRW1wdHlTbGljZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aE92ZXJyaWRlRW1wdHlTbGljZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjg8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnICo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aE92ZXJyaWRlRW1wdHlTbGljZSB3aWxsIG1ha2UgbWVyZ2Ugb3ZlcnJpZGUgZW1wdHkgZHN0IHNsaWNlIHdpdGggZW1wdHkgc3JjIHNsaWNlLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjgzIj5XaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjk8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZShjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWUgd2lsbCBtYWtlIG1lcmdlIG92ZXJyaWRlIG5vbiBlbXB0eSBkc3QgYXR0cmlidXRlcyB3aXRoIGVtcHR5IHNyYyBhdHRyaWJ1dGVzIHZhbHVlcy4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhUcmFuc2Zvcm1lcnMiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvI0wyNzEiPldpdGhUcmFuc2Zvcm1lcnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhUcmFuc2Zvcm1lcnMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoVHJhbnNmb3JtZXJzKHRyYW5zZm9ybWVycyA8YSBocmVmPSIjVHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2E+KSBmdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aFRyYW5zZm9ybWVycyBhZGRzIHRyYW5zZm9ybWVycyB0byBtZXJnZSwgYWxsb3dpbmcgdG8gY3VzdG9taXplIHRoZSBtZXJnaW5nIG9mIHNvbWUgdHlwZXMuCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJXaXRoVHlwZUNoZWNrIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjk4Ij5XaXRoVHlwZUNoZWNrPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoVHlwZUNoZWNrIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYwLjMuODwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgV2l0aFR5cGVDaGVjayhjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoVHlwZUNoZWNrIHdpbGwgbWFrZSBtZXJnZSBjaGVjayB0eXBlcyB3aGlsZSBvdmVyd3JpdGluZyBpdCAobXVzdCBiZSB1c2VkIHdpdGggV2l0aE92ZXJyaWRlKS4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbmZpZyIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvI0w0MCI+Q29uZmlnPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDb25maWciPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDb25maWcgc3RydWN0IHsKPHNwYW4gaWQ9IkNvbmZpZy5PdmVyd3JpdGUiIGRhdGEta2luZD0iZmllbGQiPglPdmVyd3JpdGUgICAgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KPC9zcGFuPjxzcGFuIGlkPSJDb25maWcuQXBwZW5kU2xpY2UiIGRhdGEta2luZD0iZmllbGQiPglBcHBlbmRTbGljZSAgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KPC9zcGFuPjxzcGFuIGlkPSJDb25maWcuVHlwZUNoZWNrIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVHlwZUNoZWNrICAgIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iQ29uZmlnLlRyYW5zZm9ybWVycyIgZGF0YS1raW5kPSJmaWVsZCI+CVRyYW5zZm9ybWVycyA8YSBocmVmPSIjVHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNmb3JtZXJzIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDQ5Ij5UcmFuc2Zvcm1lcnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zZm9ybWVycyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFRyYW5zZm9ybWVycyBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVHJhbnNmb3JtZXJzLlRyYW5zZm9ybWVyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVRyYW5zZm9ybWVyKDxhIGhyZWY9Ii9yZWZsZWN0Ij5yZWZsZWN0PC9hPi48YSBocmVmPSIvcmVmbGVjdCNUeXBlIj5UeXBlPC9hPikgZnVuYyhkc3QsIHNyYyA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVmFsdWUiPlZhbHVlPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICAgIDwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgoKCgoKCiAgICAgIAogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAgIAogICAgICAKICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdEZpbGVzIGpzLXVuaXRGaWxlcyI+CiAgICA8aDIgY2xhc3M9IlVuaXRGaWxlcy10aXRsZSIgaWQ9InNlY3Rpb24tc291cmNlZmlsZXMiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9pbnNlcnRfZHJpdmVfZmlsZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby90cmVlL3YwLjMuOSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPlZpZXcgYWxsPC9hPgogICAgPC9kaXY+CiAgICA8ZGl2PgogICAgICA8dWwgY2xhc3M9IlVuaXRGaWxlcy1maWxlTGlzdCI+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9kb2MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZG9jLmdvIj5kb2MuZ288L2E+CiAgICAgICAgICA8L2xpPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWFwLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im1hcC5nbyI+bWFwLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im1lcmdlLmdvIj5tZXJnZS5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnby5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJtZXJnby5nbyI+bWVyZ28uZ288L2E+CiAgICAgICAgICA8L2xpPjwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgICAgIAogICAgICAKICAgIDwvZGl2PgogIDwvZGl2Pgo8L2FydGljbGU+CiAgICA8Zm9vdGVyIGNsYXNzPSJnby1NYWluLWZvb3RlciI+PC9mb290ZXI+CiAgPC9tYWluPgoKICAgIAogIDxmb290ZXIgY2xhc3M9ImdvLUZvb3RlciI+CiAgICAKICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rcyI+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMiIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBXaHkgR28KICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI3VzZS1jYXNlcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFVzZSBDYXNlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjY2FzZS1zdHVkaWVzIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ2FzZSBTdHVkaWVzCiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbGVhcm4uZ28uZGV2LyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEdldCBTdGFydGVkCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb2xhbmcub3JnIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgUGxheWdyb3VuZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3RvdXIuZ29sYW5nLm9yZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFRvdXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2dvP3RhYj1OZXdlc3QiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBTdGFjayBPdmVyZmxvdwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9oZWxwIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgSGVscAogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYiIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBQYWNrYWdlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSIvc3RkIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU3RhbmRhcmQgTGlicmFyeQogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9wcm9qZWN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQWJvdXQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZGwvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkRvd25sb2FkPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Jsb2ciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+QmxvZzwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nL2dvL2lzc3VlcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIElzc3VlIFRyYWNrZXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jL2RldmVsL3JlbGVhc2UuaHRtbCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFJlbGVhc2UgTm90ZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9ibG9nLmdvbGFuZy5vcmcvZ28tYnJhbmQiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBCcmFuZCBHdWlkZWxpbmVzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2NvbmR1Y3QiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBDb2RlIG9mIENvbmR1Y3QKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ29ubmVjdAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy50d2l0dGVyLmNvbS9nb2xhbmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBUd2l0dGVyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+R2l0SHViPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU2xhY2sKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9yZWRkaXQuY29tL3IvZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgci9nb2xhbmcKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBNZWV0dXAKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmd3ZWVrbHkuY29tLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEdvbGFuZyBXZWVrbHkKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItYm90dG9tIj4KICAgICAgPGltZyBjbGFzcz0iZ28tRm9vdGVyLWdvcGhlciIgIHdpZHRoPSIxNDMxIiBoZWlnaHQ9IjkwMSIKICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvZ29waGVyL3BpbG90LWJ1c3QtMTQzMXg5MDEuc3ZnIiBhbHQ9IkdvcGhlciBpbiBmbGlnaHQgZ29nZ2xlcyI+CiAgICAgIDx1bCBjbGFzcz0iZ28tRm9vdGVyLWxpc3RSb3ciPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2NvcHlyaWdodCIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+Q29weXJpZ2h0PC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvdG9zIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj5UZXJtcyBvZiBTZXJ2aWNlPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5nb29nbGUuY29tL2ludGwvZW4vcG9saWNpZXMvcHJpdmFjeS8iIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiCiAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPgogICAgICAgICAgICBQcml2YWN5IFBvbGljeQogICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvcy9wa2dzaXRlLWZlZWRiYWNrIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIKICAgICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgICAgUmVwb3J0IGFuIElzc3VlCiAgICAgICAgICA8L2E+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9ImdvLUZvb3Rlci1saXN0SXRlbSI+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS10ZXh0IGdvLUZvb3Rlci10b2dnbGVUaGVtZSBqcy10b2dnbGVUaGVtZSIgYXJpYS1sYWJlbD0iVG9nZ2xlIHRoZW1lIj4KICAgICAgICAgICAgPGltZyBkYXRhLXZhbHVlPSJhdXRvIiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYnJpZ2h0bmVzc182X2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iU3lzdGVtIHRoZW1lIj4KICAgICAgICAgICAgPGltZyBkYXRhLXZhbHVlPSJkYXJrIiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYnJpZ2h0bmVzc18yX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iRGFyayB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0ibGlnaHQiIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9saWdodF9tb2RlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iTGlnaHQgdGhlbWUiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS10ZXh0IGdvLUZvb3Rlci1rZXlib2FyZCBqcy1vcGVuU2hvcnRjdXRzIiBhcmlhLWxhYmVsPSJPcGVuIHNob3JjdXRzIG1vZGFsIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24va2V5Ym9hcmRfZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICAgPGEgY2xhc3M9ImdvLUZvb3Rlci1nb29nbGVMb2dvIiBocmVmPSJodHRwczovL2dvb2dsZS5jb20iIHRhcmdldD0iX2JsYW5rInJlbD0ibm9vcGVuZXIiCiAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICA8aW1nIGNsYXNzPSJnby1Gb290ZXItZ29vZ2xlTG9nb0ltZyIgaGVpZ2h0PSIyNCIgd2lkdGg9IjcyIgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vZ29vZ2xlLXdoaXRlLnN2ZyIgYWx0PSJHb29nbGUgbG9nbyI+CiAgICAgIDwvYT4KICAgIDwvZGl2PgogIDwvZm9vdGVyPgoKICAgIAogIDxkaWFsb2cgaWQ9Imp1bXAtdG8tbW9kYWwiIGNsYXNzPSJKdW1wRGlhbG9nIGdvLU1vZGFsIGdvLU1vZGFsLS1tZCBqcy1tb2RhbCI+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyIgZGF0YS1nbXRjPSJqdW1wIHRvIGZvcm0iIGFyaWEtbGFiZWw9Ikp1bXAgdG8gSWRlbnRpZmllciI+CiAgICAgIDxkaXYgY2xhc3M9IkRpYWxvZy10aXRsZSBnby1Nb2RhbC1oZWFkZXIiPgogICAgICAgIDxoMj5KdW1wIHRvPC9oMj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIgogICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgZGF0YS1tb2RhbC1jbG9zZQogICAgICAgICAgZGF0YS1ndG1jPSJtb2RhbCBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jbG9zZV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWZpbHRlciI+CiAgICAgICAgPGlucHV0IGNsYXNzPSJKdW1wRGlhbG9nLWlucHV0IGdvLUlucHV0IiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0idGV4dCI+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWJvZHkgZ28tTW9kYWwtYm9keSI+CiAgICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1saXN0Ij48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLU1vZGFsLWFjdGlvbnMiPgogICAgICAgIDxidXR0b24gY2xhc3M9ImdvLUJ1dHRvbiIgZGF0YS10ZXN0LWlkPSJjbG9zZS1kaWFsb2ciPkNsb3NlPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGlhbG9nPgoKICA8ZGlhbG9nIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cgZ28tTW9kYWwgZ28tTW9kYWwtLXNtIGpzLW1vZGFsIj4KICAgIDxmb3JtIG1ldGhvZD0iZGlhbG9nIj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtaGVhZGVyIj4KICAgICAgICA8aDI+S2V5Ym9hcmQgc2hvcnRjdXRzPC9oMj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIgogICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgZGF0YS1tb2RhbC1jbG9zZQogICAgICAgICAgZGF0YS1ndG1jPSJtb2RhbCBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jbG9zZV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1ib2R5Ij4KICAgICAgICA8dGFibGU+CiAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Pzwvc3Ryb25nPjwvdGQ+PHRkPiA6IFRoaXMgbWVudTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Lzwvc3Ryb25nPjwvdGQ+PHRkPiA6IFNlYXJjaCBzaXRlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPjx0ZCBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nLWtleSI+CiAgICAgICAgICAgICAgPHN0cm9uZz5mPC9zdHJvbmc+IG9yIDxzdHJvbmc+Rjwvc3Ryb25nPjwvdGQ+PHRkPiA6IEp1bXAgdG88L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgPHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48c3Ryb25nPnk8L3N0cm9uZz4gb3IgPHN0cm9uZz5ZPC9zdHJvbmc+PC90ZD4KICAgICAgICAgICAgICA8dGQ+IDogQ2Fub25pY2FsIFVSTDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L3Rib2R5PgogICAgICAgIDwvdGFibGU+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24iIGRhdGEtdGVzdC1pZD0iY2xvc2UtZGlhbG9nIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KCiAgICAKICAgICAgPHNjcmlwdD4KICAgICAgICAvLyB0aGlzIHdpbGwgdGhyb3cgaWYgdGhlIHF1ZXJ5U2VsZWN0b3IgY2Fu4oCZdCBmaW5kIHRoZSBlbGVtZW50CiAgICAgICAgY29uc3QgZ3RtSWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtZ3RtSUQnKS5kYXRhc2V0Lmd0bWlkOwogICAgICAgIGlmICghZ3RtSWQpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcignR29vZ2xlIFRhZyBNYW5hZ2VyIElEIG5vdCBmb3VuZCcpOwogICAgICAgIH0KICAgICAgICBsb2FkU2NyaXB0KGBodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JHtndG1JZH1gKTsKICAgICAgPC9zY3JpcHQ+CiAgICAgIDxub3NjcmlwdD4KICAgICAgICA8aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tVzhNVlFYRyIKICAgICAgICAgICAgICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPgogICAgICAgIDwvaWZyYW1lPgogICAgICA8L25vc2NyaXB0PgogICAgCiAgICAKICAKICA8ZGl2IGNsYXNzPSJqcy1jYW5vbmljYWxVUkxQYXRoIiBkYXRhLWNhbm9uaWNhbC11cmwtcGF0aD0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjBAdjAuMy45IiBoaWRkZW4+PC9kaXY+CiAgPHNjcmlwdD4KICAgIGxvYWRTY3JpcHQoJy9zdGF0aWMvZnJvbnRlbmQvdW5pdC9tYWluL21haW4uanMnKQogIDwvc2NyaXB0PgoKICA8c2NyaXB0PgogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9mcm9udGVuZC91bml0L3VuaXQuanMnKQogIDwvc2NyaXB0PgoKICA8L2JvZHk+CjwvaHRtbD4=
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '49'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Expires:
      - Fri, 08 Jul 2022 13:26:41 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        v0.3.9
        v0.3.8
        v0.3.6
        v0.3.4
        v0.3.7
        v0.3.5
        v0.3.3
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.9.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:41 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.9","Time":"2020-03-24T21:25:48Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.8.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:41 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.8","Time":"2019-10-03T07:39:17Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:41 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:41 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.6.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.6","Time":"2018-07-30T21:26:40Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iIGRhdGEtbGF5b3V0PSJyZXNwb25zaXZlIj4KICA8aGVhZD4KICAgIAogICAgPHNjcmlwdD4KICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgd2luZG93Ll9fZXJyPWZ1bmN0aW9uIGYoZSl7Zi5wPWYucHx8W107Zi5wLnB1c2goZSl9KTsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgKGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnN0IHRoZW1lID0gZG9jdW1lbnQuY29va2llLm1hdGNoKC9wcmVmZXJzLWNvbG9yLXNjaGVtZT0obGlnaHR8ZGFya3xhdXRvKS8pPy5bMV0KICAgICAgICBpZiAodGhlbWUpIHsKICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2h0bWwnKS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCB0aGVtZSk7CiAgICAgICAgfQogICAgICB9KCkpCiAgICA8L3NjcmlwdD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8bWV0YSBuYW1lPSJEZXNjcmlwdGlvbiIgY29udGVudD0iUGFja2FnZSBtZXJnbyBtZXJnZXMgc2FtZS10eXBlIHN0cnVjdHMgYW5kIG1hcHMgYnkgc2V0dGluZyBkZWZhdWx0IHZhbHVlcyBpbiB6ZXJvLXZhbHVlIGZpZWxkcy4iPgogICAgCiAgICA8bWV0YSBjbGFzcz0ianMtZ3RtSUQiIGRhdGEtZ3RtaWQ9IkdUTS1XOE1WUVhHIj4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iL3N0YXRpYy9zaGFyZWQvaWNvbi9mYXZpY29uLmljbyI+CiAgICAKICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2L2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAiPgoKICAgIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvZnJvbnRlbmQubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNDItbWFiIiByZWw9InN0eWxlc2hlZXQiPgogICAgCiAgPHRpdGxlPm1lcmdvIHBhY2thZ2UgLSBnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIC0gR28gUGFja2FnZXM8L3RpdGxlPgoKICAgIAogIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvdW5pdC91bml0Lm1pbi5jc3M/dmVyc2lvbj1wcm9kLWZyb250ZW5kLTAwMDQyLW1hYiIgcmVsPSJzdHlsZXNoZWV0Ij4KICAKICA8bGluayBocmVmPSIvc3RhdGljL2Zyb250ZW5kL3VuaXQvbWFpbi9tYWluLm1pbi5jc3M/dmVyc2lvbj1wcm9kLWZyb250ZW5kLTAwMDQyLW1hYiIgcmVsPSJzdHlsZXNoZWV0Ij4KCgogIDwvaGVhZD4KICA8Ym9keT4KICAgIAogICAgPHNjcmlwdD4KICAgICAgZnVuY3Rpb24gbG9hZFNjcmlwdChzcmMsIG1vZCA9IHRydWUpIHsKICAgICAgICBsZXQgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICAgIHMuc3JjID0gc3JjOwogICAgICAgIGlmIChtb2QpIHsKICAgICAgICAgIHMudHlwZSA9ICdtb2R1bGUnOwogICAgICAgICAgcy5hc3luYyA9IHRydWU7CiAgICAgICAgICBzLmRlZmVyID0gdHJ1ZQogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHMpOwogICAgICB9CiAgICAgIGxvYWRTY3JpcHQoIi90aGlyZF9wYXJ0eS9kaWFsb2ctcG9seWZpbGwvZGlhbG9nLXBvbHlmaWxsLmpzIiwgZmFsc2UpCiAgICAgIGxvYWRTY3JpcHQoIi9zdGF0aWMvZnJvbnRlbmQvZnJvbnRlbmQuanMiKTsKICAgIDwvc2NyaXB0PgogICAgCiAgPGhlYWRlciBjbGFzcz0iZ28tSGVhZGVyIGdvLUhlYWRlci0tZnVsbCBqcy1zaXRlSGVhZGVyIj4KICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1pbm5lciBnby1IZWFkZXItaW5uZXItLWRhcmsiPgogICAgICA8bmF2IGNsYXNzPSJnby1IZWFkZXItbmF2Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi8iIGNsYXNzPSJqcy1oZWFkZXJMb2dvIiBkYXRhLWd0bWM9Im5hdiBsaW5rIgogICAgICAgICAgICBkYXRhLXRlc3QtaWQ9ImdvLWhlYWRlci1sb2dvLWxpbmsiPgogICAgICAgICAgPGltZyBjbGFzcz0iZ28tSGVhZGVyLWxvZ28iIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby13aGl0ZS5zdmciIGFsdD0iR28iPgogICAgICAgIDwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJnby1IZWFkZXItcmlnaHRDb250ZW50Ij4KICAgICAgICAgIAo8ZGl2IGNsYXNzPSJnby1TZWFyY2hGb3JtIGpzLXNlYXJjaEZvcm0iPgogIDxmb3JtCiAgICBjbGFzcz0iZ28tSW5wdXRHcm91cCBnby1TaG9ydGN1dEtleSBnby1TZWFyY2hGb3JtLWZvcm0iCiAgICBhY3Rpb249Ii9zZWFyY2giCiAgICBkYXRhLXNob3J0Y3V0PSIvIgogICAgZGF0YS1zaG9ydGN1dC1hbHQ9InNlYXJjaCIKICAgIGRhdGEtZ3RtYz0ic2VhcmNoIGZvcm0iCiAgICBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIKICAgIHJvbGU9InNlYXJjaCIKICA+CiAgICA8aW5wdXQgbmFtZT0icSIgY2xhc3M9ImdvLUlucHV0IGpzLXNlYXJjaEZvY3VzIiBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIgdHlwZT0ic2VhcmNoIgogICAgICAgIGF1dG9jYXBpdGFsaXplPSJvZmYiIGF1dG9jb21wbGV0ZT0ib2ZmIiBhdXRvY29ycmVjdD0ib2ZmIiBzcGVsbGNoZWNrPSJmYWxzZSIKICAgICAgICBwbGFjZWhvbGRlcj0iU2VhcmNoIHBhY2thZ2VzIG9yIHN5bWJvbHMiCiAgICAgICAgdmFsdWU9IiIgLz4KICAgIDxpbnB1dCBuYW1lPSJtIiB2YWx1ZT0iIiBoaWRkZW4+CiAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS1pbnZlcnRlZCIgYXJpYS1sYWJlbD0iU3VibWl0IHNlYXJjaCI+CiAgICAgIDxpbWcKICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgIHdpZHRoPSIyNCIKICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vc2VhcmNoX2dtX2dyZXlfMjRkcC5zdmciCiAgICAgICAgYWx0PSIiCiAgICAgIC8+CiAgICA8L2J1dHRvbj4KICA8L2Zvcm0+CiAgPGJ1dHRvbiBjbGFzcz0iZ28tU2VhcmNoRm9ybS1leHBhbmRTZWFyY2gganMtZXhwYW5kU2VhcmNoIiBkYXRhLWd0bWM9Im5hdiBidXR0b24iCiAgICAgIGFyaWEtbGFiZWw9Ik9wZW4gc2VhcmNoIiBkYXRhLXRlc3QtaWQ9ImV4cGFuZC1zZWFyY2giPgogICAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IgogICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9zZWFyY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogIDwvYnV0dG9uPgo8L2Rpdj4KCiAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1tZW51Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucy8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPldoeSBHbzwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2xlYXJuLyIgZGF0YS1ndG1jPSJuYXYgbGluayI+R2V0IFN0YXJ0ZWQ8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLW1lbnVJdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvZG9jLyIgZGF0YS1ndG1jPSJuYXYgbGluayI+RG9jczwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0gZ28tSGVhZGVyLW1lbnVJdGVtLS1hY3RpdmUiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPlBhY2thZ2VzPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5LmdvbGFuZy5vcmcvIiBkYXRhLWd0bWM9Im5hdiBsaW5rIj5QbGF5PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYmxvZy8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPkJsb2c8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tSGVhZGVyLW5hdk9wZW4ganMtaGVhZGVyTWVudUJ1dHRvbiBnby1IZWFkZXItbmF2T3Blbi0td2hpdGUiIGRhdGEtZ3RtYz0ibmF2IGJ1dHRvbiIgYXJpYS1sYWJlbD0iT3BlbiBuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICA8L25hdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgogIDxhc2lkZSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlciBqcy1oZWFkZXIiPgogICAgPG5hdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1oZWFkZXIiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgdGFiaW5kZXg9Ii0xIj4KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbG9nbyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLWJsdWUuc3ZnIiBhbHQ9IkdvLiI+CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPHVsIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3QiPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zLyIgdGFiaW5kZXg9Ii0xIj5XaHkgR288L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIiB0YWJpbmRleD0iLTEiPkdldCBTdGFydGVkPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvIiB0YWJpbmRleD0iLTEiPkRvY3M8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIGdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0tLWFjdGl2ZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iIHRhYmluZGV4PSItMSI+UGFja2FnZXM8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5LmdvbGFuZy5vcmcvIiB0YWJpbmRleD0iLTEiPlBsYXk8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYmxvZyIgdGFiaW5kZXg9Ii0xIj5CbG9nPC9hPgogICAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgIDwvbmF2PgogIDwvYXNpZGU+CiAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1zY3JpbSBqcy1zY3JpbSIgcm9sZT0icHJlc2VudGF0aW9uIj48L2Rpdj4KCiAgICAKICA8bWFpbiBjbGFzcz0iZ28tTWFpbiI+CiAgICA8ZGl2IGNsYXNzPSJnby1NYWluLWJhbm5lciIgcm9sZT0iYWxlcnQiPjwvZGl2PgogICAgPGhlYWRlciBjbGFzcz0iZ28tTWFpbi1oZWFkZXIganMtbWFpbkhlYWRlciI+CiAgCiAgCiAgPG5hdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJCcmVhZGNydW1iIGdvLUJyZWFkY3J1bWIiIGFyaWEtbGFiZWw9IkJyZWFkY3J1bWIiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iIj4KICAgIDxvbD4KICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGkgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyIgZGF0YS1ndG1jPSJicmVhZGNydW1iIGxpbmsiPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MEB2MC4zLjkiIGRhdGEtZ3RtYz0iYnJlYWRjcnVtYiBsaW5rIiBhcmlhLWN1cnJlbnQ9ImxvY2F0aW9uIgogICAgICAgICAgICAgIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iQ3VycmVudCI+CiAgICAgICAgICAgIGdvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAKICAgICAgICAgIDwvYT4KICAgICAgICAgIAogICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSBnby1DbGlwYm9hcmQganMtY2xpcGJvYXJkIgogICAgICAgICAgICAgIHRpdGxlPSJDb3B5IHBhdGggdG8gY2xpcGJvYXJkLiYjMTA7JiMxMDtnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIgogICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICAgICAgZGF0YS10by1jb3B5PSJnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIgogICAgICAgICAgICAgIGRhdGEtZ3RtYz0iYnJlYWRjcnVtYnMgYnV0dG9uIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0tYWNjZW50ZWQiCiAgICAgICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2NvbnRlbnRfY29weV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIAogICAgICAgIAogICAgICA8L2xpPgogICAgPC9vbD4KICA8L25hdj4KCiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJDb250ZW50Ij4KICAgIAogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyVGl0bGUganMtc3RpY2t5SGVhZGVyIj4KICAgIDxhIGNsYXNzPSJnby1NYWluLWhlYWRlckxvZ28iIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgZGF0YS1ndG1jPSJoZWFkZXIgbGluayIgYXJpYS1sYWJlbD0iTGluayB0byBHbyBIb21lcGFnZSI+CiAgICAgIDxpbWcgaGVpZ2h0PSI3OCIgd2lkdGg9IjIwNyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLWJsdWUuc3ZnIiBhbHQ9IkdvIj4KICAgIDwvYT4KICAgIDxoMSBjbGFzcz0iVW5pdEhlYWRlci10aXRsZUhlYWRpbmciIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci10aXRsZSI+bWVyZ288L2gxPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5wYWNrYWdlPC9zcGFuPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5tb2R1bGU8L3NwYW4+CiAgICAKICAgIAogICAgICAKICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICB0aXRsZT0iQ29weSBwYXRoIHRvIGNsaXBib2FyZC4mIzEwOyYjMTA7Z29wa2cuaW4vaW1kYXJpby9tZXJnby52MCIKICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICBkYXRhLXRvLWNvcHk9ImdvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAiCiAgICAgICAgICBkYXRhLWd0bWM9InRpdGxlIGJ1dHRvbiIKICAgICAgICAgIHRhYmluZGV4PSItMSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb250ZW50X2NvcHlfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICAKICAgIAogIDwvZGl2PgoKICAgIAogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlscyI+CiAgICAKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLXZlcnNpb24iPgogICAgPGEgaHJlZj0iP3RhYj12ZXJzaW9ucyIgYXJpYS1sYWJlbD0iR28gdG8gVmVyc2lvbnMiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPjxzcGFuIGNsYXNzPSJnby10ZXh0U3VidGxlIj5WZXJzaW9uOiA8L3NwYW4+djAuMy45PC9hPgogICAgCiAgICA8c3BhbiBjbGFzcz0iRGV0YWlsc0hlYWRlci1iYWRnZS0tbGF0ZXN0IiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbWlub3JWZXJzaW9uQmFubmVyIj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLUNoaXAgRGV0YWlsc0hlYWRlci1zcGFuLS1sYXRlc3QiPkxhdGVzdDwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLUNoaXAgRGV0YWlsc0hlYWRlci1zcGFuLS1ub3RBdExhdGVzdCI+CiAgICAgICAgTGF0ZXN0CiAgICAgICAgCiAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgIDxzdW1tYXJ5PgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9hbGVydF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9Ildhcm5pbmciPgogICAgPC9zdW1tYXJ5PgogICAgPHA+VGhpcyBwYWNrYWdlIGlzIG5vdCBpbiB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgaXRzIG1vZHVsZS48L3A+CiAgPC9kZXRhaWxzPgoKICAgICAgPC9zcGFuPgogICAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MCIgYXJpYS1sYWJlbD0iR28gdG8gTGF0ZXN0IFZlcnNpb24iIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWFsZXJ0IERldGFpbHNIZWFkZXItc3Bhbi0tZ29Ub0xhdGVzdCI+R28gdG8gbGF0ZXN0PC9zcGFuPgogICAgICA8L2E+CiAgICA8L3NwYW4+CiAgPC9zcGFuPgoKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWNvbW1pdFRpbWUiPgogICAgUHVibGlzaGVkOiBNYXIgMjQsIDIwMjAKICA8L3NwYW4+CgogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZXMiPgogICAgTGljZW5zZTogPGEgaHJlZj0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWxpY2Vuc2VzIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZSIKICAgICAgICAgICAgYXJpYS1sYWJlbD0iR28gdG8gTGljZW5zZXMiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPkJTRC0zLUNsYXVzZTwvYT4KICAgICAgCiAgICAKICA8L3NwYW4+CgogICAgICAKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0cyI+CiAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MD90YWI9aW1wb3J0cyIgYXJpYS1sYWJlbD0iR28gdG8gSW1wb3J0cyIKICAgICAgICBkYXRhLWd0bWM9ImhlYWRlciBsaW5rIj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPkltcG9ydHM6IDwvc3Bhbj42CiAgICA8L2E+CiAgPC9zcGFuPgoKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0ZWRieSI+CiAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MD90YWI9aW1wb3J0ZWRieSIgYXJpYS1sYWJlbD0iR28gdG8gSW1wb3J0ZWQgQnkiCiAgICAgICAgZGF0YS1ndG1jPSJoZWFkZXIgbGluayI+CiAgICAgICA8c3BhbiBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+SW1wb3J0ZWQgYnk6IDwvc3Bhbj4xNQogICAgPC9hPgogIDwvc3Bhbj4KCiAgICAgIAogICAgCiAgPC9kaXY+CiAgCiAgPGRpdiBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd0NvbnRhaW5lciI+CiAgICA8c3ZnIGNsYXNzPSJVbml0SGVhZGVyLW92ZXJmbG93SW1hZ2UiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPgogICAgICA8cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBmaWxsPSJub25lIi8+CiAgICAgIDxwYXRoIGQ9Ik0xMiA4YzEuMSAwIDItLjkgMi0ycy0uOS0yLTItMi0yIC45LTIgMiAuOSAyIDIgMnptMCAyYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptMCA2Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnoiLz4KICAgIDwvc3ZnPgogICAgPHNlbGVjdCBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd1NlbGVjdCBqcy1zZWxlY3ROYXYiIHRhYmluZGV4PSItMSI+CiAgICAgIDxvcHRpb24gdmFsdWU9Ii8iPk1haW48L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPXZlcnNpb25zIj4KICAgICAgICBWZXJzaW9ucwogICAgICA8L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWxpY2Vuc2VzIj4KICAgICAgICBMaWNlbnNlcwogICAgICA8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWltcG9ydHMiPgogICAgICAgICAgSW1wb3J0cwogICAgICAgIDwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Ii9nb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwP3RhYj1pbXBvcnRlZGJ5Ij4KICAgICAgICAgIEltcG9ydGVkIEJ5CiAgICAgICAgPC9vcHRpb24+CiAgICAgIAogICAgPC9zZWxlY3Q+CiAgPC9kaXY+CgoKICA8L2Rpdj4KCjwvaGVhZGVyPgogICAgPGFzaWRlIGNsYXNzPSJnby1NYWluLWFzaWRlICBqcy1tYWluQXNpZGUiPgogIAogIDxkaXYgY2xhc3M9IlVuaXRNZXRhIj4KICAgIDxoMiBjbGFzcz0iZ28tdGV4dExhYmVsIj5EZXRhaWxzPC9oMj4KICAgIAogIDx1bCBjbGFzcz0iVW5pdE1ldGEtZGV0YWlscyI+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2FuY2VsX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0idW5jaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVmFsaWQgZ28ubW9kIGZpbGUKICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD4KICAgICAgICAgIFRoZSBHbyBtb2R1bGUgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkIGluIEdvIDEuMTEgYW5kIGlzIHRoZSBvZmZpY2lhbCBkZXBlbmRlbmN5IG1hbmFnZW1lbnQKICAgICAgICAgIHNvbHV0aW9uIGZvciBHby4KICAgICAgICA8L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1hY2NlbnRlZCJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2hlY2tfY2lyY2xlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vaGVscF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgICAgICA8L3N1bW1hcnk+CiAgICAgICAgPHA+CiAgICAgICAgICBSZWRpc3RyaWJ1dGFibGUgbGljZW5zZXMgcGxhY2UgbWluaW1hbCByZXN0cmljdGlvbnMgb24gaG93IHNvZnR3YXJlIGNhbiBiZSB1c2VkLAogICAgICAgICAgbW9kaWZpZWQsIGFuZCByZWRpc3RyaWJ1dGVkLgogICAgICAgIDwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5Nb2R1bGVzIHdpdGggdGFnZ2VkIHZlcnNpb25zIGdpdmUgaW1wb3J0ZXJzIG1vcmUgcHJlZGljdGFibGUgYnVpbGRzLjwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jYW5jZWxfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJ1bmNoZWNrZWQiaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KCiAgICAgICAgICBTdGFibGUgdmVyc2lvbgogICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2hlbHBfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICAgICAgPC9zdW1tYXJ5PgogICAgICAgIDxwPldoZW4gYSBwcm9qZWN0IHJlYWNoZXMgbWFqb3IgdmVyc2lvbiB2MSBpdCBpcyBjb25zaWRlcmVkIHN0YWJsZS48L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IlVuaXRNZXRhLWRldGFpbHNMZWFybiI+CiAgICAgIDxhIGhyZWY9Ii9hYm91dCNiZXN0LXByYWN0aWNlcy1oMiIgZGF0YS1ndG1jPSJtZXRhIGxpbmsiPkxlYXJuIG1vcmU8L2E+CiAgICA8L2xpPgogIDwvdWw+CgogICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPlJlcG9zaXRvcnk8L2gyPgogICAgPGRpdiBjbGFzcz0iVW5pdE1ldGEtcmVwbyI+CiAgICAgIAogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgIGdpdGh1Yi5jb20vaW1kYXJpby9tZXJnbwogICAgICAgIDwvYT4KICAgICAgCiAgICA8L2Rpdj4KICAgIAogICAgICA8aDIgY2xhc3M9ImdvLXRleHRMYWJlbCI+TGlua3M8L2gyPgogICAgICA8dWwgY2xhc3M9IlVuaXRNZXRhLWxpbmtzIj4KICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kZXBzLmRldi9nby9nb3BrZy5pbiUyRmltZGFyaW8lMkZtZXJnby52MC92MC4zLjkiIHRpdGxlPSJWaWV3IHRoaXMgbW9kdWxlIG9uIE9wZW4gU291cmNlIEluc2lnaHRzIgogICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiBkYXRhLXRlc3QtaWQ9Im1ldGEtbGluay1kZXBzZGV2Ij4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJkZXBzZGV2LUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9kZXBzZGV2LWxvZ28uc3ZnIiAKICAgICAgICAgICAgICAgIGFsdD0iT3BlbiBTb3VyY2UgSW5zaWdodHMgTG9nbyIgLz4KICAgICAgICAgICAgICBPcGVuIFNvdXJjZSBJbnNpZ2h0cwogICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgIAogIAoKICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICA8L3VsPgogICAgCiAgPC9kaXY+Cgo8L2FzaWRlPgogICAgPG5hdiBjbGFzcz0iZ28tTWFpbi1uYXYgZ28tTWFpbi1uYXYtLXN0aWNreSBqcy1tYWluTmF2IiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdkRlc2t0b3AiPgogICAgCiAgPGRpdiBjbGFzcz0iVW5pdE91dGxpbmUtanVtcFRvIj4KICAgIDxidXR0b24gY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUb0lucHV0IGdvLVNob3J0Y3V0S2V5IGpzLWp1bXBUb0lucHV0IgogICAgICAgIGFyaWEtY29udHJvbHM9Imp1bXAtdG8tbW9kYWwiCiAgICAgICAgYXJpYS1sYWJlbD0iT3BlbiBKdW1wIHRvIElkZW50aWZpZXIiCiAgICAgICAgZGF0YS1zaG9ydGN1dD0iZiIKICAgICAgICBkYXRhLXNob3J0Y3V0LWFsdD0iZmluZCIKICAgICAgICBkYXRhLXRlc3QtaWQ9Imp1bXAtdG8tYnV0dG9uIiBkYXRhLWd0bWM9Im91dGxpbmUgYnV0dG9uIj4KICAgICAgSnVtcCB0byAuLi4KICAgIDwvYnV0dG9uPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iZ28tVHJlZSBqcy10cmVlIiByb2xlPSJ0cmVlIiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICAgIAogICAgICA8bGkgY2xhc3M9ImpzLXJlYWRtZU91dGxpbmUiPgogICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgUkVBRE1FCiAgICAgICAgPC9hPgogICAgICAgIAogIDx1bCBpZD0icmVhZG1lLW91dGxpbmUiPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXN0YXR1cyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFN0YXR1cwogICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICAgIDx1bD4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1sYXRlc3QtcmVsZWFzZSIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgTGF0ZXN0IHJlbGVhc2UKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWltcG9ydGFudC1ub3RlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBJbXBvcnRhbnQgbm90ZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtZG9uYXRpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBEb25hdGlvbnMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW1lcmdvLWluLXRoZS13aWxkIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBNZXJnbyBpbiB0aGUgd2lsZAogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvdWw+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWluc3RhbGxhdGlvbiIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEluc3RhbGxhdGlvbgogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdXNhZ2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBVc2FnZQogICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICAgIDx1bD4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1uaWNlLWV4YW1wbGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIE5pY2UgZXhhbXBsZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdHJhbnNmb3JtZXJzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBUcmFuc2Zvcm1lcnMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1jb250YWN0LW1lIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgQ29udGFjdCBtZQogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtYWJvdXQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBBYm91dAogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdG9wLWNvbnRyaWJ1dG9ycyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFRvcCBDb250cmlidXRvcnMKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWxpY2Vuc2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBMaWNlbnNlCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgICAKICA8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIiBkYXRhLWd0bWM9Im91dGxpbmUgbGluayI+CiAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgIAo8dWw+CiAgCiAgICA8bGk+CiAgICAgIDxhIGhyZWY9IiNwa2ctb3ZlcnZpZXciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+T3ZlcnZpZXc8L2E+CiAgICA8L2xpPgogIDxsaSBjbGFzcz0iRG9jTmF2LW92ZXJ2aWV3Ij4KICAgICAgPGEgaHJlZj0iI3BrZy1pbmRleCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIENvbnN0YW50cwogICAgICA8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgVmFyaWFibGVzCiAgICAgIDwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICAKICAgICAgICA8dWw+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNNYXAiIHRpdGxlPSJNYXAoZHN0LCBzcmMsIG9wdHMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTWFwKGRzdCwgc3JjLCBvcHRzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI01hcFdpdGhPdmVyd3JpdGUiIHRpdGxlPSJNYXBXaXRoT3ZlcndyaXRlKGRzdCwgc3JjLCBvcHRzKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIE1hcFdpdGhPdmVyd3JpdGUoZHN0LCBzcmMsIG9wdHMpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjTWVyZ2UiIHRpdGxlPSJNZXJnZShkc3QsIHNyYywgb3B0cykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBNZXJnZShkc3QsIHNyYywgb3B0cykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiIHRpdGxlPSJNZXJnZVdpdGhPdmVyd3JpdGUoZHN0LCBzcmMsIG9wdHMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTWVyZ2VXaXRoT3ZlcndyaXRlKGRzdCwgc3JjLCBvcHRzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhBcHBlbmRTbGljZSIgdGl0bGU9IldpdGhBcHBlbmRTbGljZShjb25maWcpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aEFwcGVuZFNsaWNlKGNvbmZpZykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcnJpZGUiIHRpdGxlPSJXaXRoT3ZlcnJpZGUoY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhPdmVycmlkZShjb25maWcpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aE92ZXJyaWRlRW1wdHlTbGljZSIgdGl0bGU9IldpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZSIgdGl0bGU9IldpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZShjb25maWcpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlKGNvbmZpZykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoVHJhbnNmb3JtZXJzIiB0aXRsZT0iV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aFR5cGVDaGVjayIgdGl0bGU9IldpdGhUeXBlQ2hlY2soY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhUeXBlQ2hlY2soY29uZmlnKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgIDwvdWw+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LXR5cGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy10eXBlcyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBUeXBlcwogICAgICA8L2E+CiAgICAgIDx1bD4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ29uZmlnIiB0aXRsZT0idHlwZSBDb25maWciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBDb25maWcKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2Zvcm1lcnMiIHRpdGxlPSJ0eXBlIFRyYW5zZm9ybWVycyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIFRyYW5zZm9ybWVycwogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgIAogICAgICA8L3VsPgogICAgPC9saT4KICAKICAKPC91bD4KCiAgICAgIDwvbGk+CiAgICAKICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiIGRhdGEtZ3RtYz0ib3V0bGluZSBsaW5rIj4KICAgICAgICAgIFNvdXJjZSBGaWxlcwogICAgICAgIDwvYT4KICAgICAgPC9saT4KICAgIAogICAgCiAgPC91bD4KCiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1uYXZNb2JpbGUganMtbWFpbk5hdk1vYmlsZSI+CiAgICA8bGFiZWwgY2xhc3M9ImdvLUxhYmVsIj4KICAgICAgPHNlbGVjdCBjbGFzcz0iZ28tU2VsZWN0Ij4KICAgICAgICAKICAgICAgICAgIDxvcHRpb24gc2VsZWN0ZWQgZGlzYWJsZWQ+UkVBRE1FPC9vcHRpb24+CiAgICAgICAgCiAgICAgIDwvc2VsZWN0PgogICAgPC9sYWJlbD4KICA8L2Rpdj4KPC9uYXY+CiAgICA8YXJ0aWNsZSBjbGFzcz0iZ28tTWFpbi1hcnRpY2xlIGpzLW1haW5Db250ZW50Ij4KICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscyIgZGF0YS10ZXN0LWlkPSJVbml0RGV0YWlscyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyI+CiAgICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscy1jb250ZW50IGpzLXVuaXREZXRhaWxzQ29udGVudCIgZGF0YS10ZXN0LWlkPSJVbml0RGV0YWlscy1jb250ZW50Ij4KICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdFJlYWRtZSBVbml0UmVhZG1lLS1leHBhbmRlZCBqcy1yZWFkbWUiPgogICAgPGgyIGNsYXNzPSJVbml0UmVhZG1lLXRpdGxlIiBpZD0ic2VjdGlvbi1yZWFkbWUiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaHJvbWVfcmVhZGVyX21vZGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICBSRUFETUUKICAgICAgPGEgY2xhc3M9IlVuaXRSZWFkbWUtaWRMaW5rIiBocmVmPSIjc2VjdGlvbi1yZWFkbWUiPsK2PC9hPgogICAgPC9oMj4KICAgIAogICAgICA8ZGl2IGNsYXNzPSJVbml0UmVhZG1lLWNvbnRlbnQiIGRhdGEtdGVzdC1pZD0iVW5pdC1yZWFkbWVDb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJPdmVydmlldy1yZWFkbWVDb250ZW50IGpzLXJlYWRtZUNvbnRlbnQiPjxoMyBjbGFzcz0iaDEiIGlkPSJyZWFkbWUtbWVyZ28iPk1lcmdvPC9oMz4KPHA+QSBoZWxwZXIgdG8gbWVyZ2Ugc3RydWN0cyBhbmQgbWFwcyBpbiBHb2xhbmcuIFVzZWZ1bCBmb3IgY29uZmlndXJhdGlvbiBkZWZhdWx0IHZhbHVlcywgYXZvaWRpbmcgbWVzc3kgaWYtc3RhdGVtZW50cy48L3A+CjxwPkFsc28gYSBsb3ZlbHkgPGEgaHJlZj0iaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NZXJnbyIgcmVsPSJub2ZvbGxvdyI+Y29tdW5lPC9hPiAobXVuaWNpcGFsaXR5KSBpbiB0aGUgUHJvdmluY2Ugb2YgQW5jb25hIGluIHRoZSBJdGFsaWFuIHJlZ2lvbiBvZiBNYXJjaGUuPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLXN0YXR1cyI+U3RhdHVzPC9oND4KPHA+SXQgaXMgcmVhZHkgZm9yIHByb2R1Y3Rpb24gdXNlLiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyNtZXJnby1pbi10aGUtd2lsZCIgcmVsPSJub2ZvbGxvdyI+SXQgaXMgdXNlZCBpbiBzZXZlcmFsIHByb2plY3RzIGJ5IERvY2tlciwgR29vZ2xlLCBUaGUgTGludXggRm91bmRhdGlvbiwgVk1XYXJlLCBTaG9waWZ5LCBldGM8L2E+LjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvP3N0YXR1cy5zdmc9IiBhbHQ9IkdvRG9jIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2dvcmVwb3J0Y2FyZC5jb20vcmVwb3J0L2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vZ29yZXBvcnRjYXJkLmNvbS9iYWRnZS9pbWRhcmlvL21lcmdvIiBhbHQ9IkdvQ2FyZCIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL2ltZGFyaW8vbWVyZ28iIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3RyYXZpcy1jaS5vcmcvaW1kYXJpby9tZXJnby5wbmciIGFsdD0iQnVpbGQgU3RhdHVzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2NvdmVyYWxscy5pby9naXRodWIvaW1kYXJpby9tZXJnbz9icmFuY2g9bWFzdGVyIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3MvZ2l0aHViL2ltZGFyaW8vbWVyZ28vYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXIiIGFsdD0iQ292ZXJhZ2UgU3RhdHVzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZWdyYXBoLmNvbS9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28/YmFkZ2U9IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VncmFwaC5jb20vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvLy0vYmFkZ2Uuc3ZnIiBhbHQ9IlNvdXJjZWdyYXBoIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2FwcC5mb3NzYS5pby9wcm9qZWN0cy9naXQlMkJnaXRodWIuY29tJTJGaW1kYXJpbyUyRm1lcmdvP3JlZj1iYWRnZV9zaGllbGQiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2FwcC5mb3NzYS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnby5zdmc/dHlwZT1zaGllbGQiIGFsdD0iRk9TU0EgU3RhdHVzIi8+PC9hPjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1sYXRlc3QtcmVsZWFzZSI+TGF0ZXN0IHJlbGVhc2U8L2g1Pgo8cD48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9yZWxlYXNlcy90YWcvdjAuMy43IiByZWw9Im5vZm9sbG93Ij5SZWxlYXNlIHYwLjMuNzwvYT4uPC9wPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLWltcG9ydGFudC1ub3RlIj5JbXBvcnRhbnQgbm90ZTwvaDU+CjxwPlBsZWFzZSBrZWVwIGluIG1pbmQgdGhhdCBpbiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9pbWRhcmlvL21lcmdvL3JlbGVhc2VzL3RhZy8wLjMuMiIgcmVsPSJub2ZvbGxvdyI+MC4zLjI8L2E+IE1lcmdvIGNoYW5nZWQgPGNvZGU+TWVyZ2UoKTwvY29kZT5hbmQgPGNvZGU+TWFwKCk8L2NvZGU+IHNpZ25hdHVyZXMgdG8gc3VwcG9ydCA8YSBocmVmPSIjcmVhZG1lLXRyYW5zZm9ybWVycyIgcmVsPSJub2ZvbGxvdyI+dHJhbnNmb3JtZXJzPC9hPi4gQW4gb3B0aW9uYWwvdmFyaWFkaWMgYXJndW1lbnQgaGFzIGJlZW4gYWRkZWQsIHNvIGl0IHdvbiYjMzk7dCBicmVhayBleGlzdGluZyBjb2RlLjwvcD4KPHA+SWYgeW91IHdlcmUgdXNpbmcgTWVyZ28gPHN0cm9uZz5iZWZvcmU8L3N0cm9uZz4gQXByaWwgNnRoIDIwMTUsIHBsZWFzZSBjaGVjayB5b3VyIHByb2plY3Qgd29ya3MgYXMgaW50ZW5kZWQgYWZ0ZXIgdXBkYXRpbmcgeW91ciBsb2NhbCBjb3B5IHdpdGggPGNvZGU+Z28gZ2V0IC11IGdpdGh1Yi5jb20vaW1kYXJpby9tZXJnbzwvY29kZT4uIEkgYXBvbG9naXplIGZvciBhbnkgaXNzdWUgY2F1c2VkIGJ5IGl0cyBwcmV2aW91cyBiZWhhdmlvciBhbmQgYW55IGZ1dHVyZSBidWcgdGhhdCBNZXJnbyBjb3VsZCBjYXVzZSAoSSBob3BlIGl0IHdvbiYjMzk7dCEpIGluIGV4aXN0aW5nIHByb2plY3RzIGFmdGVyIHRoZSBjaGFuZ2UgKHJlbGVhc2UgMC4yLjApLjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1kb25hdGlvbnMiPkRvbmF0aW9uczwvaDU+CjxwPklmIE1lcmdvIGlzIHVzZWZ1bCB0byB5b3UsIGNvbnNpZGVyIGJ1eWluZyBtZSBhIGNvZmZlZSwgYSBiZWVyIG9yIG1ha2luZyBhIG1vbnRobHkgZG9uYXRpb24gc28gSSBjYW4ga2VlcCBidWlsZGluZyBncmVhdCBmcmVlIHNvZnR3YXJlLiDwn5iNPC9wPgo8cD48YSBocmVmPSJodHRwczovL2tvLWZpLmNvbS9CMEI1ODgzOSIgcmVsPSJub2ZvbGxvdyI+PGltZyBoZWlnaHQ9IjM2IiBzcmM9Imh0dHBzOi8vYXo3NDM3MDIudm8ubXNlY25kLm5ldC9jZG4va29maTEucG5nP3Y9MCIgYWx0PSJCdXkgTWUgYSBDb2ZmZWUgYXQga28tZmkuY29tIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2JlZXJwYXkuaW8vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vYmVlcnBheS5pby9pbWRhcmlvL21lcmdvL2JhZGdlLnN2ZyIgYWx0PSJCZWVycGF5Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL2JlZXJwYXkuaW8vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vYmVlcnBheS5pby9pbWRhcmlvL21lcmdvL21ha2Utd2lzaC5zdmciIGFsdD0iQmVlcnBheSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9saWJlcmFwYXkuY29tL2RhcmlvL2RvbmF0ZSIgcmVsPSJub2ZvbGxvdyI+PGltZyBhbHQ9IkRvbmF0ZSB1c2luZyBMaWJlcmFwYXkiIHNyYz0iaHR0cHM6Ly9saWJlcmFwYXkuY29tL2Fzc2V0cy93aWRnZXRzL2RvbmF0ZS5zdmciPjwvYT48L3A+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtbWVyZ28taW4tdGhlLXdpbGQiPk1lcmdvIGluIHRoZSB3aWxkPC9oNT4KPHVsPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21vYnkvbW9ieSIgcmVsPSJub2ZvbGxvdyI+bW9ieS9tb2J5PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy9rdWJlcm5ldGVzIiByZWw9Im5vZm9sbG93Ij5rdWJlcm5ldGVzL2t1YmVybmV0ZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS92bXdhcmUvZGlzcGF0Y2giIHJlbD0ibm9mb2xsb3ciPnZtd2FyZS9kaXNwYXRjaDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1Nob3BpZnkvdGhlbWVraXQiIHJlbD0ibm9mb2xsb3ciPlNob3BpZnkvdGhlbWVraXQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL3phcyIgcmVsPSJub2ZvbGxvdyI+aW1kYXJpby96YXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tYXRjb3JuaWMvaGVybWVzIiByZWw9Im5vZm9sbG93Ij5tYXRjb3JuaWMvaGVybWVzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vT3BlbkJhemFhci9vcGVuYmF6YWFyLWdvIiByZWw9Im5vZm9sbG93Ij5PcGVuQmF6YWFyL29wZW5iYXphYXItZ288L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rYXRhcmFzL2lyaXMiIHJlbD0ibm9mb2xsb3ciPmthdGFyYXMvaXJpczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21pY2hhZWxzYXV0ZXIvY3JhbmUiIHJlbD0ibm9mb2xsb3ciPm1pY2hhZWxzYXV0ZXIvY3JhbmU8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby10YXNrL3Rhc2siIHJlbD0ibm9mb2xsb3ciPmdvLXRhc2svdGFzazwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NlbnN1L3VjaGl3YSIgcmVsPSJub2ZvbGxvdyI+c2Vuc3UvdWNoaXdhPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vb3J5L2h5ZHJhIiByZWw9Im5vZm9sbG93Ij5vcnkvaHlkcmE8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zaXNhdGVjaC92Y2xpIiByZWw9Im5vZm9sbG93Ij5zaXNhdGVjaC92Y2xpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZGFpcnljYXJ0L2RhaXJ5Y2FydCIgcmVsPSJub2ZvbGxvdyI+ZGFpcnljYXJ0L2RhaXJ5Y2FydDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RjYWxpY28vZmVsaXgiIHJlbD0ibm9mb2xsb3ciPnByb2plY3RjYWxpY28vZmVsaXg8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yZXNpbi1vcy9iYWxlbmEiIHJlbD0ibm9mb2xsb3ciPnJlc2luLW9zL2JhbGVuYTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWtpdmlrL2tpdmlrIiByZWw9Im5vZm9sbG93Ij5nby1raXZpay9raXZpazwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1RlbGVmb25pY2EvZ292aWNlIiByZWw9Im5vZm9sbG93Ij5UZWxlZm9uaWNhL2dvdmljZTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvc3VwZXJnaWFudC9zdXBlcmdpYW50IiByZWw9Im5vZm9sbG93Ij5zdXBlcmdpYW50L3N1cGVyZ2lhbnQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9TZXJnZXlUc2Fsa292L2Jyb29jZSIgcmVsPSJub2ZvbGxvdyI+U2VyZ2V5VHNhbGtvdi9icm9vY2U8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zb25pYWgvZG5zbWFkZWVhc3kiIHJlbD0ibm9mb2xsb3ciPnNvbmlhaC9kbnNtYWRlZWFzeTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL29oc3UtY29tcC1iaW8vZnVubmVsIiByZWw9Im5vZm9sbG93Ij5vaHN1LWNvbXAtYmlvL2Z1bm5lbDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0VhZ2VySU8vU3RvdXQiIHJlbD0ibm9mb2xsb3ciPkVhZ2VySU8vU3RvdXQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9seW5uZHlsYW5odXJsZXkvZGVmc3ludGgtYXBpIiByZWw9Im5vZm9sbG93Ij5seW5uZHlsYW5odXJsZXkvZGVmc3ludGgtYXBpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcnVzc3Jvc3MvY2FudmFzYXNzaWdubWVudHMiIHJlbD0ibm9mb2xsb3ciPnJ1c3Nyb3NzL2NhbnZhc2Fzc2lnbm1lbnRzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcmRlZ2dlcy9jcnlwdGx5LWFwaSIgcmVsPSJub2ZvbGxvdyI+cmRlZ2dlcy9jcnlwdGx5LWFwaTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Nhc3VhbGppbS9leGVnZ3V0b3IiIHJlbD0ibm9mb2xsb3ciPmNhc3VhbGppbS9leGVnZ3V0b3I8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kaXZzaG90L2dpdGxpbmciIHJlbD0ibm9mb2xsb3ciPmRpdnNob3QvZ2l0bGluZzwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1JXSk11cnBoeS9nb3JsIiByZWw9Im5vZm9sbG93Ij5SV0pNdXJwaHkvZ29ybDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FuZHJlcm9ja2VyL2RlcGxveTQyIiByZWw9Im5vZm9sbG93Ij5hbmRyZXJvY2tlci9kZXBsb3k0MjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Vsd2luYXIvcmFtYmxlciIgcmVsPSJub2ZvbGxvdyI+ZWx3aW5hci9yYW1ibGVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdG1haWFyb3RvL2dvcGFydG1hbiIgcmVsPSJub2ZvbGxvdyI+dG1haWFyb3RvL2dvcGFydG1hbjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pmYnVzL2ltcHJlc3Npb25pc3QiIHJlbD0ibm9mb2xsb3ciPmpmYnVzL2ltcHJlc3Npb25pc3Q8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9KbWV5ZXJpbmcvemVhbG90IiByZWw9Im5vZm9sbG93Ij5KbWV5ZXJpbmcvemVhbG90PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29kZXAtbWlncmF0b3IvcmlnZ2VyLWhvc3QiIHJlbD0ibm9mb2xsb3ciPmdvZGVwLW1pZ3JhdG9yL3JpZ2dlci1ob3N0PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRHJvbmV2ZXJ5L011bHRpd2F5U3dpdGNoLUdvIiByZWw9Im5vZm9sbG93Ij5Ecm9uZXZlcnkvTXVsdGl3YXlTd2l0Y2gtR288L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aG9hcy9waWNmaXQiIHJlbD0ibm9mb2xsb3ciPnRob2FzL3BpY2ZpdDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21hbnRhc21hdGVsaXMvd2hvb3BsaXN0LXNlcnZlciIgcmVsPSJub2ZvbGxvdyI+bWFudGFzbWF0ZWxpcy93aG9vcGxpc3Qtc2VydmVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vam51dGhvbmcvaXRlbV9zZWFyY2giIHJlbD0ibm9mb2xsb3ciPmpudXRob25nL2l0ZW1fc2VhcmNoPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnVrYWxhcGFrL3Nub3dib2FyZCIgcmVsPSJub2ZvbGxvdyI+YnVrYWxhcGFrL3Nub3dib2FyZDwvYT48L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWluc3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uPC9oND4KPHByZT48Y29kZT5nbyBnZXQgZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvCgovLyB1c2UgaW4geW91ciAuZ28gY29kZQppbXBvcnQgKAogICAgJiMzNDtnaXRodWIuY29tL2ltZGFyaW8vbWVyZ28mIzM0OwopCjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS11c2FnZSI+VXNhZ2U8L2g0Pgo8cD5Zb3UgY2FuIG9ubHkgbWVyZ2Ugc2FtZS10eXBlIHN0cnVjdHMgd2l0aCBleHBvcnRlZCBmaWVsZHMgaW5pdGlhbGl6ZWQgYXMgemVybyB2YWx1ZSBvZiB0aGVpciB0eXBlIGFuZCBzYW1lLXR5cGVzIG1hcHMuIE1lcmdvIHdvbiYjMzk7dCBtZXJnZSB1bmV4cG9ydGVkIChwcml2YXRlKSBmaWVsZHMgYnV0IHdpbGwgZG8gcmVjdXJzaXZlbHkgYW55IGV4cG9ydGVkIG9uZS4gSXQgd29uJiMzOTt0IG1lcmdlIGVtcHR5IHN0cnVjdHMgdmFsdWUgYXMgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnL3JlZi9zcGVjI1RoZV96ZXJvX3ZhbHVlIiByZWw9Im5vZm9sbG93Ij50aGV5IGFyZSBub3QgY29uc2lkZXJlZCB6ZXJvIHZhbHVlczwvYT4gZWl0aGVyLiBBbHNvIG1hcHMgd2lsbCBiZSBtZXJnZWQgcmVjdXJzaXZlbHkgZXhjZXB0IGZvciBzdHJ1Y3RzIGluc2lkZSBtYXBzIChiZWNhdXNlIHRoZXkgYXJlIG5vdCBhZGRyZXNzYWJsZSB1c2luZyBHbyByZWZsZWN0aW9uKS48L3A+CjxwcmU+PGNvZGU+aWYgZXJyIDo9IG1lcmdvLk1lcmdlKCZhbXA7ZHN0LCBzcmMpOyBlcnIgIT0gbmlsIHsKICAgIC8vIC4uLgp9CjwvY29kZT48L3ByZT4KPHA+QWxzbywgeW91IGNhbiBtZXJnZSBvdmVyd3JpdGluZyB2YWx1ZXMgdXNpbmcgdGhlIHRyYW5zZm9ybWVyIDxjb2RlPldpdGhPdmVycmlkZTwvY29kZT4uPC9wPgo8cHJlPjxjb2RlPmlmIGVyciA6PSBtZXJnby5NZXJnZSgmYW1wO2RzdCwgc3JjLCBtZXJnby5XaXRoT3ZlcnJpZGUpOyBlcnIgIT0gbmlsIHsKICAgIC8vIC4uLgp9CjwvY29kZT48L3ByZT4KPHA+QWRkaXRpb25hbGx5LCB5b3UgY2FuIG1hcCBhIDxjb2RlPm1hcFtzdHJpbmddaW50ZXJmYWNle308L2NvZGU+IHRvIGEgc3RydWN0IChhbmQgb3RoZXJ3aXNlLCBmcm9tIHN0cnVjdCB0byBtYXApLCBmb2xsb3dpbmcgdGhlIHNhbWUgcmVzdHJpY3Rpb25zIGFzIGluIDxjb2RlPk1lcmdlKCk8L2NvZGU+LiBLZXlzIGFyZSBjYXBpdGFsaXplZCB0byBmaW5kIGVhY2ggY29ycmVzcG9uZGluZyBleHBvcnRlZCBmaWVsZC48L3A+CjxwcmU+PGNvZGU+aWYgZXJyIDo9IG1lcmdvLk1hcCgmYW1wO2RzdCwgc3JjTWFwKTsgZXJyICE9IG5pbCB7CiAgICAvLyAuLi4KfQo8L2NvZGU+PC9wcmU+CjxwPldhcm5pbmc6IGlmIHlvdSBtYXAgYSBzdHJ1Y3QgdG8gbWFwLCBpdCB3b24mIzM5O3QgZG8gaXQgcmVjdXJzaXZlbHkuIERvbiYjMzk7dCBleHBlY3QgTWVyZ28gdG8gbWFwIHN0cnVjdCBtZW1iZXJzIG9mIHlvdXIgc3RydWN0IGFzIDxjb2RlPm1hcFtzdHJpbmddaW50ZXJmYWNle308L2NvZGU+LiBUaGV5IHdpbGwgYmUganVzdCBhc3NpZ25lZCBhcyB2YWx1ZXMuPC9wPgo8cD5Nb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcyBpbiA8YSBocmVmPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+Z29kb2MgZG9jdW1lbnRhdGlvbjwvYT4uPC9wPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLW5pY2UtZXhhbXBsZSI+TmljZSBleGFtcGxlPC9oNT4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCgkmIzM0O2ZtdCYjMzQ7CgkmIzM0O2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyYjMzQ7CikKCnR5cGUgRm9vIHN0cnVjdCB7CglBIHN0cmluZwoJQiBpbnQ2NAp9CgpmdW5jIG1haW4oKSB7CglzcmMgOj0gRm9vewoJCUE6ICYjMzQ7b25lJiMzNDssCgkJQjogMiwKCX0KCWRlc3QgOj0gRm9vewoJCUE6ICYjMzQ7dHdvJiMzNDssCgl9CgltZXJnby5NZXJnZSgmYW1wO2Rlc3QsIHNyYykKCWZtdC5QcmludGxuKGRlc3QpCgkvLyBXaWxsIHByaW50CgkvLyB7dHdvIDJ9Cn0KPC9jb2RlPjwvcHJlPgo8cD5Ob3RlOiBpZiB0ZXN0IGFyZSBmYWlsaW5nIGR1ZSBtaXNzaW5nIHBhY2thZ2UsIHBsZWFzZSBleGVjdXRlOjwvcD4KPHByZT48Y29kZT5nbyBnZXQgZ29wa2cuaW4veWFtbC52Mgo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtdHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2g1Pgo8cD5UcmFuc2Zvcm1lcnMgYWxsb3cgdG8gbWVyZ2Ugc3BlY2lmaWMgdHlwZXMgZGlmZmVyZW50bHkgdGhhbiBpbiB0aGUgZGVmYXVsdCBiZWhhdmlvci4gSW4gb3RoZXIgd29yZHMsIG5vdyB5b3UgY2FuIGN1c3RvbWl6ZSBob3cgc29tZSB0eXBlcyBhcmUgbWVyZ2VkLiBGb3IgZXhhbXBsZSwgPGNvZGU+dGltZS5UaW1lPC9jb2RlPiBpcyBhIHN0cnVjdDsgaXQgZG9lc24mIzM5O3QgaGF2ZSB6ZXJvIHZhbHVlIGJ1dCBJc1plcm8gY2FuIHJldHVybiB0cnVlIGJlY2F1c2UgaXQgaGFzIGZpZWxkcyB3aXRoIHplcm8gdmFsdWUuIEhvdyBjYW4gd2UgbWVyZ2UgYSBub24temVybyA8Y29kZT50aW1lLlRpbWU8L2NvZGU+PzwvcD4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCgkmIzM0O2ZtdCYjMzQ7CgkmIzM0O2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyYjMzQ7CiAgICAgICAgJiMzNDtyZWZsZWN0JiMzNDsKICAgICAgICAmIzM0O3RpbWUmIzM0OwopCgp0eXBlIHRpbWVUcmFuc2ZvbWVyIHN0cnVjdCB7Cn0KCmZ1bmMgKHQgdGltZVRyYW5zZm9tZXIpIFRyYW5zZm9ybWVyKHR5cCByZWZsZWN0LlR5cGUpIGZ1bmMoZHN0LCBzcmMgcmVmbGVjdC5WYWx1ZSkgZXJyb3IgewoJaWYgdHlwID09IHJlZmxlY3QuVHlwZU9mKHRpbWUuVGltZXt9KSB7CgkJcmV0dXJuIGZ1bmMoZHN0LCBzcmMgcmVmbGVjdC5WYWx1ZSkgZXJyb3IgewoJCQlpZiBkc3QuQ2FuU2V0KCkgewoJCQkJaXNaZXJvIDo9IGRzdC5NZXRob2RCeU5hbWUoJiMzNDtJc1plcm8mIzM0OykKCQkJCXJlc3VsdCA6PSBpc1plcm8uQ2FsbChbXXJlZmxlY3QuVmFsdWV7fSkKCQkJCWlmIHJlc3VsdFswXS5Cb29sKCkgewoJCQkJCWRzdC5TZXQoc3JjKQoJCQkJfQoJCQl9CgkJCXJldHVybiBuaWwKCQl9Cgl9CglyZXR1cm4gbmlsCn0KCnR5cGUgU25hcHNob3Qgc3RydWN0IHsKCVRpbWUgdGltZS5UaW1lCgkvLyAuLi4KfQoKZnVuYyBtYWluKCkgewoJc3JjIDo9IFNuYXBzaG90e3RpbWUuTm93KCl9CglkZXN0IDo9IFNuYXBzaG90e30KCW1lcmdvLk1lcmdlKCZhbXA7ZGVzdCwgc3JjLCBtZXJnby5XaXRoVHJhbnNmb3JtZXJzKHRpbWVUcmFuc2ZvbWVye30pKQoJZm10LlByaW50bG4oZGVzdCkKCS8vIFdpbGwgcHJpbnQKCS8vIHsgMjAxOC0wMS0xMiAwMToxNTowMCArMDAwMCBVVEMgbT0rMC4wMDAwMDAwMDEgfQp9CjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1jb250YWN0LW1lIj5Db250YWN0IG1lPC9oND4KPHA+SWYgSSBjYW4gaGVscCB5b3UsIHlvdSBoYXZlIGFuIGlkZWEgb3IgeW91IGFyZSB1c2luZyBNZXJnbyBpbiB5b3VyIHByb2plY3RzLCBkb24mIzM5O3QgaGVzaXRhdGUgdG8gZHJvcCBtZSBhIGxpbmUgKG9yIGEgcHVsbCByZXF1ZXN0KTogPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbV9kYXJpbyIgcmVsPSJub2ZvbGxvdyI+QGltX2RhcmlvPC9hPjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1hYm91dCI+QWJvdXQ8L2g0Pgo8cD5Xcml0dGVuIGJ5IDxhIGhyZWY9Imh0dHA6Ly9kYXJpby5pbSIgcmVsPSJub2ZvbGxvdyI+RGFyaW8gQ2FzdGHDscOpPC9hPi48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtdG9wLWNvbnRyaWJ1dG9ycyI+VG9wIENvbnRyaWJ1dG9yczwvaDQ+CjxwPjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzAiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvMCIgYWx0PSIwIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy8xIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzEiIGFsdD0iMSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vbGlua3MvMiIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2ltYWdlcy8yIiBhbHQ9IjIiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzMiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvMyIgYWx0PSIzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy80IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzQiIGFsdD0iNCIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vbGlua3MvNSIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2ltYWdlcy81IiBhbHQ9IjUiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzYiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvNiIgYWx0PSI2Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy83IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzciIGFsdD0iNyIvPjwvYT48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtbGljZW5zZSI+TGljZW5zZTwvaDQ+CjxwPjxhIGhyZWY9Imh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2UiIHJlbD0ibm9mb2xsb3ciPkJTRCAzLUNsYXVzZTwvYT4gbGljZW5zZSwgYXMgPGEgaHJlZj0iaHR0cDovL2dvbGFuZy5vcmcvTElDRU5TRSIgcmVsPSJub2ZvbGxvdyI+R28gbGFuZ3VhZ2U8L2E+LjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9hcHAuZm9zc2EuaW8vcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnbz9yZWY9YmFkZ2VfbGFyZ2UiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2FwcC5mb3NzYS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnby5zdmc/dHlwZT1sYXJnZSIgYWx0PSJGT1NTQSBTdGF0dXMiLz48L2E+PC9wPgo8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxidXR0b24gY2xhc3M9IlVuaXRSZWFkbWUtZXhwYW5kTGluayBqcy1yZWFkbWVFeHBhbmQiCiAgICAgICAgICBkYXRhLXRlc3QtaWQ9InJlYWRtZS1leHBhbmQiIGRhdGEtZ3RtYz0icmVhZG1lIGJ1dHRvbiIKICAgICAgICAgIGFyaWEtbGFiZWw9IkV4cGFuZCBSZWFkbWUiPkV4cGFuZCDilr48L2J1dHRvbj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iVW5pdFJlYWRtZS1jb2xsYXBzZUxpbmsganMtcmVhZG1lQ29sbGFwc2UiCiAgICAgICAgICBkYXRhLXRlc3QtaWQ9InJlYWRtZS1jb2xsYXBzZSIgZGF0YS1ndG1jPSJyZWFkbWUgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iRXhwYW5kIFJlYWRtZSI+Q29sbGFwc2Ug4pa0PC9idXR0b24+CiAgICAKICA8L2Rpdj4KCiAgICAgIAogICAgICAKICAgICAgICAKICAgICAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXREb2MiPgogICAgPGgyIGNsYXNzPSJVbml0RG9jLXRpdGxlIiBpZD0ic2VjdGlvbi1kb2N1bWVudGF0aW9uIj4KICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY29kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIERvY3VtZW50YXRpb24KICAgICAgPGEgY2xhc3M9IlVuaXREb2MtaWRMaW5rIiBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIj7CtjwvYT4KICAgIDwvaDI+CiAgICAKICAKICAgIAogIAoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24ganMtZG9jdW1lbnRhdGlvbiI+CiAgICAgIAogICAgICAgIAoKPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb250ZW50IGpzLWRvY0NvbnRlbnQiPiA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlldyI+CiAgICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLW92ZXJ2aWV3IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlld0hlYWRlciI+T3ZlcnZpZXcgPGEgaHJlZj0iI3BrZy1vdmVydmlldyI+wrY8L2E+PC9oMz4KCjxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgogIDx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPgogICAgPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgogICAgICAgIDxhIGhyZWY9IiNoZHItVXNhZ2UiPlVzYWdlPC9hPgogICAgICA8L2xpPgogICAgPC91bD4KPC9kaXY+CjxwPlBhY2thZ2UgbWVyZ28gbWVyZ2VzIHNhbWUtdHlwZSBzdHJ1Y3RzIGFuZCBtYXBzIGJ5IHNldHRpbmcgZGVmYXVsdCB2YWx1ZXMgaW4gemVyby12YWx1ZSBmaWVsZHMuCjwvcD48cD5NZXJnbyB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGJ1dCB3aWxsIGRvIHJlY3Vyc2l2ZWx5IGFueSBleHBvcnRlZCBvbmUuIEl0IGFsc28gd29uJiMzOTt0IG1lcmdlIHN0cnVjdHMgaW5zaWRlIG1hcHMgKGJlY2F1c2UgdGhleSBhcmUgbm90IGFkZHJlc3NhYmxlIHVzaW5nIEdvIHJlZmxlY3Rpb24pLgo8L3A+PGg0IGlkPSJoZHItVXNhZ2UiPlVzYWdlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1Vc2FnZSI+wrY8L2E+PC9oND48cD5Gcm9tIG15IG93biB3b3JrLWluLXByb2dyZXNzIHByb2plY3Q6CjwvcD48cHJlPnR5cGUgbmV0d29ya0NvbmZpZyBzdHJ1Y3QgewoJUHJvdG9jb2wgc3RyaW5nCglBZGRyZXNzIHN0cmluZwoJU2VydmVyVHlwZSBzdHJpbmcgYGpzb246ICYjMzQ7c2VydmVyX3R5cGUmIzM0O2AKCVBvcnQgdWludDE2Cn0KCnR5cGUgRnNzbkNvbmZpZyBzdHJ1Y3QgewoJTmV0d29yayBuZXR3b3JrQ29uZmlnCn0KCnZhciBmc3NuRGVmYXVsdCA9IEZzc25Db25maWcgewoJbmV0d29ya0NvbmZpZyB7CgkJJiMzNDt0Y3AmIzM0OywKCQkmIzM0OzEyNy4wLjAuMSYjMzQ7LAoJCSYjMzQ7aHR0cCYjMzQ7LAoJCTMxNTYwLAoJfSwKfQoKLy8gSW5zaWRlIGEgZnVuY3Rpb24gWy4uLl0KCmlmIGVyciA6PSBtZXJnby5NZXJnZSgmYW1wO2NvbmZpZywgZnNzbkRlZmF1bHQpOyBlcnIgIT0gbmlsIHsKCWxvZy5GYXRhbChlcnIpCn0KCi8vIE1vcmUgY29kZSBbLi4uXQo8L3ByZT4KPC9zZWN0aW9uPjxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4Ij4KICAgIDxoMyBpZD0icGtnLWluZGV4IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEhlYWRlciI+SW5kZXggPGEgaHJlZj0iI3BrZy1pbmRleCI+wrY8L2E+PC9oMz4KCjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleExpc3QiPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhWYXJpYWJsZXMiPjxhIGhyZWY9IiNwa2ctdmFyaWFibGVzIj5WYXJpYWJsZXM8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNNYXAiPmZ1bmMgTWFwKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjTWFwV2l0aE92ZXJ3cml0ZSI+ZnVuYyBNYXBXaXRoT3ZlcndyaXRlKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjTWVyZ2UiPmZ1bmMgTWVyZ2UoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqQ29uZmlnKSkgZXJyb3I8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiPmZ1bmMgTWVyZ2VXaXRoT3ZlcndyaXRlKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjV2l0aEFwcGVuZFNsaWNlIj5mdW5jIFdpdGhBcHBlbmRTbGljZShjb25maWcgKkNvbmZpZyk8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcnJpZGUiPmZ1bmMgV2l0aE92ZXJyaWRlKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1dpdGhPdmVycmlkZUVtcHR5U2xpY2UiPmZ1bmMgV2l0aE92ZXJyaWRlRW1wdHlTbGljZShjb25maWcgKkNvbmZpZyk8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWUiPmZ1bmMgV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1dpdGhUcmFuc2Zvcm1lcnMiPmZ1bmMgV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMgVHJhbnNmb3JtZXJzKSBmdW5jKCpDb25maWcpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjV2l0aFR5cGVDaGVjayI+ZnVuYyBXaXRoVHlwZUNoZWNrKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDb25maWciPnR5cGUgQ29uZmlnPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1RyYW5zZm9ybWVycyI+dHlwZSBUcmFuc2Zvcm1lcnM8L2E+PC9saT4KPC91bD4KPC9zZWN0aW9uPjxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctY29uc3RhbnRzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb25zdGFudHNIZWFkZXIiPkNvbnN0YW50cyA8YSBocmVmPSIjcGtnLWNvbnN0YW50cyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctdmFyaWFibGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXNIZWFkZXIiPlZhcmlhYmxlcyA8YSBocmVmPSIjcGtnLXZhcmlhYmxlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdmFyaWFibGVzIj4KICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbkxpbmsiPjxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ28uZ28jTDE3Ij5WaWV3IFNvdXJjZTwvYT48L3NwYW4+CiAgICAgIDxwcmU+dmFyICgKPHNwYW4gaWQ9IkVyck5pbEFyZ3VtZW50cyIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyck5pbEFyZ3VtZW50cyAgICAgICAgICAgICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtzcmMgYW5kIGRzdCBtdXN0IG5vdCBiZSBuaWwmIzM0OykKPC9zcGFuPjxzcGFuIGlkPSJFcnJEaWZmZXJlbnRBcmd1bWVudHNUeXBlcyIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyckRpZmZlcmVudEFyZ3VtZW50c1R5cGVzICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtzcmMgYW5kIGRzdCBtdXN0IGJlIG9mIHNhbWUgdHlwZSYjMzQ7KQo8L3NwYW4+PHNwYW4gaWQ9IkVyck5vdFN1cHBvcnRlZCIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyck5vdFN1cHBvcnRlZCAgICAgICAgICAgICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtvbmx5IHN0cnVjdHMgYW5kIG1hcHMgYXJlIHN1cHBvcnRlZCYjMzQ7KQo8L3NwYW4+PHNwYW4gaWQ9IkVyckV4cGVjdGVkTWFwQXNEZXN0aW5hdGlvbiIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyckV4cGVjdGVkTWFwQXNEZXN0aW5hdGlvbiAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtkc3Qgd2FzIGV4cGVjdGVkIHRvIGJlIGEgbWFwJiMzNDspCjwvc3Bhbj48c3BhbiBpZD0iRXJyRXhwZWN0ZWRTdHJ1Y3RBc0Rlc3RpbmF0aW9uIiBkYXRhLWtpbmQ9InZhcmlhYmxlIj4JRXJyRXhwZWN0ZWRTdHJ1Y3RBc0Rlc3RpbmF0aW9uID0gPGEgaHJlZj0iL2Vycm9ycyI+ZXJyb3JzPC9hPi48YSBocmVmPSIvZXJyb3JzI05ldyI+TmV3PC9hPigmIzM0O2RzdCB3YXMgZXhwZWN0ZWQgdG8gYmUgYSBzdHJ1Y3QmIzM0OykKPC9zcGFuPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkVycm9ycyByZXBvcnRlZCBieSBNZXJnbyB3aGVuIGl0IGZpbmRzIGludmFsaWQgYXJndW1lbnRzLgo8L3A+Cjwvc2VjdGlvbj4KCiAgPGgzIHRhYmluZGV4PSItMSIgaWQ9InBrZy1mdW5jdGlvbnMiIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uc0hlYWRlciI+RnVuY3Rpb25zIDxhIGhyZWY9IiNwa2ctZnVuY3Rpb25zIj7CtjwvYT48L2gzPgoKICA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNYXAiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21hcC5nbyNMMTMyIj5NYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI01hcCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIE1hcChkc3QsIHNyYyBpbnRlcmZhY2V7fSwgb3B0cyAuLi5mdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+TWFwIHNldHMgZmllbGRzJiMzOTsgdmFsdWVzIGluIGRzdCBmcm9tIHNyYy4Kc3JjIGNhbiBiZSBhIG1hcCB3aXRoIHN0cmluZyBrZXlzIG9yIGEgc3RydWN0LiBkc3QgbXVzdCBiZSB0aGUgb3Bwb3NpdGU6CmlmIHNyYyBpcyBhIG1hcCwgZHN0IG11c3QgYmUgYSB2YWxpZCBwb2ludGVyIHRvIHN0cnVjdC4gSWYgc3JjIGlzIGEgc3RydWN0LApkc3QgbXVzdCBiZSBtYXBbc3RyaW5nXWludGVyZmFjZXt9LgpJdCB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGFuZCB3aWxsIGRvIHJlY3Vyc2l2ZWx5CmFueSBleHBvcnRlZCBmaWVsZC4KSWYgZHN0IGlzIGEgbWFwLCBrZXlzIHdpbGwgYmUgc3JjIGZpZWxkcyYjMzk7IG5hbWVzIGluIGxvd2VyIGNhbWVsIGNhc2UuCk1pc3Npbmcga2V5IGluIHNyYyB0aGF0IGRvZXNuJiMzOTt0IG1hdGNoIGEgZmllbGQgaW4gZHN0IHdpbGwgYmUgc2tpcHBlZC4gVGhpcwpkb2VzbiYjMzk7dCBhcHBseSBpZiBkc3QgaXMgYSBtYXAuClRoaXMgaXMgc2VwYXJhdGVkIG1ldGhvZCBmcm9tIE1lcmdlIGJlY2F1c2UgaXQgaXMgY2xlYW5lciBhbmQgaXQga2VlcHMgc2FuZQpzZW1hbnRpY3M6IG1lcmdpbmcgZXF1YWwgdHlwZXMsIG1hcHBpbmcgZGlmZmVyZW50IChyZXN0cmljdGVkKSB0eXBlcy4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik1hcFdpdGhPdmVyd3JpdGUiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21hcC5nbyNMMTM5Ij5NYXBXaXRoT3ZlcndyaXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNYXBXaXRoT3ZlcndyaXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTWFwV2l0aE92ZXJ3cml0ZShkc3QsIHNyYyBpbnRlcmZhY2V7fSwgb3B0cyAuLi5mdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+TWFwV2l0aE92ZXJ3cml0ZSB3aWxsIGRvIHRoZSBzYW1lIGFzIE1hcCBleGNlcHQgdGhhdCBub24tZW1wdHkgZHN0IGF0dHJpYnV0ZXMgd2lsbCBiZSBvdmVycmlkZGVuIGJ5Cm5vbi1lbXB0eSBzcmMgYXR0cmlidXRlIHZhbHVlcy4KRGVwcmVjYXRlZDogVXNlIE1hcCjigKYpIHdpdGggV2l0aE92ZXJyaWRlCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNZXJnZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI1OSI+TWVyZ2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI01lcmdlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTWVyZ2UoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqPGEgaHJlZj0iI0NvbmZpZyI+Q29uZmlnPC9hPikpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPk1lcmdlIHdpbGwgZmlsbCBhbnkgZW1wdHkgZm9yIHZhbHVlIHR5cGUgYXR0cmlidXRlcyBvbiB0aGUgZHN0IHN0cnVjdCB1c2luZyBjb3JyZXNwb25kaW5nCnNyYyBhdHRyaWJ1dGVzIGlmIHRoZXkgdGhlbXNlbHZlcyBhcmUgbm90IGVtcHR5LiBkc3QgYW5kIHNyYyBtdXN0IGJlIHZhbGlkIHNhbWUtdHlwZSBzdHJ1Y3RzCmFuZCBkc3QgbXVzdCBiZSBhIHBvaW50ZXIgdG8gc3RydWN0LgpJdCB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGFuZCB3aWxsIGRvIHJlY3Vyc2l2ZWx5IGFueSBleHBvcnRlZCBmaWVsZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik1lcmdlV2l0aE92ZXJ3cml0ZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI2NiI+TWVyZ2VXaXRoT3ZlcndyaXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBNZXJnZVdpdGhPdmVyd3JpdGUoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqPGEgaHJlZj0iI0NvbmZpZyI+Q29uZmlnPC9hPikpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPk1lcmdlV2l0aE92ZXJ3cml0ZSB3aWxsIGRvIHRoZSBzYW1lIGFzIE1lcmdlIGV4Y2VwdCB0aGF0IG5vbi1lbXB0eSBkc3QgYXR0cmlidXRlcyB3aWxsIGJlIG92ZXJyaWRkZW4gYnkKbm9uLWVtcHR5IHNyYyBhdHRyaWJ1dGUgdmFsdWVzLgpEZXByZWNhdGVkOiB1c2UgTWVyZ2Uo4oCmKSB3aXRoIFdpdGhPdmVycmlkZQo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aEFwcGVuZFNsaWNlIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjkzIj5XaXRoQXBwZW5kU2xpY2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhBcHBlbmRTbGljZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjQ8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhBcHBlbmRTbGljZShjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoQXBwZW5kU2xpY2Ugd2lsbCBtYWtlIG1lcmdlIGFwcGVuZCBzbGljZXMgaW5zdGVhZCBvZiBvdmVyd3JpdGluZyBpdC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhPdmVycmlkZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI3OCI+V2l0aE92ZXJyaWRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoT3ZlcnJpZGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoT3ZlcnJpZGUoY29uZmlnICo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aE92ZXJyaWRlIHdpbGwgbWFrZSBtZXJnZSBvdmVycmlkZSBub24tZW1wdHkgZHN0IGF0dHJpYnV0ZXMgd2l0aCBub24tZW1wdHkgc3JjIGF0dHJpYnV0ZXMgdmFsdWVzLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aE92ZXJyaWRlRW1wdHlTbGljZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI4OCI+V2l0aE92ZXJyaWRlRW1wdHlTbGljZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aE92ZXJyaWRlRW1wdHlTbGljZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjg8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnICo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aE92ZXJyaWRlRW1wdHlTbGljZSB3aWxsIG1ha2UgbWVyZ2Ugb3ZlcnJpZGUgZW1wdHkgZHN0IHNsaWNlIHdpdGggZW1wdHkgc3JjIHNsaWNlLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjgzIj5XaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjk8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZShjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWUgd2lsbCBtYWtlIG1lcmdlIG92ZXJyaWRlIG5vbiBlbXB0eSBkc3QgYXR0cmlidXRlcyB3aXRoIGVtcHR5IHNyYyBhdHRyaWJ1dGVzIHZhbHVlcy4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhUcmFuc2Zvcm1lcnMiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvI0wyNzEiPldpdGhUcmFuc2Zvcm1lcnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhUcmFuc2Zvcm1lcnMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoVHJhbnNmb3JtZXJzKHRyYW5zZm9ybWVycyA8YSBocmVmPSIjVHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2E+KSBmdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aFRyYW5zZm9ybWVycyBhZGRzIHRyYW5zZm9ybWVycyB0byBtZXJnZSwgYWxsb3dpbmcgdG8gY3VzdG9taXplIHRoZSBtZXJnaW5nIG9mIHNvbWUgdHlwZXMuCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJXaXRoVHlwZUNoZWNrIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjk4Ij5XaXRoVHlwZUNoZWNrPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoVHlwZUNoZWNrIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYwLjMuODwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgV2l0aFR5cGVDaGVjayhjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoVHlwZUNoZWNrIHdpbGwgbWFrZSBtZXJnZSBjaGVjayB0eXBlcyB3aGlsZSBvdmVyd3JpdGluZyBpdCAobXVzdCBiZSB1c2VkIHdpdGggV2l0aE92ZXJyaWRlKS4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbmZpZyIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvI0w0MCI+Q29uZmlnPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDb25maWciPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDb25maWcgc3RydWN0IHsKPHNwYW4gaWQ9IkNvbmZpZy5PdmVyd3JpdGUiIGRhdGEta2luZD0iZmllbGQiPglPdmVyd3JpdGUgICAgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KPC9zcGFuPjxzcGFuIGlkPSJDb25maWcuQXBwZW5kU2xpY2UiIGRhdGEta2luZD0iZmllbGQiPglBcHBlbmRTbGljZSAgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KPC9zcGFuPjxzcGFuIGlkPSJDb25maWcuVHlwZUNoZWNrIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVHlwZUNoZWNrICAgIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iQ29uZmlnLlRyYW5zZm9ybWVycyIgZGF0YS1raW5kPSJmaWVsZCI+CVRyYW5zZm9ybWVycyA8YSBocmVmPSIjVHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNmb3JtZXJzIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDQ5Ij5UcmFuc2Zvcm1lcnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zZm9ybWVycyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFRyYW5zZm9ybWVycyBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVHJhbnNmb3JtZXJzLlRyYW5zZm9ybWVyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVRyYW5zZm9ybWVyKDxhIGhyZWY9Ii9yZWZsZWN0Ij5yZWZsZWN0PC9hPi48YSBocmVmPSIvcmVmbGVjdCNUeXBlIj5UeXBlPC9hPikgZnVuYyhkc3QsIHNyYyA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVmFsdWUiPlZhbHVlPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICAgIDwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgoKCgoKCiAgICAgIAogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAgIAogICAgICAKICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdEZpbGVzIGpzLXVuaXRGaWxlcyI+CiAgICA8aDIgY2xhc3M9IlVuaXRGaWxlcy10aXRsZSIgaWQ9InNlY3Rpb24tc291cmNlZmlsZXMiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9pbnNlcnRfZHJpdmVfZmlsZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby90cmVlL3YwLjMuOSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPlZpZXcgYWxsPC9hPgogICAgPC9kaXY+CiAgICA8ZGl2PgogICAgICA8dWwgY2xhc3M9IlVuaXRGaWxlcy1maWxlTGlzdCI+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9kb2MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZG9jLmdvIj5kb2MuZ288L2E+CiAgICAgICAgICA8L2xpPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWFwLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im1hcC5nbyI+bWFwLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im1lcmdlLmdvIj5tZXJnZS5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnby5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJtZXJnby5nbyI+bWVyZ28uZ288L2E+CiAgICAgICAgICA8L2xpPjwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgICAgIAogICAgICAKICAgIDwvZGl2PgogIDwvZGl2Pgo8L2FydGljbGU+CiAgICA8Zm9vdGVyIGNsYXNzPSJnby1NYWluLWZvb3RlciI+PC9mb290ZXI+CiAgPC9tYWluPgoKICAgIAogIDxmb290ZXIgY2xhc3M9ImdvLUZvb3RlciI+CiAgICAKICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rcyI+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMiIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBXaHkgR28KICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI3VzZS1jYXNlcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFVzZSBDYXNlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjY2FzZS1zdHVkaWVzIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ2FzZSBTdHVkaWVzCiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbGVhcm4uZ28uZGV2LyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEdldCBTdGFydGVkCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb2xhbmcub3JnIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgUGxheWdyb3VuZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3RvdXIuZ29sYW5nLm9yZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFRvdXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2dvP3RhYj1OZXdlc3QiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBTdGFjayBPdmVyZmxvdwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9oZWxwIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgSGVscAogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYiIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBQYWNrYWdlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSIvc3RkIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU3RhbmRhcmQgTGlicmFyeQogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9wcm9qZWN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQWJvdXQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZGwvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkRvd25sb2FkPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Jsb2ciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+QmxvZzwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nL2dvL2lzc3VlcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIElzc3VlIFRyYWNrZXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jL2RldmVsL3JlbGVhc2UuaHRtbCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFJlbGVhc2UgTm90ZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9ibG9nLmdvbGFuZy5vcmcvZ28tYnJhbmQiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBCcmFuZCBHdWlkZWxpbmVzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2NvbmR1Y3QiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBDb2RlIG9mIENvbmR1Y3QKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ29ubmVjdAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy50d2l0dGVyLmNvbS9nb2xhbmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBUd2l0dGVyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+R2l0SHViPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU2xhY2sKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9yZWRkaXQuY29tL3IvZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgci9nb2xhbmcKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBNZWV0dXAKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmd3ZWVrbHkuY29tLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEdvbGFuZyBXZWVrbHkKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItYm90dG9tIj4KICAgICAgPGltZyBjbGFzcz0iZ28tRm9vdGVyLWdvcGhlciIgIHdpZHRoPSIxNDMxIiBoZWlnaHQ9IjkwMSIKICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvZ29waGVyL3BpbG90LWJ1c3QtMTQzMXg5MDEuc3ZnIiBhbHQ9IkdvcGhlciBpbiBmbGlnaHQgZ29nZ2xlcyI+CiAgICAgIDx1bCBjbGFzcz0iZ28tRm9vdGVyLWxpc3RSb3ciPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2NvcHlyaWdodCIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+Q29weXJpZ2h0PC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvdG9zIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj5UZXJtcyBvZiBTZXJ2aWNlPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5nb29nbGUuY29tL2ludGwvZW4vcG9saWNpZXMvcHJpdmFjeS8iIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiCiAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPgogICAgICAgICAgICBQcml2YWN5IFBvbGljeQogICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvcy9wa2dzaXRlLWZlZWRiYWNrIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIKICAgICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgICAgUmVwb3J0IGFuIElzc3VlCiAgICAgICAgICA8L2E+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9ImdvLUZvb3Rlci1saXN0SXRlbSI+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS10ZXh0IGdvLUZvb3Rlci10b2dnbGVUaGVtZSBqcy10b2dnbGVUaGVtZSIgYXJpYS1sYWJlbD0iVG9nZ2xlIHRoZW1lIj4KICAgICAgICAgICAgPGltZyBkYXRhLXZhbHVlPSJhdXRvIiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYnJpZ2h0bmVzc182X2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iU3lzdGVtIHRoZW1lIj4KICAgICAgICAgICAgPGltZyBkYXRhLXZhbHVlPSJkYXJrIiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYnJpZ2h0bmVzc18yX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iRGFyayB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0ibGlnaHQiIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9saWdodF9tb2RlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iTGlnaHQgdGhlbWUiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS10ZXh0IGdvLUZvb3Rlci1rZXlib2FyZCBqcy1vcGVuU2hvcnRjdXRzIiBhcmlhLWxhYmVsPSJPcGVuIHNob3JjdXRzIG1vZGFsIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24va2V5Ym9hcmRfZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICAgPGEgY2xhc3M9ImdvLUZvb3Rlci1nb29nbGVMb2dvIiBocmVmPSJodHRwczovL2dvb2dsZS5jb20iIHRhcmdldD0iX2JsYW5rInJlbD0ibm9vcGVuZXIiCiAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICA8aW1nIGNsYXNzPSJnby1Gb290ZXItZ29vZ2xlTG9nb0ltZyIgaGVpZ2h0PSIyNCIgd2lkdGg9IjcyIgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vZ29vZ2xlLXdoaXRlLnN2ZyIgYWx0PSJHb29nbGUgbG9nbyI+CiAgICAgIDwvYT4KICAgIDwvZGl2PgogIDwvZm9vdGVyPgoKICAgIAogIDxkaWFsb2cgaWQ9Imp1bXAtdG8tbW9kYWwiIGNsYXNzPSJKdW1wRGlhbG9nIGdvLU1vZGFsIGdvLU1vZGFsLS1tZCBqcy1tb2RhbCI+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyIgZGF0YS1nbXRjPSJqdW1wIHRvIGZvcm0iIGFyaWEtbGFiZWw9Ikp1bXAgdG8gSWRlbnRpZmllciI+CiAgICAgIDxkaXYgY2xhc3M9IkRpYWxvZy10aXRsZSBnby1Nb2RhbC1oZWFkZXIiPgogICAgICAgIDxoMj5KdW1wIHRvPC9oMj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIgogICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgZGF0YS1tb2RhbC1jbG9zZQogICAgICAgICAgZGF0YS1ndG1jPSJtb2RhbCBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jbG9zZV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWZpbHRlciI+CiAgICAgICAgPGlucHV0IGNsYXNzPSJKdW1wRGlhbG9nLWlucHV0IGdvLUlucHV0IiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0idGV4dCI+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWJvZHkgZ28tTW9kYWwtYm9keSI+CiAgICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1saXN0Ij48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLU1vZGFsLWFjdGlvbnMiPgogICAgICAgIDxidXR0b24gY2xhc3M9ImdvLUJ1dHRvbiIgZGF0YS10ZXN0LWlkPSJjbG9zZS1kaWFsb2ciPkNsb3NlPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGlhbG9nPgoKICA8ZGlhbG9nIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cgZ28tTW9kYWwgZ28tTW9kYWwtLXNtIGpzLW1vZGFsIj4KICAgIDxmb3JtIG1ldGhvZD0iZGlhbG9nIj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtaGVhZGVyIj4KICAgICAgICA8aDI+S2V5Ym9hcmQgc2hvcnRjdXRzPC9oMj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIgogICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgZGF0YS1tb2RhbC1jbG9zZQogICAgICAgICAgZGF0YS1ndG1jPSJtb2RhbCBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jbG9zZV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1ib2R5Ij4KICAgICAgICA8dGFibGU+CiAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Pzwvc3Ryb25nPjwvdGQ+PHRkPiA6IFRoaXMgbWVudTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Lzwvc3Ryb25nPjwvdGQ+PHRkPiA6IFNlYXJjaCBzaXRlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPjx0ZCBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nLWtleSI+CiAgICAgICAgICAgICAgPHN0cm9uZz5mPC9zdHJvbmc+IG9yIDxzdHJvbmc+Rjwvc3Ryb25nPjwvdGQ+PHRkPiA6IEp1bXAgdG88L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgPHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48c3Ryb25nPnk8L3N0cm9uZz4gb3IgPHN0cm9uZz5ZPC9zdHJvbmc+PC90ZD4KICAgICAgICAgICAgICA8dGQ+IDogQ2Fub25pY2FsIFVSTDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L3Rib2R5PgogICAgICAgIDwvdGFibGU+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24iIGRhdGEtdGVzdC1pZD0iY2xvc2UtZGlhbG9nIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KCiAgICAKICAgICAgPHNjcmlwdD4KICAgICAgICAvLyB0aGlzIHdpbGwgdGhyb3cgaWYgdGhlIHF1ZXJ5U2VsZWN0b3IgY2Fu4oCZdCBmaW5kIHRoZSBlbGVtZW50CiAgICAgICAgY29uc3QgZ3RtSWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtZ3RtSUQnKS5kYXRhc2V0Lmd0bWlkOwogICAgICAgIGlmICghZ3RtSWQpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcignR29vZ2xlIFRhZyBNYW5hZ2VyIElEIG5vdCBmb3VuZCcpOwogICAgICAgIH0KICAgICAgICBsb2FkU2NyaXB0KGBodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JHtndG1JZH1gKTsKICAgICAgPC9zY3JpcHQ+CiAgICAgIDxub3NjcmlwdD4KICAgICAgICA8aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tVzhNVlFYRyIKICAgICAgICAgICAgICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPgogICAgICAgIDwvaWZyYW1lPgogICAgICA8L25vc2NyaXB0PgogICAgCiAgICAKICAKICA8ZGl2IGNsYXNzPSJqcy1jYW5vbmljYWxVUkxQYXRoIiBkYXRhLWNhbm9uaWNhbC11cmwtcGF0aD0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjBAdjAuMy45IiBoaWRkZW4+PC9kaXY+CiAgPHNjcmlwdD4KICAgIGxvYWRTY3JpcHQoJy9zdGF0aWMvZnJvbnRlbmQvdW5pdC9tYWluL21haW4uanMnKQogIDwvc2NyaXB0PgoKICA8c2NyaXB0PgogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9mcm9udGVuZC91bml0L3VuaXQuanMnKQogIDwvc2NyaXB0PgoKICA8L2JvZHk+CjwvaHRtbD4=
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.4.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.4","Time":"2018-04-04T21:29:33Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.7.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.7","Time":"2019-01-23T23:28:27Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.5.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.5","Time":"2018-06-08T14:01:56Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.3.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v0.3.3","Time":"2018-04-02T13:55:43Z"}'
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://pkg.go.dev/gopkg.in/imdario/mergo.v0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iIGRhdGEtbGF5b3V0PSJyZXNwb25zaXZlIj4KICA8aGVhZD4KICAgIAogICAgPHNjcmlwdD4KICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgd2luZG93Ll9fZXJyPWZ1bmN0aW9uIGYoZSl7Zi5wPWYucHx8W107Zi5wLnB1c2goZSl9KTsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgKGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnN0IHRoZW1lID0gZG9jdW1lbnQuY29va2llLm1hdGNoKC9wcmVmZXJzLWNvbG9yLXNjaGVtZT0obGlnaHR8ZGFya3xhdXRvKS8pPy5bMV0KICAgICAgICBpZiAodGhlbWUpIHsKICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2h0bWwnKS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCB0aGVtZSk7CiAgICAgICAgfQogICAgICB9KCkpCiAgICA8L3NjcmlwdD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8bWV0YSBuYW1lPSJEZXNjcmlwdGlvbiIgY29udGVudD0iUGFja2FnZSBtZXJnbyBtZXJnZXMgc2FtZS10eXBlIHN0cnVjdHMgYW5kIG1hcHMgYnkgc2V0dGluZyBkZWZhdWx0IHZhbHVlcyBpbiB6ZXJvLXZhbHVlIGZpZWxkcy4iPgogICAgCiAgICA8bWV0YSBjbGFzcz0ianMtZ3RtSUQiIGRhdGEtZ3RtaWQ9IkdUTS1XOE1WUVhHIj4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iL3N0YXRpYy9zaGFyZWQvaWNvbi9mYXZpY29uLmljbyI+CiAgICAKICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2L2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAiPgoKICAgIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvZnJvbnRlbmQubWluLmNzcz92ZXJzaW9uPXByb2QtZnJvbnRlbmQtMDAwNDItbWFiIiByZWw9InN0eWxlc2hlZXQiPgogICAgCiAgPHRpdGxlPm1lcmdvIHBhY2thZ2UgLSBnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIC0gR28gUGFja2FnZXM8L3RpdGxlPgoKICAgIAogIDxsaW5rIGhyZWY9Ii9zdGF0aWMvZnJvbnRlbmQvdW5pdC91bml0Lm1pbi5jc3M/dmVyc2lvbj1wcm9kLWZyb250ZW5kLTAwMDQyLW1hYiIgcmVsPSJzdHlsZXNoZWV0Ij4KICAKICA8bGluayBocmVmPSIvc3RhdGljL2Zyb250ZW5kL3VuaXQvbWFpbi9tYWluLm1pbi5jc3M/dmVyc2lvbj1wcm9kLWZyb250ZW5kLTAwMDQyLW1hYiIgcmVsPSJzdHlsZXNoZWV0Ij4KCgogIDwvaGVhZD4KICA8Ym9keT4KICAgIAogICAgPHNjcmlwdD4KICAgICAgZnVuY3Rpb24gbG9hZFNjcmlwdChzcmMsIG1vZCA9IHRydWUpIHsKICAgICAgICBsZXQgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICAgIHMuc3JjID0gc3JjOwogICAgICAgIGlmIChtb2QpIHsKICAgICAgICAgIHMudHlwZSA9ICdtb2R1bGUnOwogICAgICAgICAgcy5hc3luYyA9IHRydWU7CiAgICAgICAgICBzLmRlZmVyID0gdHJ1ZQogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHMpOwogICAgICB9CiAgICAgIGxvYWRTY3JpcHQoIi90aGlyZF9wYXJ0eS9kaWFsb2ctcG9seWZpbGwvZGlhbG9nLXBvbHlmaWxsLmpzIiwgZmFsc2UpCiAgICAgIGxvYWRTY3JpcHQoIi9zdGF0aWMvZnJvbnRlbmQvZnJvbnRlbmQuanMiKTsKICAgIDwvc2NyaXB0PgogICAgCiAgPGhlYWRlciBjbGFzcz0iZ28tSGVhZGVyIGdvLUhlYWRlci0tZnVsbCBqcy1zaXRlSGVhZGVyIj4KICAgIDxkaXYgY2xhc3M9ImdvLUhlYWRlci1pbm5lciBnby1IZWFkZXItaW5uZXItLWRhcmsiPgogICAgICA8bmF2IGNsYXNzPSJnby1IZWFkZXItbmF2Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi8iIGNsYXNzPSJqcy1oZWFkZXJMb2dvIiBkYXRhLWd0bWM9Im5hdiBsaW5rIgogICAgICAgICAgICBkYXRhLXRlc3QtaWQ9ImdvLWhlYWRlci1sb2dvLWxpbmsiPgogICAgICAgICAgPGltZyBjbGFzcz0iZ28tSGVhZGVyLWxvZ28iIHNyYz0iL3N0YXRpYy9zaGFyZWQvbG9nby9nby13aGl0ZS5zdmciIGFsdD0iR28iPgogICAgICAgIDwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJnby1IZWFkZXItcmlnaHRDb250ZW50Ij4KICAgICAgICAgIAo8ZGl2IGNsYXNzPSJnby1TZWFyY2hGb3JtIGpzLXNlYXJjaEZvcm0iPgogIDxmb3JtCiAgICBjbGFzcz0iZ28tSW5wdXRHcm91cCBnby1TaG9ydGN1dEtleSBnby1TZWFyY2hGb3JtLWZvcm0iCiAgICBhY3Rpb249Ii9zZWFyY2giCiAgICBkYXRhLXNob3J0Y3V0PSIvIgogICAgZGF0YS1zaG9ydGN1dC1hbHQ9InNlYXJjaCIKICAgIGRhdGEtZ3RtYz0ic2VhcmNoIGZvcm0iCiAgICBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIKICAgIHJvbGU9InNlYXJjaCIKICA+CiAgICA8aW5wdXQgbmFtZT0icSIgY2xhc3M9ImdvLUlucHV0IGpzLXNlYXJjaEZvY3VzIiBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIgdHlwZT0ic2VhcmNoIgogICAgICAgIGF1dG9jYXBpdGFsaXplPSJvZmYiIGF1dG9jb21wbGV0ZT0ib2ZmIiBhdXRvY29ycmVjdD0ib2ZmIiBzcGVsbGNoZWNrPSJmYWxzZSIKICAgICAgICBwbGFjZWhvbGRlcj0iU2VhcmNoIHBhY2thZ2VzIG9yIHN5bWJvbHMiCiAgICAgICAgdmFsdWU9IiIgLz4KICAgIDxpbnB1dCBuYW1lPSJtIiB2YWx1ZT0iIiBoaWRkZW4+CiAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS1pbnZlcnRlZCIgYXJpYS1sYWJlbD0iU3VibWl0IHNlYXJjaCI+CiAgICAgIDxpbWcKICAgICAgICBjbGFzcz0iZ28tSWNvbiIKICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgIHdpZHRoPSIyNCIKICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vc2VhcmNoX2dtX2dyZXlfMjRkcC5zdmciCiAgICAgICAgYWx0PSIiCiAgICAgIC8+CiAgICA8L2J1dHRvbj4KICA8L2Zvcm0+CiAgPGJ1dHRvbiBjbGFzcz0iZ28tU2VhcmNoRm9ybS1leHBhbmRTZWFyY2gganMtZXhwYW5kU2VhcmNoIiBkYXRhLWd0bWM9Im5hdiBidXR0b24iCiAgICAgIGFyaWEtbGFiZWw9Ik9wZW4gc2VhcmNoIiBkYXRhLXRlc3QtaWQ9ImV4cGFuZC1zZWFyY2giPgogICAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IgogICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9zZWFyY2hfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogIDwvYnV0dG9uPgo8L2Rpdj4KCiAgICAgICAgICA8dWwgY2xhc3M9ImdvLUhlYWRlci1tZW51Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucy8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPldoeSBHbzwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2xlYXJuLyIgZGF0YS1ndG1jPSJuYXYgbGluayI+R2V0IFN0YXJ0ZWQ8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0iZ28tSGVhZGVyLW1lbnVJdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvZG9jLyIgZGF0YS1ndG1jPSJuYXYgbGluayI+RG9jczwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJnby1IZWFkZXItbWVudUl0ZW0gZ28tSGVhZGVyLW1lbnVJdGVtLS1hY3RpdmUiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPlBhY2thZ2VzPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5LmdvbGFuZy5vcmcvIiBkYXRhLWd0bWM9Im5hdiBsaW5rIj5QbGF5PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9ImdvLUhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYmxvZy8iIGRhdGEtZ3RtYz0ibmF2IGxpbmsiPkJsb2c8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iZ28tSGVhZGVyLW5hdk9wZW4ganMtaGVhZGVyTWVudUJ1dHRvbiBnby1IZWFkZXItbmF2T3Blbi0td2hpdGUiIGRhdGEtZ3RtYz0ibmF2IGJ1dHRvbiIgYXJpYS1sYWJlbD0iT3BlbiBuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICA8L25hdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgogIDxhc2lkZSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlciBqcy1oZWFkZXIiPgogICAgPG5hdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1oZWFkZXIiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgdGFiaW5kZXg9Ii0xIj4KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLU5hdmlnYXRpb25EcmF3ZXItbG9nbyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLWJsdWUuc3ZnIiBhbHQ9IkdvLiI+CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPHVsIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3QiPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zLyIgdGFiaW5kZXg9Ii0xIj5XaHkgR288L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvbGVhcm4vIiB0YWJpbmRleD0iLTEiPkdldCBTdGFydGVkPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvIiB0YWJpbmRleD0iLTEiPkRvY3M8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIGdvLU5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0tLWFjdGl2ZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iIHRhYmluZGV4PSItMSI+UGFja2FnZXM8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbGF5LmdvbGFuZy5vcmcvIiB0YWJpbmRleD0iLTEiPlBsYXk8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJnby1OYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvYmxvZyIgdGFiaW5kZXg9Ii0xIj5CbG9nPC9hPgogICAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgIDwvbmF2PgogIDwvYXNpZGU+CiAgPGRpdiBjbGFzcz0iZ28tTmF2aWdhdGlvbkRyYXdlci1zY3JpbSBqcy1zY3JpbSIgcm9sZT0icHJlc2VudGF0aW9uIj48L2Rpdj4KCiAgICAKICA8bWFpbiBjbGFzcz0iZ28tTWFpbiI+CiAgICA8ZGl2IGNsYXNzPSJnby1NYWluLWJhbm5lciIgcm9sZT0iYWxlcnQiPjwvZGl2PgogICAgPGhlYWRlciBjbGFzcz0iZ28tTWFpbi1oZWFkZXIganMtbWFpbkhlYWRlciI+CiAgCiAgCiAgPG5hdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJCcmVhZGNydW1iIGdvLUJyZWFkY3J1bWIiIGFyaWEtbGFiZWw9IkJyZWFkY3J1bWIiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iIj4KICAgIDxvbD4KICAgICAgCiAgICAgICAgCiAgICAgICAgICA8bGkgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyIgZGF0YS1ndG1jPSJicmVhZGNydW1iIGxpbmsiPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MEB2MC4zLjkiIGRhdGEtZ3RtYz0iYnJlYWRjcnVtYiBsaW5rIiBhcmlhLWN1cnJlbnQ9ImxvY2F0aW9uIgogICAgICAgICAgICAgIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iQ3VycmVudCI+CiAgICAgICAgICAgIGdvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAKICAgICAgICAgIDwvYT4KICAgICAgICAgIAogICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgY2xhc3M9ImdvLUJ1dHRvbiBnby1CdXR0b24tLWlubGluZSBnby1DbGlwYm9hcmQganMtY2xpcGJvYXJkIgogICAgICAgICAgICAgIHRpdGxlPSJDb3B5IHBhdGggdG8gY2xpcGJvYXJkLiYjMTA7JiMxMDtnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIgogICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICAgICAgZGF0YS10by1jb3B5PSJnb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwIgogICAgICAgICAgICAgIGRhdGEtZ3RtYz0iYnJlYWRjcnVtYnMgYnV0dG9uIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgY2xhc3M9ImdvLUljb24gZ28tSWNvbi0tYWNjZW50ZWQiCiAgICAgICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICAgICAgd2lkdGg9IjI0IgogICAgICAgICAgICAgICAgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2NvbnRlbnRfY29weV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIAogICAgICAgIAogICAgICA8L2xpPgogICAgPC9vbD4KICA8L25hdj4KCiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJDb250ZW50Ij4KICAgIAogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyVGl0bGUganMtc3RpY2t5SGVhZGVyIj4KICAgIDxhIGNsYXNzPSJnby1NYWluLWhlYWRlckxvZ28iIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgZGF0YS1ndG1jPSJoZWFkZXIgbGluayIgYXJpYS1sYWJlbD0iTGluayB0byBHbyBIb21lcGFnZSI+CiAgICAgIDxpbWcgaGVpZ2h0PSI3OCIgd2lkdGg9IjIwNyIgc3JjPSIvc3RhdGljL3NoYXJlZC9sb2dvL2dvLWJsdWUuc3ZnIiBhbHQ9IkdvIj4KICAgIDwvYT4KICAgIDxoMSBjbGFzcz0iVW5pdEhlYWRlci10aXRsZUhlYWRpbmciIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci10aXRsZSI+bWVyZ288L2gxPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5wYWNrYWdlPC9zcGFuPgogICAgCiAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWludmVydGVkIj5tb2R1bGU8L3NwYW4+CiAgICAKICAgIAogICAgICAKICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIGdvLUNsaXBib2FyZCBqcy1jbGlwYm9hcmQiCiAgICAgICAgICB0aXRsZT0iQ29weSBwYXRoIHRvIGNsaXBib2FyZC4mIzEwOyYjMTA7Z29wa2cuaW4vaW1kYXJpby9tZXJnby52MCIKICAgICAgICAgIGFyaWEtbGFiZWw9IkNvcHkgUGF0aCB0byBDbGlwYm9hcmQiCiAgICAgICAgICBkYXRhLXRvLWNvcHk9ImdvcGtnLmluL2ltZGFyaW8vbWVyZ28udjAiCiAgICAgICAgICBkYXRhLWd0bWM9InRpdGxlIGJ1dHRvbiIKICAgICAgICAgIHRhYmluZGV4PSItMSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jb250ZW50X2NvcHlfZ21fZ3JleV8yNGRwLnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAvPgogICAgICAgIDwvYnV0dG9uPgogICAgICAKICAgIAogIDwvZGl2PgoKICAgIAogIDxkaXYgY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlscyI+CiAgICAKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLXZlcnNpb24iPgogICAgPGEgaHJlZj0iP3RhYj12ZXJzaW9ucyIgYXJpYS1sYWJlbD0iR28gdG8gVmVyc2lvbnMiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPjxzcGFuIGNsYXNzPSJnby10ZXh0U3VidGxlIj5WZXJzaW9uOiA8L3NwYW4+djAuMy45PC9hPgogICAgCiAgICA8c3BhbiBjbGFzcz0iRGV0YWlsc0hlYWRlci1iYWRnZS0tbGF0ZXN0IiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbWlub3JWZXJzaW9uQmFubmVyIj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLUNoaXAgRGV0YWlsc0hlYWRlci1zcGFuLS1sYXRlc3QiPkxhdGVzdDwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLUNoaXAgRGV0YWlsc0hlYWRlci1zcGFuLS1ub3RBdExhdGVzdCI+CiAgICAgICAgTGF0ZXN0CiAgICAgICAgCiAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgIDxzdW1tYXJ5PgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9hbGVydF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9Ildhcm5pbmciPgogICAgPC9zdW1tYXJ5PgogICAgPHA+VGhpcyBwYWNrYWdlIGlzIG5vdCBpbiB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgaXRzIG1vZHVsZS48L3A+CiAgPC9kZXRhaWxzPgoKICAgICAgPC9zcGFuPgogICAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MCIgYXJpYS1sYWJlbD0iR28gdG8gTGF0ZXN0IFZlcnNpb24iIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnby1DaGlwIGdvLUNoaXAtLWFsZXJ0IERldGFpbHNIZWFkZXItc3Bhbi0tZ29Ub0xhdGVzdCI+R28gdG8gbGF0ZXN0PC9zcGFuPgogICAgICA8L2E+CiAgICA8L3NwYW4+CiAgPC9zcGFuPgoKICAgICAgCiAgPHNwYW4gY2xhc3M9ImdvLU1haW4taGVhZGVyRGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWNvbW1pdFRpbWUiPgogICAgUHVibGlzaGVkOiBNYXIgMjQsIDIwMjAKICA8L3NwYW4+CgogICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZXMiPgogICAgTGljZW5zZTogPGEgaHJlZj0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWxpY2Vuc2VzIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZSIKICAgICAgICAgICAgYXJpYS1sYWJlbD0iR28gdG8gTGljZW5zZXMiIGRhdGEtZ3RtYz0iaGVhZGVyIGxpbmsiPkJTRC0zLUNsYXVzZTwvYT4KICAgICAgCiAgICAKICA8L3NwYW4+CgogICAgICAKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0cyI+CiAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MD90YWI9aW1wb3J0cyIgYXJpYS1sYWJlbD0iR28gdG8gSW1wb3J0cyIKICAgICAgICBkYXRhLWd0bWM9ImhlYWRlciBsaW5rIj4KICAgICAgPHNwYW4gY2xhc3M9ImdvLXRleHRTdWJ0bGUiPkltcG9ydHM6IDwvc3Bhbj42CiAgICA8L2E+CiAgPC9zcGFuPgoKICAgICAgICAKICA8c3BhbiBjbGFzcz0iZ28tTWFpbi1oZWFkZXJEZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItaW1wb3J0ZWRieSI+CiAgICA8YSBocmVmPSIvZ29wa2cuaW4vaW1kYXJpby9tZXJnby52MD90YWI9aW1wb3J0ZWRieSIgYXJpYS1sYWJlbD0iR28gdG8gSW1wb3J0ZWQgQnkiCiAgICAgICAgZGF0YS1ndG1jPSJoZWFkZXIgbGluayI+CiAgICAgICA8c3BhbiBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+SW1wb3J0ZWQgYnk6IDwvc3Bhbj4xNQogICAgPC9hPgogIDwvc3Bhbj4KCiAgICAgIAogICAgCiAgPC9kaXY+CiAgCiAgPGRpdiBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd0NvbnRhaW5lciI+CiAgICA8c3ZnIGNsYXNzPSJVbml0SGVhZGVyLW92ZXJmbG93SW1hZ2UiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjQiPgogICAgICA8cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBmaWxsPSJub25lIi8+CiAgICAgIDxwYXRoIGQ9Ik0xMiA4YzEuMSAwIDItLjkgMi0ycy0uOS0yLTItMi0yIC45LTIgMiAuOSAyIDIgMnptMCAyYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptMCA2Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnoiLz4KICAgIDwvc3ZnPgogICAgPHNlbGVjdCBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd1NlbGVjdCBqcy1zZWxlY3ROYXYiIHRhYmluZGV4PSItMSI+CiAgICAgIDxvcHRpb24gdmFsdWU9Ii8iPk1haW48L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPXZlcnNpb25zIj4KICAgICAgICBWZXJzaW9ucwogICAgICA8L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWxpY2Vuc2VzIj4KICAgICAgICBMaWNlbnNlcwogICAgICA8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjA/dGFiPWltcG9ydHMiPgogICAgICAgICAgSW1wb3J0cwogICAgICAgIDwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9Ii9nb3BrZy5pbi9pbWRhcmlvL21lcmdvLnYwP3RhYj1pbXBvcnRlZGJ5Ij4KICAgICAgICAgIEltcG9ydGVkIEJ5CiAgICAgICAgPC9vcHRpb24+CiAgICAgIAogICAgPC9zZWxlY3Q+CiAgPC9kaXY+CgoKICA8L2Rpdj4KCjwvaGVhZGVyPgogICAgPGFzaWRlIGNsYXNzPSJnby1NYWluLWFzaWRlICBqcy1tYWluQXNpZGUiPgogIAogIDxkaXYgY2xhc3M9IlVuaXRNZXRhIj4KICAgIDxoMiBjbGFzcz0iZ28tdGV4dExhYmVsIj5EZXRhaWxzPC9oMj4KICAgIAogIDx1bCBjbGFzcz0iVW5pdE1ldGEtZGV0YWlscyI+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2FuY2VsX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0idW5jaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVmFsaWQgZ28ubW9kIGZpbGUKICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD4KICAgICAgICAgIFRoZSBHbyBtb2R1bGUgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkIGluIEdvIDEuMTEgYW5kIGlzIHRoZSBvZmZpY2lhbCBkZXBlbmRlbmN5IG1hbmFnZW1lbnQKICAgICAgICAgIHNvbHV0aW9uIGZvciBHby4KICAgICAgICA8L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGk+CiAgICAgIDxkZXRhaWxzIGNsYXNzPSJnby1Ub29sdGlwIGpzLXRvb2x0aXAiIGRhdGEtZ3RtYz0idG9vbHRpcCI+CiAgICAgICAgPHN1bW1hcnkgY2xhc3M9ImdvLXRleHRTdWJ0bGUiPgogICAgICAgICAgCiAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1hY2NlbnRlZCJzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY2hlY2tfY2lyY2xlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vaGVscF9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgICAgICA8L3N1bW1hcnk+CiAgICAgICAgPHA+CiAgICAgICAgICBSZWRpc3RyaWJ1dGFibGUgbGljZW5zZXMgcGxhY2UgbWluaW1hbCByZXN0cmljdGlvbnMgb24gaG93IHNvZnR3YXJlIGNhbiBiZSB1c2VkLAogICAgICAgICAgbW9kaWZpZWQsIGFuZCByZWRpc3RyaWJ1dGVkLgogICAgICAgIDwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWFjY2VudGVkInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaGVja19jaXJjbGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJjaGVja2VkImhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CgogICAgICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgICAgIDxpbWcgY2xhc3M9ImdvLUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9oZWxwX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgICAgIDwvc3VtbWFyeT4KICAgICAgICA8cD5Nb2R1bGVzIHdpdGggdGFnZ2VkIHZlcnNpb25zIGdpdmUgaW1wb3J0ZXJzIG1vcmUgcHJlZGljdGFibGUgYnVpbGRzLjwvcD4KICAgICAgPC9kZXRhaWxzPgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRldGFpbHMgY2xhc3M9ImdvLVRvb2x0aXAganMtdG9vbHRpcCIgZGF0YS1ndG1jPSJ0b29sdGlwIj4KICAgICAgICA8c3VtbWFyeSBjbGFzcz0iZ28tdGV4dFN1YnRsZSI+CiAgICAgICAgICAKICA8aW1nIGNsYXNzPSJnby1JY29uInNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jYW5jZWxfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSJ1bmNoZWNrZWQiaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KCiAgICAgICAgICBTdGFibGUgdmVyc2lvbgogICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgc3JjPSIvc3RhdGljL3NoYXJlZC9pY29uL2hlbHBfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICAgICAgPC9zdW1tYXJ5PgogICAgICAgIDxwPldoZW4gYSBwcm9qZWN0IHJlYWNoZXMgbWFqb3IgdmVyc2lvbiB2MSBpdCBpcyBjb25zaWRlcmVkIHN0YWJsZS48L3A+CiAgICAgIDwvZGV0YWlscz4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IlVuaXRNZXRhLWRldGFpbHNMZWFybiI+CiAgICAgIDxhIGhyZWY9Ii9hYm91dCNiZXN0LXByYWN0aWNlcy1oMiIgZGF0YS1ndG1jPSJtZXRhIGxpbmsiPkxlYXJuIG1vcmU8L2E+CiAgICA8L2xpPgogIDwvdWw+CgogICAgPGgyIGNsYXNzPSJnby10ZXh0TGFiZWwiPlJlcG9zaXRvcnk8L2gyPgogICAgPGRpdiBjbGFzcz0iVW5pdE1ldGEtcmVwbyI+CiAgICAgIAogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgIGdpdGh1Yi5jb20vaW1kYXJpby9tZXJnbwogICAgICAgIDwvYT4KICAgICAgCiAgICA8L2Rpdj4KICAgIAogICAgICA8aDIgY2xhc3M9ImdvLXRleHRMYWJlbCI+TGlua3M8L2gyPgogICAgICA8dWwgY2xhc3M9IlVuaXRNZXRhLWxpbmtzIj4KICAgICAgICAKICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kZXBzLmRldi9nby9nb3BrZy5pbiUyRmltZGFyaW8lMkZtZXJnby52MC92MC4zLjkiIHRpdGxlPSJWaWV3IHRoaXMgbW9kdWxlIG9uIE9wZW4gU291cmNlIEluc2lnaHRzIgogICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiBkYXRhLXRlc3QtaWQ9Im1ldGEtbGluay1kZXBzZGV2Ij4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJkZXBzZGV2LUljb24iIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9kZXBzZGV2LWxvZ28uc3ZnIiAKICAgICAgICAgICAgICAgIGFsdD0iT3BlbiBTb3VyY2UgSW5zaWdodHMgTG9nbyIgLz4KICAgICAgICAgICAgICBPcGVuIFNvdXJjZSBJbnNpZ2h0cwogICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgIAogIAoKICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICA8L3VsPgogICAgCiAgPC9kaXY+Cgo8L2FzaWRlPgogICAgPG5hdiBjbGFzcz0iZ28tTWFpbi1uYXYgZ28tTWFpbi1uYXYtLXN0aWNreSBqcy1tYWluTmF2IiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICA8ZGl2IGNsYXNzPSJnby1NYWluLW5hdkRlc2t0b3AiPgogICAgCiAgPGRpdiBjbGFzcz0iVW5pdE91dGxpbmUtanVtcFRvIj4KICAgIDxidXR0b24gY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUb0lucHV0IGdvLVNob3J0Y3V0S2V5IGpzLWp1bXBUb0lucHV0IgogICAgICAgIGFyaWEtY29udHJvbHM9Imp1bXAtdG8tbW9kYWwiCiAgICAgICAgYXJpYS1sYWJlbD0iT3BlbiBKdW1wIHRvIElkZW50aWZpZXIiCiAgICAgICAgZGF0YS1zaG9ydGN1dD0iZiIKICAgICAgICBkYXRhLXNob3J0Y3V0LWFsdD0iZmluZCIKICAgICAgICBkYXRhLXRlc3QtaWQ9Imp1bXAtdG8tYnV0dG9uIiBkYXRhLWd0bWM9Im91dGxpbmUgYnV0dG9uIj4KICAgICAgSnVtcCB0byAuLi4KICAgIDwvYnV0dG9uPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iZ28tVHJlZSBqcy10cmVlIiByb2xlPSJ0cmVlIiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICAgIAogICAgICA8bGkgY2xhc3M9ImpzLXJlYWRtZU91dGxpbmUiPgogICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSIgZGF0YS1ndG1jPSJvdXRsaW5lIGxpbmsiPgogICAgICAgICAgUkVBRE1FCiAgICAgICAgPC9hPgogICAgICAgIAogIDx1bCBpZD0icmVhZG1lLW91dGxpbmUiPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLXN0YXR1cyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFN0YXR1cwogICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICAgIDx1bD4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1sYXRlc3QtcmVsZWFzZSIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgICAgTGF0ZXN0IHJlbGVhc2UKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWltcG9ydGFudC1ub3RlIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBJbXBvcnRhbnQgbm90ZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtZG9uYXRpb25zIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBEb25hdGlvbnMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjcmVhZG1lLW1lcmdvLWluLXRoZS13aWxkIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBNZXJnbyBpbiB0aGUgd2lsZAogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvdWw+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWluc3RhbGxhdGlvbiIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIEluc3RhbGxhdGlvbgogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdXNhZ2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBVc2FnZQogICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICAgIDx1bD4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1uaWNlLWV4YW1wbGUiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICAgIE5pY2UgZXhhbXBsZQogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdHJhbnNmb3JtZXJzIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgICBUcmFuc2Zvcm1lcnMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgCiAgICAgICAgICA8L3VsPgogICAgICAgICAKICAgICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3JlYWRtZS1jb250YWN0LW1lIiBkYXRhLWd0bWM9InJlYWRtZSBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgQ29udGFjdCBtZQogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtYWJvdXQiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBBYm91dAogICAgICAgIDwvYT4KICAgICAgICAgCiAgICAgIDwvbGk+CiAgICAKICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9IiNyZWFkbWUtdG9wLWNvbnRyaWJ1dG9ycyIgZGF0YS1ndG1jPSJyZWFkbWUgb3V0bGluZSBsaW5rIj4KICAgICAgICAgIFRvcCBDb250cmlidXRvcnMKICAgICAgICA8L2E+CiAgICAgICAgIAogICAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWxpY2Vuc2UiIGRhdGEtZ3RtYz0icmVhZG1lIG91dGxpbmUgbGluayI+CiAgICAgICAgICBMaWNlbnNlCiAgICAgICAgPC9hPgogICAgICAgICAKICAgICAgPC9saT4KICAgICAKICA8L3VsPgoKICAgICAgPC9saT4KICAgIAogICAgCiAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIiBkYXRhLWd0bWM9Im91dGxpbmUgbGluayI+CiAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgPC9hPgogICAgICAgIAo8dWw+CiAgCiAgICA8bGk+CiAgICAgIDxhIGhyZWY9IiNwa2ctb3ZlcnZpZXciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+T3ZlcnZpZXc8L2E+CiAgICA8L2xpPgogIDxsaSBjbGFzcz0iRG9jTmF2LW92ZXJ2aWV3Ij4KICAgICAgPGEgaHJlZj0iI3BrZy1pbmRleCIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgIENvbnN0YW50cwogICAgICA8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgVmFyaWFibGVzCiAgICAgIDwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICAKICAgICAgICA8dWw+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNNYXAiIHRpdGxlPSJNYXAoZHN0LCBzcmMsIG9wdHMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTWFwKGRzdCwgc3JjLCBvcHRzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI01hcFdpdGhPdmVyd3JpdGUiIHRpdGxlPSJNYXBXaXRoT3ZlcndyaXRlKGRzdCwgc3JjLCBvcHRzKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIE1hcFdpdGhPdmVyd3JpdGUoZHN0LCBzcmMsIG9wdHMpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjTWVyZ2UiIHRpdGxlPSJNZXJnZShkc3QsIHNyYywgb3B0cykiIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgICBNZXJnZShkc3QsIHNyYywgb3B0cykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiIHRpdGxlPSJNZXJnZVdpdGhPdmVyd3JpdGUoZHN0LCBzcmMsIG9wdHMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgTWVyZ2VXaXRoT3ZlcndyaXRlKGRzdCwgc3JjLCBvcHRzKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhBcHBlbmRTbGljZSIgdGl0bGU9IldpdGhBcHBlbmRTbGljZShjb25maWcpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aEFwcGVuZFNsaWNlKGNvbmZpZykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcnJpZGUiIHRpdGxlPSJXaXRoT3ZlcnJpZGUoY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhPdmVycmlkZShjb25maWcpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aE92ZXJyaWRlRW1wdHlTbGljZSIgdGl0bGU9IldpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iI1dpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZSIgdGl0bGU9IldpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZShjb25maWcpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlKGNvbmZpZykKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgIDxhIGhyZWY9IiNXaXRoVHJhbnNmb3JtZXJzIiB0aXRsZT0iV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMpIiBkYXRhLWd0bWM9ImRvYyBvdXRsaW5lIGxpbmsiPgogICAgICAgICAgICAgICAgV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMpCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIjV2l0aFR5cGVDaGVjayIgdGl0bGU9IldpdGhUeXBlQ2hlY2soY29uZmlnKSIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICAgIFdpdGhUeXBlQ2hlY2soY29uZmlnKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICAgIDwvdWw+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LXR5cGVzIj4KICAgICAgPGEgaHJlZj0iI3BrZy10eXBlcyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICBUeXBlcwogICAgICA8L2E+CiAgICAgIDx1bD4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIjQ29uZmlnIiB0aXRsZT0idHlwZSBDb25maWciIGRhdGEtZ3RtYz0iZG9jIG91dGxpbmUgbGluayI+CiAgICAgICAgICAgICAgdHlwZSBDb25maWcKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9IiNUcmFuc2Zvcm1lcnMiIHRpdGxlPSJ0eXBlIFRyYW5zZm9ybWVycyIgZGF0YS1ndG1jPSJkb2Mgb3V0bGluZSBsaW5rIj4KICAgICAgICAgICAgICB0eXBlIFRyYW5zZm9ybWVycwogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgIAogICAgICA8L3VsPgogICAgPC9saT4KICAKICAKPC91bD4KCiAgICAgIDwvbGk+CiAgICAKICAgIAogICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiIGRhdGEtZ3RtYz0ib3V0bGluZSBsaW5rIj4KICAgICAgICAgIFNvdXJjZSBGaWxlcwogICAgICAgIDwvYT4KICAgICAgPC9saT4KICAgIAogICAgCiAgPC91bD4KCiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iZ28tTWFpbi1uYXZNb2JpbGUganMtbWFpbk5hdk1vYmlsZSI+CiAgICA8bGFiZWwgY2xhc3M9ImdvLUxhYmVsIj4KICAgICAgPHNlbGVjdCBjbGFzcz0iZ28tU2VsZWN0Ij4KICAgICAgICAKICAgICAgICAgIDxvcHRpb24gc2VsZWN0ZWQgZGlzYWJsZWQ+UkVBRE1FPC9vcHRpb24+CiAgICAgICAgCiAgICAgIDwvc2VsZWN0PgogICAgPC9sYWJlbD4KICA8L2Rpdj4KPC9uYXY+CiAgICA8YXJ0aWNsZSBjbGFzcz0iZ28tTWFpbi1hcnRpY2xlIGpzLW1haW5Db250ZW50Ij4KICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscyIgZGF0YS10ZXN0LWlkPSJVbml0RGV0YWlscyIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyI+CiAgICA8ZGl2IGNsYXNzPSJVbml0RGV0YWlscy1jb250ZW50IGpzLXVuaXREZXRhaWxzQ29udGVudCIgZGF0YS10ZXN0LWlkPSJVbml0RGV0YWlscy1jb250ZW50Ij4KICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdFJlYWRtZSBVbml0UmVhZG1lLS1leHBhbmRlZCBqcy1yZWFkbWUiPgogICAgPGgyIGNsYXNzPSJVbml0UmVhZG1lLXRpdGxlIiBpZD0ic2VjdGlvbi1yZWFkbWUiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jaHJvbWVfcmVhZGVyX21vZGVfZ21fZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICBSRUFETUUKICAgICAgPGEgY2xhc3M9IlVuaXRSZWFkbWUtaWRMaW5rIiBocmVmPSIjc2VjdGlvbi1yZWFkbWUiPsK2PC9hPgogICAgPC9oMj4KICAgIAogICAgICA8ZGl2IGNsYXNzPSJVbml0UmVhZG1lLWNvbnRlbnQiIGRhdGEtdGVzdC1pZD0iVW5pdC1yZWFkbWVDb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJPdmVydmlldy1yZWFkbWVDb250ZW50IGpzLXJlYWRtZUNvbnRlbnQiPjxoMyBjbGFzcz0iaDEiIGlkPSJyZWFkbWUtbWVyZ28iPk1lcmdvPC9oMz4KPHA+QSBoZWxwZXIgdG8gbWVyZ2Ugc3RydWN0cyBhbmQgbWFwcyBpbiBHb2xhbmcuIFVzZWZ1bCBmb3IgY29uZmlndXJhdGlvbiBkZWZhdWx0IHZhbHVlcywgYXZvaWRpbmcgbWVzc3kgaWYtc3RhdGVtZW50cy48L3A+CjxwPkFsc28gYSBsb3ZlbHkgPGEgaHJlZj0iaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NZXJnbyIgcmVsPSJub2ZvbGxvdyI+Y29tdW5lPC9hPiAobXVuaWNpcGFsaXR5KSBpbiB0aGUgUHJvdmluY2Ugb2YgQW5jb25hIGluIHRoZSBJdGFsaWFuIHJlZ2lvbiBvZiBNYXJjaGUuPC9wPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLXN0YXR1cyI+U3RhdHVzPC9oND4KPHA+SXQgaXMgcmVhZHkgZm9yIHByb2R1Y3Rpb24gdXNlLiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyNtZXJnby1pbi10aGUtd2lsZCIgcmVsPSJub2ZvbGxvdyI+SXQgaXMgdXNlZCBpbiBzZXZlcmFsIHByb2plY3RzIGJ5IERvY2tlciwgR29vZ2xlLCBUaGUgTGludXggRm91bmRhdGlvbiwgVk1XYXJlLCBTaG9waWZ5LCBldGM8L2E+LjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvP3N0YXR1cy5zdmc9IiBhbHQ9IkdvRG9jIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2dvcmVwb3J0Y2FyZC5jb20vcmVwb3J0L2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vZ29yZXBvcnRjYXJkLmNvbS9iYWRnZS9pbWRhcmlvL21lcmdvIiBhbHQ9IkdvQ2FyZCIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL2ltZGFyaW8vbWVyZ28iIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3RyYXZpcy1jaS5vcmcvaW1kYXJpby9tZXJnby5wbmciIGFsdD0iQnVpbGQgU3RhdHVzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2NvdmVyYWxscy5pby9naXRodWIvaW1kYXJpby9tZXJnbz9icmFuY2g9bWFzdGVyIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vcmVwb3MvZ2l0aHViL2ltZGFyaW8vbWVyZ28vYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXIiIGFsdD0iQ292ZXJhZ2UgU3RhdHVzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZWdyYXBoLmNvbS9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28/YmFkZ2U9IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VncmFwaC5jb20vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvLy0vYmFkZ2Uuc3ZnIiBhbHQ9IlNvdXJjZWdyYXBoIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2FwcC5mb3NzYS5pby9wcm9qZWN0cy9naXQlMkJnaXRodWIuY29tJTJGaW1kYXJpbyUyRm1lcmdvP3JlZj1iYWRnZV9zaGllbGQiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2FwcC5mb3NzYS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnby5zdmc/dHlwZT1zaGllbGQiIGFsdD0iRk9TU0EgU3RhdHVzIi8+PC9hPjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1sYXRlc3QtcmVsZWFzZSI+TGF0ZXN0IHJlbGVhc2U8L2g1Pgo8cD48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9yZWxlYXNlcy90YWcvdjAuMy43IiByZWw9Im5vZm9sbG93Ij5SZWxlYXNlIHYwLjMuNzwvYT4uPC9wPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLWltcG9ydGFudC1ub3RlIj5JbXBvcnRhbnQgbm90ZTwvaDU+CjxwPlBsZWFzZSBrZWVwIGluIG1pbmQgdGhhdCBpbiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9pbWRhcmlvL21lcmdvL3JlbGVhc2VzL3RhZy8wLjMuMiIgcmVsPSJub2ZvbGxvdyI+MC4zLjI8L2E+IE1lcmdvIGNoYW5nZWQgPGNvZGU+TWVyZ2UoKTwvY29kZT5hbmQgPGNvZGU+TWFwKCk8L2NvZGU+IHNpZ25hdHVyZXMgdG8gc3VwcG9ydCA8YSBocmVmPSIjcmVhZG1lLXRyYW5zZm9ybWVycyIgcmVsPSJub2ZvbGxvdyI+dHJhbnNmb3JtZXJzPC9hPi4gQW4gb3B0aW9uYWwvdmFyaWFkaWMgYXJndW1lbnQgaGFzIGJlZW4gYWRkZWQsIHNvIGl0IHdvbiYjMzk7dCBicmVhayBleGlzdGluZyBjb2RlLjwvcD4KPHA+SWYgeW91IHdlcmUgdXNpbmcgTWVyZ28gPHN0cm9uZz5iZWZvcmU8L3N0cm9uZz4gQXByaWwgNnRoIDIwMTUsIHBsZWFzZSBjaGVjayB5b3VyIHByb2plY3Qgd29ya3MgYXMgaW50ZW5kZWQgYWZ0ZXIgdXBkYXRpbmcgeW91ciBsb2NhbCBjb3B5IHdpdGggPGNvZGU+Z28gZ2V0IC11IGdpdGh1Yi5jb20vaW1kYXJpby9tZXJnbzwvY29kZT4uIEkgYXBvbG9naXplIGZvciBhbnkgaXNzdWUgY2F1c2VkIGJ5IGl0cyBwcmV2aW91cyBiZWhhdmlvciBhbmQgYW55IGZ1dHVyZSBidWcgdGhhdCBNZXJnbyBjb3VsZCBjYXVzZSAoSSBob3BlIGl0IHdvbiYjMzk7dCEpIGluIGV4aXN0aW5nIHByb2plY3RzIGFmdGVyIHRoZSBjaGFuZ2UgKHJlbGVhc2UgMC4yLjApLjwvcD4KPGg1IGNsYXNzPSJoMyIgaWQ9InJlYWRtZS1kb25hdGlvbnMiPkRvbmF0aW9uczwvaDU+CjxwPklmIE1lcmdvIGlzIHVzZWZ1bCB0byB5b3UsIGNvbnNpZGVyIGJ1eWluZyBtZSBhIGNvZmZlZSwgYSBiZWVyIG9yIG1ha2luZyBhIG1vbnRobHkgZG9uYXRpb24gc28gSSBjYW4ga2VlcCBidWlsZGluZyBncmVhdCBmcmVlIHNvZnR3YXJlLiDwn5iNPC9wPgo8cD48YSBocmVmPSJodHRwczovL2tvLWZpLmNvbS9CMEI1ODgzOSIgcmVsPSJub2ZvbGxvdyI+PGltZyBoZWlnaHQ9IjM2IiBzcmM9Imh0dHBzOi8vYXo3NDM3MDIudm8ubXNlY25kLm5ldC9jZG4va29maTEucG5nP3Y9MCIgYWx0PSJCdXkgTWUgYSBDb2ZmZWUgYXQga28tZmkuY29tIi8+PC9hPgo8YSBocmVmPSJodHRwczovL2JlZXJwYXkuaW8vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vYmVlcnBheS5pby9pbWRhcmlvL21lcmdvL2JhZGdlLnN2ZyIgYWx0PSJCZWVycGF5Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL2JlZXJwYXkuaW8vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vYmVlcnBheS5pby9pbWRhcmlvL21lcmdvL21ha2Utd2lzaC5zdmciIGFsdD0iQmVlcnBheSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9saWJlcmFwYXkuY29tL2RhcmlvL2RvbmF0ZSIgcmVsPSJub2ZvbGxvdyI+PGltZyBhbHQ9IkRvbmF0ZSB1c2luZyBMaWJlcmFwYXkiIHNyYz0iaHR0cHM6Ly9saWJlcmFwYXkuY29tL2Fzc2V0cy93aWRnZXRzL2RvbmF0ZS5zdmciPjwvYT48L3A+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtbWVyZ28taW4tdGhlLXdpbGQiPk1lcmdvIGluIHRoZSB3aWxkPC9oNT4KPHVsPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21vYnkvbW9ieSIgcmVsPSJub2ZvbGxvdyI+bW9ieS9tb2J5PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy9rdWJlcm5ldGVzIiByZWw9Im5vZm9sbG93Ij5rdWJlcm5ldGVzL2t1YmVybmV0ZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS92bXdhcmUvZGlzcGF0Y2giIHJlbD0ibm9mb2xsb3ciPnZtd2FyZS9kaXNwYXRjaDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1Nob3BpZnkvdGhlbWVraXQiIHJlbD0ibm9mb2xsb3ciPlNob3BpZnkvdGhlbWVraXQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL3phcyIgcmVsPSJub2ZvbGxvdyI+aW1kYXJpby96YXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tYXRjb3JuaWMvaGVybWVzIiByZWw9Im5vZm9sbG93Ij5tYXRjb3JuaWMvaGVybWVzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vT3BlbkJhemFhci9vcGVuYmF6YWFyLWdvIiByZWw9Im5vZm9sbG93Ij5PcGVuQmF6YWFyL29wZW5iYXphYXItZ288L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rYXRhcmFzL2lyaXMiIHJlbD0ibm9mb2xsb3ciPmthdGFyYXMvaXJpczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21pY2hhZWxzYXV0ZXIvY3JhbmUiIHJlbD0ibm9mb2xsb3ciPm1pY2hhZWxzYXV0ZXIvY3JhbmU8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nby10YXNrL3Rhc2siIHJlbD0ibm9mb2xsb3ciPmdvLXRhc2svdGFzazwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NlbnN1L3VjaGl3YSIgcmVsPSJub2ZvbGxvdyI+c2Vuc3UvdWNoaXdhPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vb3J5L2h5ZHJhIiByZWw9Im5vZm9sbG93Ij5vcnkvaHlkcmE8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zaXNhdGVjaC92Y2xpIiByZWw9Im5vZm9sbG93Ij5zaXNhdGVjaC92Y2xpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZGFpcnljYXJ0L2RhaXJ5Y2FydCIgcmVsPSJub2ZvbGxvdyI+ZGFpcnljYXJ0L2RhaXJ5Y2FydDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RjYWxpY28vZmVsaXgiIHJlbD0ibm9mb2xsb3ciPnByb2plY3RjYWxpY28vZmVsaXg8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yZXNpbi1vcy9iYWxlbmEiIHJlbD0ibm9mb2xsb3ciPnJlc2luLW9zL2JhbGVuYTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvLWtpdmlrL2tpdmlrIiByZWw9Im5vZm9sbG93Ij5nby1raXZpay9raXZpazwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1RlbGVmb25pY2EvZ292aWNlIiByZWw9Im5vZm9sbG93Ij5UZWxlZm9uaWNhL2dvdmljZTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvc3VwZXJnaWFudC9zdXBlcmdpYW50IiByZWw9Im5vZm9sbG93Ij5zdXBlcmdpYW50L3N1cGVyZ2lhbnQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9TZXJnZXlUc2Fsa292L2Jyb29jZSIgcmVsPSJub2ZvbGxvdyI+U2VyZ2V5VHNhbGtvdi9icm9vY2U8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zb25pYWgvZG5zbWFkZWVhc3kiIHJlbD0ibm9mb2xsb3ciPnNvbmlhaC9kbnNtYWRlZWFzeTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL29oc3UtY29tcC1iaW8vZnVubmVsIiByZWw9Im5vZm9sbG93Ij5vaHN1LWNvbXAtYmlvL2Z1bm5lbDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0VhZ2VySU8vU3RvdXQiIHJlbD0ibm9mb2xsb3ciPkVhZ2VySU8vU3RvdXQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9seW5uZHlsYW5odXJsZXkvZGVmc3ludGgtYXBpIiByZWw9Im5vZm9sbG93Ij5seW5uZHlsYW5odXJsZXkvZGVmc3ludGgtYXBpPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcnVzc3Jvc3MvY2FudmFzYXNzaWdubWVudHMiIHJlbD0ibm9mb2xsb3ciPnJ1c3Nyb3NzL2NhbnZhc2Fzc2lnbm1lbnRzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcmRlZ2dlcy9jcnlwdGx5LWFwaSIgcmVsPSJub2ZvbGxvdyI+cmRlZ2dlcy9jcnlwdGx5LWFwaTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Nhc3VhbGppbS9leGVnZ3V0b3IiIHJlbD0ibm9mb2xsb3ciPmNhc3VhbGppbS9leGVnZ3V0b3I8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kaXZzaG90L2dpdGxpbmciIHJlbD0ibm9mb2xsb3ciPmRpdnNob3QvZ2l0bGluZzwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1JXSk11cnBoeS9nb3JsIiByZWw9Im5vZm9sbG93Ij5SV0pNdXJwaHkvZ29ybDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FuZHJlcm9ja2VyL2RlcGxveTQyIiByZWw9Im5vZm9sbG93Ij5hbmRyZXJvY2tlci9kZXBsb3k0MjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Vsd2luYXIvcmFtYmxlciIgcmVsPSJub2ZvbGxvdyI+ZWx3aW5hci9yYW1ibGVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdG1haWFyb3RvL2dvcGFydG1hbiIgcmVsPSJub2ZvbGxvdyI+dG1haWFyb3RvL2dvcGFydG1hbjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pmYnVzL2ltcHJlc3Npb25pc3QiIHJlbD0ibm9mb2xsb3ciPmpmYnVzL2ltcHJlc3Npb25pc3Q8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9KbWV5ZXJpbmcvemVhbG90IiByZWw9Im5vZm9sbG93Ij5KbWV5ZXJpbmcvemVhbG90PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29kZXAtbWlncmF0b3IvcmlnZ2VyLWhvc3QiIHJlbD0ibm9mb2xsb3ciPmdvZGVwLW1pZ3JhdG9yL3JpZ2dlci1ob3N0PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRHJvbmV2ZXJ5L011bHRpd2F5U3dpdGNoLUdvIiByZWw9Im5vZm9sbG93Ij5Ecm9uZXZlcnkvTXVsdGl3YXlTd2l0Y2gtR288L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aG9hcy9waWNmaXQiIHJlbD0ibm9mb2xsb3ciPnRob2FzL3BpY2ZpdDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21hbnRhc21hdGVsaXMvd2hvb3BsaXN0LXNlcnZlciIgcmVsPSJub2ZvbGxvdyI+bWFudGFzbWF0ZWxpcy93aG9vcGxpc3Qtc2VydmVyPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vam51dGhvbmcvaXRlbV9zZWFyY2giIHJlbD0ibm9mb2xsb3ciPmpudXRob25nL2l0ZW1fc2VhcmNoPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYnVrYWxhcGFrL3Nub3dib2FyZCIgcmVsPSJub2ZvbGxvdyI+YnVrYWxhcGFrL3Nub3dib2FyZDwvYT48L2xpPgo8L3VsPgo8aDQgY2xhc3M9ImgyIiBpZD0icmVhZG1lLWluc3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uPC9oND4KPHByZT48Y29kZT5nbyBnZXQgZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvCgovLyB1c2UgaW4geW91ciAuZ28gY29kZQppbXBvcnQgKAogICAgJiMzNDtnaXRodWIuY29tL2ltZGFyaW8vbWVyZ28mIzM0OwopCjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS11c2FnZSI+VXNhZ2U8L2g0Pgo8cD5Zb3UgY2FuIG9ubHkgbWVyZ2Ugc2FtZS10eXBlIHN0cnVjdHMgd2l0aCBleHBvcnRlZCBmaWVsZHMgaW5pdGlhbGl6ZWQgYXMgemVybyB2YWx1ZSBvZiB0aGVpciB0eXBlIGFuZCBzYW1lLXR5cGVzIG1hcHMuIE1lcmdvIHdvbiYjMzk7dCBtZXJnZSB1bmV4cG9ydGVkIChwcml2YXRlKSBmaWVsZHMgYnV0IHdpbGwgZG8gcmVjdXJzaXZlbHkgYW55IGV4cG9ydGVkIG9uZS4gSXQgd29uJiMzOTt0IG1lcmdlIGVtcHR5IHN0cnVjdHMgdmFsdWUgYXMgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnL3JlZi9zcGVjI1RoZV96ZXJvX3ZhbHVlIiByZWw9Im5vZm9sbG93Ij50aGV5IGFyZSBub3QgY29uc2lkZXJlZCB6ZXJvIHZhbHVlczwvYT4gZWl0aGVyLiBBbHNvIG1hcHMgd2lsbCBiZSBtZXJnZWQgcmVjdXJzaXZlbHkgZXhjZXB0IGZvciBzdHJ1Y3RzIGluc2lkZSBtYXBzIChiZWNhdXNlIHRoZXkgYXJlIG5vdCBhZGRyZXNzYWJsZSB1c2luZyBHbyByZWZsZWN0aW9uKS48L3A+CjxwcmU+PGNvZGU+aWYgZXJyIDo9IG1lcmdvLk1lcmdlKCZhbXA7ZHN0LCBzcmMpOyBlcnIgIT0gbmlsIHsKICAgIC8vIC4uLgp9CjwvY29kZT48L3ByZT4KPHA+QWxzbywgeW91IGNhbiBtZXJnZSBvdmVyd3JpdGluZyB2YWx1ZXMgdXNpbmcgdGhlIHRyYW5zZm9ybWVyIDxjb2RlPldpdGhPdmVycmlkZTwvY29kZT4uPC9wPgo8cHJlPjxjb2RlPmlmIGVyciA6PSBtZXJnby5NZXJnZSgmYW1wO2RzdCwgc3JjLCBtZXJnby5XaXRoT3ZlcnJpZGUpOyBlcnIgIT0gbmlsIHsKICAgIC8vIC4uLgp9CjwvY29kZT48L3ByZT4KPHA+QWRkaXRpb25hbGx5LCB5b3UgY2FuIG1hcCBhIDxjb2RlPm1hcFtzdHJpbmddaW50ZXJmYWNle308L2NvZGU+IHRvIGEgc3RydWN0IChhbmQgb3RoZXJ3aXNlLCBmcm9tIHN0cnVjdCB0byBtYXApLCBmb2xsb3dpbmcgdGhlIHNhbWUgcmVzdHJpY3Rpb25zIGFzIGluIDxjb2RlPk1lcmdlKCk8L2NvZGU+LiBLZXlzIGFyZSBjYXBpdGFsaXplZCB0byBmaW5kIGVhY2ggY29ycmVzcG9uZGluZyBleHBvcnRlZCBmaWVsZC48L3A+CjxwcmU+PGNvZGU+aWYgZXJyIDo9IG1lcmdvLk1hcCgmYW1wO2RzdCwgc3JjTWFwKTsgZXJyICE9IG5pbCB7CiAgICAvLyAuLi4KfQo8L2NvZGU+PC9wcmU+CjxwPldhcm5pbmc6IGlmIHlvdSBtYXAgYSBzdHJ1Y3QgdG8gbWFwLCBpdCB3b24mIzM5O3QgZG8gaXQgcmVjdXJzaXZlbHkuIERvbiYjMzk7dCBleHBlY3QgTWVyZ28gdG8gbWFwIHN0cnVjdCBtZW1iZXJzIG9mIHlvdXIgc3RydWN0IGFzIDxjb2RlPm1hcFtzdHJpbmddaW50ZXJmYWNle308L2NvZGU+LiBUaGV5IHdpbGwgYmUganVzdCBhc3NpZ25lZCBhcyB2YWx1ZXMuPC9wPgo8cD5Nb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcyBpbiA8YSBocmVmPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyIgcmVsPSJub2ZvbGxvdyI+Z29kb2MgZG9jdW1lbnRhdGlvbjwvYT4uPC9wPgo8aDUgY2xhc3M9ImgzIiBpZD0icmVhZG1lLW5pY2UtZXhhbXBsZSI+TmljZSBleGFtcGxlPC9oNT4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCgkmIzM0O2ZtdCYjMzQ7CgkmIzM0O2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyYjMzQ7CikKCnR5cGUgRm9vIHN0cnVjdCB7CglBIHN0cmluZwoJQiBpbnQ2NAp9CgpmdW5jIG1haW4oKSB7CglzcmMgOj0gRm9vewoJCUE6ICYjMzQ7b25lJiMzNDssCgkJQjogMiwKCX0KCWRlc3QgOj0gRm9vewoJCUE6ICYjMzQ7dHdvJiMzNDssCgl9CgltZXJnby5NZXJnZSgmYW1wO2Rlc3QsIHNyYykKCWZtdC5QcmludGxuKGRlc3QpCgkvLyBXaWxsIHByaW50CgkvLyB7dHdvIDJ9Cn0KPC9jb2RlPjwvcHJlPgo8cD5Ob3RlOiBpZiB0ZXN0IGFyZSBmYWlsaW5nIGR1ZSBtaXNzaW5nIHBhY2thZ2UsIHBsZWFzZSBleGVjdXRlOjwvcD4KPHByZT48Y29kZT5nbyBnZXQgZ29wa2cuaW4veWFtbC52Mgo8L2NvZGU+PC9wcmU+CjxoNSBjbGFzcz0iaDMiIGlkPSJyZWFkbWUtdHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2g1Pgo8cD5UcmFuc2Zvcm1lcnMgYWxsb3cgdG8gbWVyZ2Ugc3BlY2lmaWMgdHlwZXMgZGlmZmVyZW50bHkgdGhhbiBpbiB0aGUgZGVmYXVsdCBiZWhhdmlvci4gSW4gb3RoZXIgd29yZHMsIG5vdyB5b3UgY2FuIGN1c3RvbWl6ZSBob3cgc29tZSB0eXBlcyBhcmUgbWVyZ2VkLiBGb3IgZXhhbXBsZSwgPGNvZGU+dGltZS5UaW1lPC9jb2RlPiBpcyBhIHN0cnVjdDsgaXQgZG9lc24mIzM5O3QgaGF2ZSB6ZXJvIHZhbHVlIGJ1dCBJc1plcm8gY2FuIHJldHVybiB0cnVlIGJlY2F1c2UgaXQgaGFzIGZpZWxkcyB3aXRoIHplcm8gdmFsdWUuIEhvdyBjYW4gd2UgbWVyZ2UgYSBub24temVybyA8Y29kZT50aW1lLlRpbWU8L2NvZGU+PzwvcD4KPHByZT48Y29kZT5wYWNrYWdlIG1haW4KCmltcG9ydCAoCgkmIzM0O2ZtdCYjMzQ7CgkmIzM0O2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnbyYjMzQ7CiAgICAgICAgJiMzNDtyZWZsZWN0JiMzNDsKICAgICAgICAmIzM0O3RpbWUmIzM0OwopCgp0eXBlIHRpbWVUcmFuc2ZvbWVyIHN0cnVjdCB7Cn0KCmZ1bmMgKHQgdGltZVRyYW5zZm9tZXIpIFRyYW5zZm9ybWVyKHR5cCByZWZsZWN0LlR5cGUpIGZ1bmMoZHN0LCBzcmMgcmVmbGVjdC5WYWx1ZSkgZXJyb3IgewoJaWYgdHlwID09IHJlZmxlY3QuVHlwZU9mKHRpbWUuVGltZXt9KSB7CgkJcmV0dXJuIGZ1bmMoZHN0LCBzcmMgcmVmbGVjdC5WYWx1ZSkgZXJyb3IgewoJCQlpZiBkc3QuQ2FuU2V0KCkgewoJCQkJaXNaZXJvIDo9IGRzdC5NZXRob2RCeU5hbWUoJiMzNDtJc1plcm8mIzM0OykKCQkJCXJlc3VsdCA6PSBpc1plcm8uQ2FsbChbXXJlZmxlY3QuVmFsdWV7fSkKCQkJCWlmIHJlc3VsdFswXS5Cb29sKCkgewoJCQkJCWRzdC5TZXQoc3JjKQoJCQkJfQoJCQl9CgkJCXJldHVybiBuaWwKCQl9Cgl9CglyZXR1cm4gbmlsCn0KCnR5cGUgU25hcHNob3Qgc3RydWN0IHsKCVRpbWUgdGltZS5UaW1lCgkvLyAuLi4KfQoKZnVuYyBtYWluKCkgewoJc3JjIDo9IFNuYXBzaG90e3RpbWUuTm93KCl9CglkZXN0IDo9IFNuYXBzaG90e30KCW1lcmdvLk1lcmdlKCZhbXA7ZGVzdCwgc3JjLCBtZXJnby5XaXRoVHJhbnNmb3JtZXJzKHRpbWVUcmFuc2ZvbWVye30pKQoJZm10LlByaW50bG4oZGVzdCkKCS8vIFdpbGwgcHJpbnQKCS8vIHsgMjAxOC0wMS0xMiAwMToxNTowMCArMDAwMCBVVEMgbT0rMC4wMDAwMDAwMDEgfQp9CjwvY29kZT48L3ByZT4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1jb250YWN0LW1lIj5Db250YWN0IG1lPC9oND4KPHA+SWYgSSBjYW4gaGVscCB5b3UsIHlvdSBoYXZlIGFuIGlkZWEgb3IgeW91IGFyZSB1c2luZyBNZXJnbyBpbiB5b3VyIHByb2plY3RzLCBkb24mIzM5O3QgaGVzaXRhdGUgdG8gZHJvcCBtZSBhIGxpbmUgKG9yIGEgcHVsbCByZXF1ZXN0KTogPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbV9kYXJpbyIgcmVsPSJub2ZvbGxvdyI+QGltX2RhcmlvPC9hPjwvcD4KPGg0IGNsYXNzPSJoMiIgaWQ9InJlYWRtZS1hYm91dCI+QWJvdXQ8L2g0Pgo8cD5Xcml0dGVuIGJ5IDxhIGhyZWY9Imh0dHA6Ly9kYXJpby5pbSIgcmVsPSJub2ZvbGxvdyI+RGFyaW8gQ2FzdGHDscOpPC9hPi48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtdG9wLWNvbnRyaWJ1dG9ycyI+VG9wIENvbnRyaWJ1dG9yczwvaDQ+CjxwPjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzAiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvMCIgYWx0PSIwIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy8xIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzEiIGFsdD0iMSIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vbGlua3MvMiIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2ltYWdlcy8yIiBhbHQ9IjIiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzMiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvMyIgYWx0PSIzIi8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy80IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzQiIGFsdD0iNCIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vbGlua3MvNSIgcmVsPSJub2ZvbGxvdyI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2ltYWdlcy81IiBhbHQ9IjUiLz48L2E+CjxhIGhyZWY9Imh0dHBzOi8vc291cmNlcmVyLmlvL2ZhbWUvaW1kYXJpby9pbWRhcmlvL21lcmdvL2xpbmtzLzYiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9pbWFnZXMvNiIgYWx0PSI2Ii8+PC9hPgo8YSBocmVmPSJodHRwczovL3NvdXJjZXJlci5pby9mYW1lL2ltZGFyaW8vaW1kYXJpby9tZXJnby9saW5rcy83IiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2VyZXIuaW8vZmFtZS9pbWRhcmlvL2ltZGFyaW8vbWVyZ28vaW1hZ2VzLzciIGFsdD0iNyIvPjwvYT48L3A+CjxoNCBjbGFzcz0iaDIiIGlkPSJyZWFkbWUtbGljZW5zZSI+TGljZW5zZTwvaDQ+CjxwPjxhIGhyZWY9Imh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2UiIHJlbD0ibm9mb2xsb3ciPkJTRCAzLUNsYXVzZTwvYT4gbGljZW5zZSwgYXMgPGEgaHJlZj0iaHR0cDovL2dvbGFuZy5vcmcvTElDRU5TRSIgcmVsPSJub2ZvbGxvdyI+R28gbGFuZ3VhZ2U8L2E+LjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9hcHAuZm9zc2EuaW8vcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnbz9yZWY9YmFkZ2VfbGFyZ2UiIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwczovL2FwcC5mb3NzYS5pby9hcGkvcHJvamVjdHMvZ2l0JTJCZ2l0aHViLmNvbSUyRmltZGFyaW8lMkZtZXJnby5zdmc/dHlwZT1sYXJnZSIgYWx0PSJGT1NTQSBTdGF0dXMiLz48L2E+PC9wPgo8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxidXR0b24gY2xhc3M9IlVuaXRSZWFkbWUtZXhwYW5kTGluayBqcy1yZWFkbWVFeHBhbmQiCiAgICAgICAgICBkYXRhLXRlc3QtaWQ9InJlYWRtZS1leHBhbmQiIGRhdGEtZ3RtYz0icmVhZG1lIGJ1dHRvbiIKICAgICAgICAgIGFyaWEtbGFiZWw9IkV4cGFuZCBSZWFkbWUiPkV4cGFuZCDilr48L2J1dHRvbj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iVW5pdFJlYWRtZS1jb2xsYXBzZUxpbmsganMtcmVhZG1lQ29sbGFwc2UiCiAgICAgICAgICBkYXRhLXRlc3QtaWQ9InJlYWRtZS1jb2xsYXBzZSIgZGF0YS1ndG1jPSJyZWFkbWUgYnV0dG9uIgogICAgICAgICAgYXJpYS1sYWJlbD0iRXhwYW5kIFJlYWRtZSI+Q29sbGFwc2Ug4pa0PC9idXR0b24+CiAgICAKICA8L2Rpdj4KCiAgICAgIAogICAgICAKICAgICAgICAKICAgICAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXREb2MiPgogICAgPGgyIGNsYXNzPSJVbml0RG9jLXRpdGxlIiBpZD0ic2VjdGlvbi1kb2N1bWVudGF0aW9uIj4KICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vY29kZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIERvY3VtZW50YXRpb24KICAgICAgPGEgY2xhc3M9IlVuaXREb2MtaWRMaW5rIiBocmVmPSIjc2VjdGlvbi1kb2N1bWVudGF0aW9uIj7CtjwvYT4KICAgIDwvaDI+CiAgICAKICAKICAgIAogIAoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24ganMtZG9jdW1lbnRhdGlvbiI+CiAgICAgIAogICAgICAgIAoKPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb250ZW50IGpzLWRvY0NvbnRlbnQiPiA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlldyI+CiAgICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLW92ZXJ2aWV3IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1vdmVydmlld0hlYWRlciI+T3ZlcnZpZXcgPGEgaHJlZj0iI3BrZy1vdmVydmlldyI+wrY8L2E+PC9oMz4KCjxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgogIDx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPgogICAgPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgogICAgICAgIDxhIGhyZWY9IiNoZHItVXNhZ2UiPlVzYWdlPC9hPgogICAgICA8L2xpPgogICAgPC91bD4KPC9kaXY+CjxwPlBhY2thZ2UgbWVyZ28gbWVyZ2VzIHNhbWUtdHlwZSBzdHJ1Y3RzIGFuZCBtYXBzIGJ5IHNldHRpbmcgZGVmYXVsdCB2YWx1ZXMgaW4gemVyby12YWx1ZSBmaWVsZHMuCjwvcD48cD5NZXJnbyB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGJ1dCB3aWxsIGRvIHJlY3Vyc2l2ZWx5IGFueSBleHBvcnRlZCBvbmUuIEl0IGFsc28gd29uJiMzOTt0IG1lcmdlIHN0cnVjdHMgaW5zaWRlIG1hcHMgKGJlY2F1c2UgdGhleSBhcmUgbm90IGFkZHJlc3NhYmxlIHVzaW5nIEdvIHJlZmxlY3Rpb24pLgo8L3A+PGg0IGlkPSJoZHItVXNhZ2UiPlVzYWdlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1Vc2FnZSI+wrY8L2E+PC9oND48cD5Gcm9tIG15IG93biB3b3JrLWluLXByb2dyZXNzIHByb2plY3Q6CjwvcD48cHJlPnR5cGUgbmV0d29ya0NvbmZpZyBzdHJ1Y3QgewoJUHJvdG9jb2wgc3RyaW5nCglBZGRyZXNzIHN0cmluZwoJU2VydmVyVHlwZSBzdHJpbmcgYGpzb246ICYjMzQ7c2VydmVyX3R5cGUmIzM0O2AKCVBvcnQgdWludDE2Cn0KCnR5cGUgRnNzbkNvbmZpZyBzdHJ1Y3QgewoJTmV0d29yayBuZXR3b3JrQ29uZmlnCn0KCnZhciBmc3NuRGVmYXVsdCA9IEZzc25Db25maWcgewoJbmV0d29ya0NvbmZpZyB7CgkJJiMzNDt0Y3AmIzM0OywKCQkmIzM0OzEyNy4wLjAuMSYjMzQ7LAoJCSYjMzQ7aHR0cCYjMzQ7LAoJCTMxNTYwLAoJfSwKfQoKLy8gSW5zaWRlIGEgZnVuY3Rpb24gWy4uLl0KCmlmIGVyciA6PSBtZXJnby5NZXJnZSgmYW1wO2NvbmZpZywgZnNzbkRlZmF1bHQpOyBlcnIgIT0gbmlsIHsKCWxvZy5GYXRhbChlcnIpCn0KCi8vIE1vcmUgY29kZSBbLi4uXQo8L3ByZT4KPC9zZWN0aW9uPjxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4Ij4KICAgIDxoMyBpZD0icGtnLWluZGV4IiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEhlYWRlciI+SW5kZXggPGEgaHJlZj0iI3BrZy1pbmRleCI+wrY8L2E+PC9oMz4KCjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleExpc3QiPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhWYXJpYWJsZXMiPjxhIGhyZWY9IiNwa2ctdmFyaWFibGVzIj5WYXJpYWJsZXM8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNNYXAiPmZ1bmMgTWFwKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjTWFwV2l0aE92ZXJ3cml0ZSI+ZnVuYyBNYXBXaXRoT3ZlcndyaXRlKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjTWVyZ2UiPmZ1bmMgTWVyZ2UoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqQ29uZmlnKSkgZXJyb3I8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiPmZ1bmMgTWVyZ2VXaXRoT3ZlcndyaXRlKGRzdCwgc3JjIGludGVyZmFjZXt9LCBvcHRzIC4uLmZ1bmMoKkNvbmZpZykpIGVycm9yPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjV2l0aEFwcGVuZFNsaWNlIj5mdW5jIFdpdGhBcHBlbmRTbGljZShjb25maWcgKkNvbmZpZyk8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcnJpZGUiPmZ1bmMgV2l0aE92ZXJyaWRlKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1dpdGhPdmVycmlkZUVtcHR5U2xpY2UiPmZ1bmMgV2l0aE92ZXJyaWRlRW1wdHlTbGljZShjb25maWcgKkNvbmZpZyk8L2E+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4RnVuY3Rpb24iPgogICAgICAgIDxhIGhyZWY9IiNXaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWUiPmZ1bmMgV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhGdW5jdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI1dpdGhUcmFuc2Zvcm1lcnMiPmZ1bmMgV2l0aFRyYW5zZm9ybWVycyh0cmFuc2Zvcm1lcnMgVHJhbnNmb3JtZXJzKSBmdW5jKCpDb25maWcpPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleEZ1bmN0aW9uIj4KICAgICAgICA8YSBocmVmPSIjV2l0aFR5cGVDaGVjayI+ZnVuYyBXaXRoVHlwZUNoZWNrKGNvbmZpZyAqQ29uZmlnKTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj4KICAgICAgICAgIDxhIGhyZWY9IiNDb25maWciPnR5cGUgQ29uZmlnPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPgogICAgICAgICAgPGEgaHJlZj0iI1RyYW5zZm9ybWVycyI+dHlwZSBUcmFuc2Zvcm1lcnM8L2E+PC9saT4KPC91bD4KPC9zZWN0aW9uPjxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctY29uc3RhbnRzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1jb25zdGFudHNIZWFkZXIiPkNvbnN0YW50cyA8YSBocmVmPSIjcGtnLWNvbnN0YW50cyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzIj48cCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvcD48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctdmFyaWFibGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXNIZWFkZXIiPlZhcmlhYmxlcyA8YSBocmVmPSIjcGtnLXZhcmlhYmxlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdmFyaWFibGVzIj4KICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbkxpbmsiPjxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ28uZ28jTDE3Ij5WaWV3IFNvdXJjZTwvYT48L3NwYW4+CiAgICAgIDxwcmU+dmFyICgKPHNwYW4gaWQ9IkVyck5pbEFyZ3VtZW50cyIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyck5pbEFyZ3VtZW50cyAgICAgICAgICAgICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtzcmMgYW5kIGRzdCBtdXN0IG5vdCBiZSBuaWwmIzM0OykKPC9zcGFuPjxzcGFuIGlkPSJFcnJEaWZmZXJlbnRBcmd1bWVudHNUeXBlcyIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyckRpZmZlcmVudEFyZ3VtZW50c1R5cGVzICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtzcmMgYW5kIGRzdCBtdXN0IGJlIG9mIHNhbWUgdHlwZSYjMzQ7KQo8L3NwYW4+PHNwYW4gaWQ9IkVyck5vdFN1cHBvcnRlZCIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyck5vdFN1cHBvcnRlZCAgICAgICAgICAgICAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtvbmx5IHN0cnVjdHMgYW5kIG1hcHMgYXJlIHN1cHBvcnRlZCYjMzQ7KQo8L3NwYW4+PHNwYW4gaWQ9IkVyckV4cGVjdGVkTWFwQXNEZXN0aW5hdGlvbiIgZGF0YS1raW5kPSJ2YXJpYWJsZSI+CUVyckV4cGVjdGVkTWFwQXNEZXN0aW5hdGlvbiAgICA9IDxhIGhyZWY9Ii9lcnJvcnMiPmVycm9yczwvYT4uPGEgaHJlZj0iL2Vycm9ycyNOZXciPk5ldzwvYT4oJiMzNDtkc3Qgd2FzIGV4cGVjdGVkIHRvIGJlIGEgbWFwJiMzNDspCjwvc3Bhbj48c3BhbiBpZD0iRXJyRXhwZWN0ZWRTdHJ1Y3RBc0Rlc3RpbmF0aW9uIiBkYXRhLWtpbmQ9InZhcmlhYmxlIj4JRXJyRXhwZWN0ZWRTdHJ1Y3RBc0Rlc3RpbmF0aW9uID0gPGEgaHJlZj0iL2Vycm9ycyI+ZXJyb3JzPC9hPi48YSBocmVmPSIvZXJyb3JzI05ldyI+TmV3PC9hPigmIzM0O2RzdCB3YXMgZXhwZWN0ZWQgdG8gYmUgYSBzdHJ1Y3QmIzM0OykKPC9zcGFuPik8L3ByZT4KICAgIDwvZGl2PgogIDxwPkVycm9ycyByZXBvcnRlZCBieSBNZXJnbyB3aGVuIGl0IGZpbmRzIGludmFsaWQgYXJndW1lbnRzLgo8L3A+Cjwvc2VjdGlvbj4KCiAgPGgzIHRhYmluZGV4PSItMSIgaWQ9InBrZy1mdW5jdGlvbnMiIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uc0hlYWRlciI+RnVuY3Rpb25zIDxhIGhyZWY9IiNwa2ctZnVuY3Rpb25zIj7CtjwvYT48L2gzPgoKICA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNYXAiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21hcC5nbyNMMTMyIj5NYXA8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI01hcCI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIE1hcChkc3QsIHNyYyBpbnRlcmZhY2V7fSwgb3B0cyAuLi5mdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+TWFwIHNldHMgZmllbGRzJiMzOTsgdmFsdWVzIGluIGRzdCBmcm9tIHNyYy4Kc3JjIGNhbiBiZSBhIG1hcCB3aXRoIHN0cmluZyBrZXlzIG9yIGEgc3RydWN0LiBkc3QgbXVzdCBiZSB0aGUgb3Bwb3NpdGU6CmlmIHNyYyBpcyBhIG1hcCwgZHN0IG11c3QgYmUgYSB2YWxpZCBwb2ludGVyIHRvIHN0cnVjdC4gSWYgc3JjIGlzIGEgc3RydWN0LApkc3QgbXVzdCBiZSBtYXBbc3RyaW5nXWludGVyZmFjZXt9LgpJdCB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGFuZCB3aWxsIGRvIHJlY3Vyc2l2ZWx5CmFueSBleHBvcnRlZCBmaWVsZC4KSWYgZHN0IGlzIGEgbWFwLCBrZXlzIHdpbGwgYmUgc3JjIGZpZWxkcyYjMzk7IG5hbWVzIGluIGxvd2VyIGNhbWVsIGNhc2UuCk1pc3Npbmcga2V5IGluIHNyYyB0aGF0IGRvZXNuJiMzOTt0IG1hdGNoIGEgZmllbGQgaW4gZHN0IHdpbGwgYmUgc2tpcHBlZC4gVGhpcwpkb2VzbiYjMzk7dCBhcHBseSBpZiBkc3QgaXMgYSBtYXAuClRoaXMgaXMgc2VwYXJhdGVkIG1ldGhvZCBmcm9tIE1lcmdlIGJlY2F1c2UgaXQgaXMgY2xlYW5lciBhbmQgaXQga2VlcHMgc2FuZQpzZW1hbnRpY3M6IG1lcmdpbmcgZXF1YWwgdHlwZXMsIG1hcHBpbmcgZGlmZmVyZW50IChyZXN0cmljdGVkKSB0eXBlcy4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik1hcFdpdGhPdmVyd3JpdGUiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21hcC5nbyNMMTM5Ij5NYXBXaXRoT3ZlcndyaXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNYXBXaXRoT3ZlcndyaXRlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTWFwV2l0aE92ZXJ3cml0ZShkc3QsIHNyYyBpbnRlcmZhY2V7fSwgb3B0cyAuLi5mdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KSkgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPHA+TWFwV2l0aE92ZXJ3cml0ZSB3aWxsIGRvIHRoZSBzYW1lIGFzIE1hcCBleGNlcHQgdGhhdCBub24tZW1wdHkgZHN0IGF0dHJpYnV0ZXMgd2lsbCBiZSBvdmVycmlkZGVuIGJ5Cm5vbi1lbXB0eSBzcmMgYXR0cmlidXRlIHZhbHVlcy4KRGVwcmVjYXRlZDogVXNlIE1hcCjigKYpIHdpdGggV2l0aE92ZXJyaWRlCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJNZXJnZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI1OSI+TWVyZ2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI01lcmdlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgTWVyZ2UoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqPGEgaHJlZj0iI0NvbmZpZyI+Q29uZmlnPC9hPikpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPk1lcmdlIHdpbGwgZmlsbCBhbnkgZW1wdHkgZm9yIHZhbHVlIHR5cGUgYXR0cmlidXRlcyBvbiB0aGUgZHN0IHN0cnVjdCB1c2luZyBjb3JyZXNwb25kaW5nCnNyYyBhdHRyaWJ1dGVzIGlmIHRoZXkgdGhlbXNlbHZlcyBhcmUgbm90IGVtcHR5LiBkc3QgYW5kIHNyYyBtdXN0IGJlIHZhbGlkIHNhbWUtdHlwZSBzdHJ1Y3RzCmFuZCBkc3QgbXVzdCBiZSBhIHBvaW50ZXIgdG8gc3RydWN0LgpJdCB3b24mIzM5O3QgbWVyZ2UgdW5leHBvcnRlZCAocHJpdmF0ZSkgZmllbGRzIGFuZCB3aWxsIGRvIHJlY3Vyc2l2ZWx5IGFueSBleHBvcnRlZCBmaWVsZC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9Ik1lcmdlV2l0aE92ZXJ3cml0ZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI2NiI+TWVyZ2VXaXRoT3ZlcndyaXRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNNZXJnZVdpdGhPdmVyd3JpdGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBNZXJnZVdpdGhPdmVyd3JpdGUoZHN0LCBzcmMgaW50ZXJmYWNle30sIG9wdHMgLi4uZnVuYygqPGEgaHJlZj0iI0NvbmZpZyI+Q29uZmlnPC9hPikpIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxwPk1lcmdlV2l0aE92ZXJ3cml0ZSB3aWxsIGRvIHRoZSBzYW1lIGFzIE1lcmdlIGV4Y2VwdCB0aGF0IG5vbi1lbXB0eSBkc3QgYXR0cmlidXRlcyB3aWxsIGJlIG92ZXJyaWRkZW4gYnkKbm9uLWVtcHR5IHNyYyBhdHRyaWJ1dGUgdmFsdWVzLgpEZXByZWNhdGVkOiB1c2UgTWVyZ2Uo4oCmKSB3aXRoIFdpdGhPdmVycmlkZQo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aEFwcGVuZFNsaWNlIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjkzIj5XaXRoQXBwZW5kU2xpY2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhBcHBlbmRTbGljZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjQ8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhBcHBlbmRTbGljZShjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoQXBwZW5kU2xpY2Ugd2lsbCBtYWtlIG1lcmdlIGFwcGVuZCBzbGljZXMgaW5zdGVhZCBvZiBvdmVyd3JpdGluZyBpdC4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhPdmVycmlkZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI3OCI+V2l0aE92ZXJyaWRlPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoT3ZlcnJpZGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoT3ZlcnJpZGUoY29uZmlnICo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aE92ZXJyaWRlIHdpbGwgbWFrZSBtZXJnZSBvdmVycmlkZSBub24tZW1wdHkgZHN0IGF0dHJpYnV0ZXMgd2l0aCBub24tZW1wdHkgc3JjIGF0dHJpYnV0ZXMgdmFsdWVzLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aE92ZXJyaWRlRW1wdHlTbGljZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25IZWFkZXIiPgogICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDI4OCI+V2l0aE92ZXJyaWRlRW1wdHlTbGljZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjV2l0aE92ZXJyaWRlRW1wdHlTbGljZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjg8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhPdmVycmlkZUVtcHR5U2xpY2UoY29uZmlnICo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aE92ZXJyaWRlRW1wdHlTbGljZSB3aWxsIG1ha2UgbWVyZ2Ugb3ZlcnJpZGUgZW1wdHkgZHN0IHNsaWNlIHdpdGggZW1wdHkgc3JjIHNsaWNlLgo8L3A+CgogIAoKICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uIj4KCSAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iV2l0aE92ZXJ3cml0ZVdpdGhFbXB0eVZhbHVlIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjgzIj5XaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWU8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICAgICAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uTGFiZWwiPmFkZGVkIGluPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25WZXJzaW9uIj52MC4zLjk8L3NwYW4+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFdpdGhPdmVyd3JpdGVXaXRoRW1wdHlWYWx1ZShjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoT3ZlcndyaXRlV2l0aEVtcHR5VmFsdWUgd2lsbCBtYWtlIG1lcmdlIG92ZXJyaWRlIG5vbiBlbXB0eSBkc3QgYXR0cmlidXRlcyB3aXRoIGVtcHR5IHNyYyBhdHRyaWJ1dGVzIHZhbHVlcy4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbiI+CgkgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IldpdGhUcmFuc2Zvcm1lcnMiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLWZ1bmN0aW9uSGVhZGVyIj4KICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvI0wyNzEiPldpdGhUcmFuc2Zvcm1lcnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1dpdGhUcmFuc2Zvcm1lcnMiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBXaXRoVHJhbnNmb3JtZXJzKHRyYW5zZm9ybWVycyA8YSBocmVmPSIjVHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2E+KSBmdW5jKCo8YSBocmVmPSIjQ29uZmlnIj5Db25maWc8L2E+KTwvcHJlPgogICAgPC9kaXY+CiAgPHA+V2l0aFRyYW5zZm9ybWVycyBhZGRzIHRyYW5zZm9ybWVycyB0byBtZXJnZSwgYWxsb3dpbmcgdG8gY3VzdG9taXplIHRoZSBtZXJnaW5nIG9mIHNvbWUgdHlwZXMuCjwvcD4KCiAgCgogICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb24iPgoJICAKICAKICAKICAgIDxoNCB0YWJpbmRleD0iLTEiIGlkPSJXaXRoVHlwZUNoZWNrIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbkhlYWRlciI+CiAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnZS5nbyNMMjk4Ij5XaXRoVHlwZUNoZWNrPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNXaXRoVHlwZUNoZWNrIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb25MYWJlbCI+YWRkZWQgaW48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvblZlcnNpb24iPnYwLjMuODwvc3Bhbj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgV2l0aFR5cGVDaGVjayhjb25maWcgKjxhIGhyZWY9IiNDb25maWciPkNvbmZpZzwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8cD5XaXRoVHlwZUNoZWNrIHdpbGwgbWFrZSBtZXJnZSBjaGVjayB0eXBlcyB3aGlsZSBvdmVyd3JpdGluZyBpdCAobXVzdCBiZSB1c2VkIHdpdGggV2l0aE92ZXJyaWRlKS4KPC9wPgoKICAKCiAgICAgICAgPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+CiAgICAgIAogIAogIAogICAgPGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbmZpZyIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvI0w0MCI+Q29uZmlnPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDb25maWciPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIAogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDb25maWcgc3RydWN0IHsKPHNwYW4gaWQ9IkNvbmZpZy5PdmVyd3JpdGUiIGRhdGEta2luZD0iZmllbGQiPglPdmVyd3JpdGUgICAgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KPC9zcGFuPjxzcGFuIGlkPSJDb25maWcuQXBwZW5kU2xpY2UiIGRhdGEta2luZD0iZmllbGQiPglBcHBlbmRTbGljZSAgPGEgaHJlZj0iL2J1aWx0aW4jYm9vbCI+Ym9vbDwvYT4KPC9zcGFuPjxzcGFuIGlkPSJDb25maWcuVHlwZUNoZWNrIiBkYXRhLWtpbmQ9ImZpZWxkIj4JVHlwZUNoZWNrICAgIDxhIGhyZWY9Ii9idWlsdGluI2Jvb2wiPmJvb2w8L2E+Cjwvc3Bhbj48c3BhbiBpZD0iQ29uZmlnLlRyYW5zZm9ybWVycyIgZGF0YS1raW5kPSJmaWVsZCI+CVRyYW5zZm9ybWVycyA8YSBocmVmPSIjVHJhbnNmb3JtZXJzIj5UcmFuc2Zvcm1lcnM8L2E+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIGNvbnRhaW5zIGZpbHRlcmVkIG9yIHVuZXhwb3J0ZWQgZmllbGRzPC9zcGFuPgp9PC9wcmU+CiAgICA8L2Rpdj4KICAKCiAgCgogICAgPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj4KICAgICAgCiAgCiAgCiAgICA8aDQgdGFiaW5kZXg9Ii0xIiBpZD0iVHJhbnNmb3JtZXJzIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWVyZ2UuZ28jTDQ5Ij5UcmFuc2Zvcm1lcnM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1RyYW5zZm9ybWVycyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFRyYW5zZm9ybWVycyBpbnRlcmZhY2Ugewo8c3BhbiBpZD0iVHJhbnNmb3JtZXJzLlRyYW5zZm9ybWVyIiBkYXRhLWtpbmQ9Im1ldGhvZCI+CVRyYW5zZm9ybWVyKDxhIGhyZWY9Ii9yZWZsZWN0Ij5yZWZsZWN0PC9hPi48YSBocmVmPSIvcmVmbGVjdCNUeXBlIj5UeXBlPC9hPikgZnVuYyhkc3QsIHNyYyA8YSBocmVmPSIvcmVmbGVjdCI+cmVmbGVjdDwvYT4uPGEgaHJlZj0iL3JlZmxlY3QjVmFsdWUiPlZhbHVlPC9hPikgPGEgaHJlZj0iL2J1aWx0aW4jZXJyb3IiPmVycm9yPC9hPgo8L3NwYW4+fTwvcHJlPgogICAgPC9kaXY+CiAgCgogIAoKICAgIDwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgoKCgoKCiAgICAgIAogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAgIAogICAgICAKICAgICAgCiAgICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdEZpbGVzIGpzLXVuaXRGaWxlcyI+CiAgICA8aDIgY2xhc3M9IlVuaXRGaWxlcy10aXRsZSIgaWQ9InNlY3Rpb24tc291cmNlZmlsZXMiPgogICAgICA8aW1nIGNsYXNzPSJnby1JY29uIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9pbnNlcnRfZHJpdmVfZmlsZV9nbV9ncmV5XzI0ZHAuc3ZnIiBhbHQ9IiI+CiAgICAgIFNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby90cmVlL3YwLjMuOSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPlZpZXcgYWxsPC9hPgogICAgPC9kaXY+CiAgICA8ZGl2PgogICAgICA8dWwgY2xhc3M9IlVuaXRGaWxlcy1maWxlTGlzdCI+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9kb2MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZG9jLmdvIj5kb2MuZ288L2E+CiAgICAgICAgICA8L2xpPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ltZGFyaW8vbWVyZ28vYmxvYi92MC4zLjkvbWFwLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im1hcC5nbyI+bWFwLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbWRhcmlvL21lcmdvL2Jsb2IvdjAuMy45L21lcmdlLmdvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIgdGl0bGU9Im1lcmdlLmdvIj5tZXJnZS5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaW1kYXJpby9tZXJnby9ibG9iL3YwLjMuOS9tZXJnby5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJtZXJnby5nbyI+bWVyZ28uZ288L2E+CiAgICAgICAgICA8L2xpPjwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgICAgIAogICAgICAKICAgIDwvZGl2PgogIDwvZGl2Pgo8L2FydGljbGU+CiAgICA8Zm9vdGVyIGNsYXNzPSJnby1NYWluLWZvb3RlciI+PC9mb290ZXI+CiAgPC9tYWluPgoKICAgIAogIDxmb290ZXIgY2xhc3M9ImdvLUZvb3RlciI+CiAgICAKICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rcyI+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMiIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBXaHkgR28KICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvc29sdXRpb25zI3VzZS1jYXNlcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFVzZSBDYXNlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjY2FzZS1zdHVkaWVzIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ2FzZSBTdHVkaWVzCiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZ28tRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbGVhcm4uZ28uZGV2LyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIGdvLUZvb3Rlci1saW5rLS1wcmltYXJ5IgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEdldCBTdGFydGVkCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb2xhbmcub3JnIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgUGxheWdyb3VuZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3RvdXIuZ29sYW5nLm9yZyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFRvdXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2dvP3RhYj1OZXdlc3QiIGNsYXNzPSJnby1Gb290ZXItbGluayIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBTdGFjayBPdmVyZmxvdwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9oZWxwIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgSGVscAogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYiIGNsYXNzPSJnby1Gb290ZXItbGluayBnby1Gb290ZXItbGluay0tcHJpbWFyeSIKICAgICAgICAgICAgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBQYWNrYWdlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSIvc3RkIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU3RhbmRhcmQgTGlicmFyeQogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLUZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9wcm9qZWN0IiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQWJvdXQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZGwvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPkRvd25sb2FkPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Jsb2ciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+QmxvZzwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nL2dvL2lzc3VlcyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIElzc3VlIFRyYWNrZXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvZG9jL2RldmVsL3JlbGVhc2UuaHRtbCIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIgogICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIFJlbGVhc2UgTm90ZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9ibG9nLmdvbGFuZy5vcmcvZ28tYnJhbmQiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBCcmFuZCBHdWlkZWxpbmVzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2NvbmR1Y3QiIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBDb2RlIG9mIENvbmR1Y3QKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsgZ28tRm9vdGVyLWxpbmstLXByaW1hcnkiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgQ29ubmVjdAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy50d2l0dGVyLmNvbS9nb2xhbmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBUd2l0dGVyCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nb2xhbmciIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+R2l0SHViPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiCiAgICAgICAgICAgIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgU2xhY2sKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9yZWRkaXQuY29tL3IvZ29sYW5nIiBjbGFzcz0iZ28tRm9vdGVyLWxpbmsiIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiPgogICAgICAgICAgci9nb2xhbmcKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iIGNsYXNzPSJnby1Gb290ZXItbGluayIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+CiAgICAgICAgICBNZWV0dXAKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmd3ZWVrbHkuY29tLyIgY2xhc3M9ImdvLUZvb3Rlci1saW5rIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgIEdvbGFuZyBXZWVrbHkKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJnby1Gb290ZXItYm90dG9tIj4KICAgICAgPGltZyBjbGFzcz0iZ28tRm9vdGVyLWdvcGhlciIgIHdpZHRoPSIxNDMxIiBoZWlnaHQ9IjkwMSIKICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvZ29waGVyL3BpbG90LWJ1c3QtMTQzMXg5MDEuc3ZnIiBhbHQ9IkdvcGhlciBpbiBmbGlnaHQgZ29nZ2xlcyI+CiAgICAgIDx1bCBjbGFzcz0iZ28tRm9vdGVyLWxpc3RSb3ciPgogICAgICAgIDxsaSBjbGFzcz0iZ28tRm9vdGVyLWxpc3RJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2NvcHlyaWdodCIgZGF0YS1ndG1jPSJmb290ZXIgbGluayI+Q29weXJpZ2h0PC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvdG9zIiBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj5UZXJtcyBvZiBTZXJ2aWNlPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5nb29nbGUuY29tL2ludGwvZW4vcG9saWNpZXMvcHJpdmFjeS8iIGRhdGEtZ3RtYz0iZm9vdGVyIGxpbmsiCiAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiPgogICAgICAgICAgICBQcml2YWN5IFBvbGljeQogICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJnby1Gb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvcy9wa2dzaXRlLWZlZWRiYWNrIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciIKICAgICAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICAgICAgUmVwb3J0IGFuIElzc3VlCiAgICAgICAgICA8L2E+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9ImdvLUZvb3Rlci1saXN0SXRlbSI+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS10ZXh0IGdvLUZvb3Rlci10b2dnbGVUaGVtZSBqcy10b2dnbGVUaGVtZSIgYXJpYS1sYWJlbD0iVG9nZ2xlIHRoZW1lIj4KICAgICAgICAgICAgPGltZyBkYXRhLXZhbHVlPSJhdXRvIiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYnJpZ2h0bmVzc182X2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iU3lzdGVtIHRoZW1lIj4KICAgICAgICAgICAgPGltZyBkYXRhLXZhbHVlPSJkYXJrIiBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24vYnJpZ2h0bmVzc18yX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iRGFyayB0aGVtZSI+CiAgICAgICAgICAgIDxpbWcgZGF0YS12YWx1ZT0ibGlnaHQiIGNsYXNzPSJnby1JY29uIGdvLUljb24tLWludmVydGVkIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9saWdodF9tb2RlX2dtX2dyZXlfMjRkcC5zdmciIGFsdD0iTGlnaHQgdGhlbWUiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24gZ28tQnV0dG9uLS10ZXh0IGdvLUZvb3Rlci1rZXlib2FyZCBqcy1vcGVuU2hvcnRjdXRzIiBhcmlhLWxhYmVsPSJPcGVuIHNob3JjdXRzIG1vZGFsIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iZ28tSWNvbiBnby1JY29uLS1pbnZlcnRlZCIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBzcmM9Ii9zdGF0aWMvc2hhcmVkL2ljb24va2V5Ym9hcmRfZ3JleV8yNGRwLnN2ZyIgYWx0PSIiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICAgPGEgY2xhc3M9ImdvLUZvb3Rlci1nb29nbGVMb2dvIiBocmVmPSJodHRwczovL2dvb2dsZS5jb20iIHRhcmdldD0iX2JsYW5rInJlbD0ibm9vcGVuZXIiCiAgICAgICAgICBkYXRhLWd0bWM9ImZvb3RlciBsaW5rIj4KICAgICAgICA8aW1nIGNsYXNzPSJnby1Gb290ZXItZ29vZ2xlTG9nb0ltZyIgaGVpZ2h0PSIyNCIgd2lkdGg9IjcyIgogICAgICAgICAgICBzcmM9Ii9zdGF0aWMvc2hhcmVkL2xvZ28vZ29vZ2xlLXdoaXRlLnN2ZyIgYWx0PSJHb29nbGUgbG9nbyI+CiAgICAgIDwvYT4KICAgIDwvZGl2PgogIDwvZm9vdGVyPgoKICAgIAogIDxkaWFsb2cgaWQ9Imp1bXAtdG8tbW9kYWwiIGNsYXNzPSJKdW1wRGlhbG9nIGdvLU1vZGFsIGdvLU1vZGFsLS1tZCBqcy1tb2RhbCI+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyIgZGF0YS1nbXRjPSJqdW1wIHRvIGZvcm0iIGFyaWEtbGFiZWw9Ikp1bXAgdG8gSWRlbnRpZmllciI+CiAgICAgIDxkaXYgY2xhc3M9IkRpYWxvZy10aXRsZSBnby1Nb2RhbC1oZWFkZXIiPgogICAgICAgIDxoMj5KdW1wIHRvPC9oMj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIgogICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgZGF0YS1tb2RhbC1jbG9zZQogICAgICAgICAgZGF0YS1ndG1jPSJtb2RhbCBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jbG9zZV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWZpbHRlciI+CiAgICAgICAgPGlucHV0IGNsYXNzPSJKdW1wRGlhbG9nLWlucHV0IGdvLUlucHV0IiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0idGV4dCI+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWJvZHkgZ28tTW9kYWwtYm9keSI+CiAgICAgICAgPGRpdiBjbGFzcz0iSnVtcERpYWxvZy1saXN0Ij48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImdvLU1vZGFsLWFjdGlvbnMiPgogICAgICAgIDxidXR0b24gY2xhc3M9ImdvLUJ1dHRvbiIgZGF0YS10ZXN0LWlkPSJjbG9zZS1kaWFsb2ciPkNsb3NlPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGlhbG9nPgoKICA8ZGlhbG9nIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cgZ28tTW9kYWwgZ28tTW9kYWwtLXNtIGpzLW1vZGFsIj4KICAgIDxmb3JtIG1ldGhvZD0iZGlhbG9nIj4KICAgICAgPGRpdiBjbGFzcz0iZ28tTW9kYWwtaGVhZGVyIj4KICAgICAgICA8aDI+S2V5Ym9hcmQgc2hvcnRjdXRzPC9oMj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICBjbGFzcz0iZ28tQnV0dG9uIGdvLUJ1dHRvbi0taW5saW5lIgogICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgZGF0YS1tb2RhbC1jbG9zZQogICAgICAgICAgZGF0YS1ndG1jPSJtb2RhbCBidXR0b24iCiAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIGNsYXNzPSJnby1JY29uIgogICAgICAgICAgICBoZWlnaHQ9IjI0IgogICAgICAgICAgICB3aWR0aD0iMjQiCiAgICAgICAgICAgIHNyYz0iL3N0YXRpYy9zaGFyZWQvaWNvbi9jbG9zZV9nbV9ncmV5XzI0ZHAuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgIC8+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1ib2R5Ij4KICAgICAgICA8dGFibGU+CiAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Pzwvc3Ryb25nPjwvdGQ+PHRkPiA6IFRoaXMgbWVudTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPgogICAgICAgICAgICAgIDxzdHJvbmc+Lzwvc3Ryb25nPjwvdGQ+PHRkPiA6IFNlYXJjaCBzaXRlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPjx0ZCBjbGFzcz0iU2hvcnRjdXRzRGlhbG9nLWtleSI+CiAgICAgICAgICAgICAgPHN0cm9uZz5mPC9zdHJvbmc+IG9yIDxzdHJvbmc+Rjwvc3Ryb25nPjwvdGQ+PHRkPiA6IEp1bXAgdG88L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgPHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48c3Ryb25nPnk8L3N0cm9uZz4gb3IgPHN0cm9uZz5ZPC9zdHJvbmc+PC90ZD4KICAgICAgICAgICAgICA8dGQ+IDogQ2Fub25pY2FsIFVSTDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L3Rib2R5PgogICAgICAgIDwvdGFibGU+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJnby1Nb2RhbC1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJnby1CdXR0b24iIGRhdGEtdGVzdC1pZD0iY2xvc2UtZGlhbG9nIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KCiAgICAKICAgICAgPHNjcmlwdD4KICAgICAgICAvLyB0aGlzIHdpbGwgdGhyb3cgaWYgdGhlIHF1ZXJ5U2VsZWN0b3IgY2Fu4oCZdCBmaW5kIHRoZSBlbGVtZW50CiAgICAgICAgY29uc3QgZ3RtSWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtZ3RtSUQnKS5kYXRhc2V0Lmd0bWlkOwogICAgICAgIGlmICghZ3RtSWQpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcignR29vZ2xlIFRhZyBNYW5hZ2VyIElEIG5vdCBmb3VuZCcpOwogICAgICAgIH0KICAgICAgICBsb2FkU2NyaXB0KGBodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JHtndG1JZH1gKTsKICAgICAgPC9zY3JpcHQ+CiAgICAgIDxub3NjcmlwdD4KICAgICAgICA8aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tVzhNVlFYRyIKICAgICAgICAgICAgICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPgogICAgICAgIDwvaWZyYW1lPgogICAgICA8L25vc2NyaXB0PgogICAgCiAgICAKICAKICA8ZGl2IGNsYXNzPSJqcy1jYW5vbmljYWxVUkxQYXRoIiBkYXRhLWNhbm9uaWNhbC11cmwtcGF0aD0iL2dvcGtnLmluL2ltZGFyaW8vbWVyZ28udjBAdjAuMy45IiBoaWRkZW4+PC9kaXY+CiAgPHNjcmlwdD4KICAgIGxvYWRTY3JpcHQoJy9zdGF0aWMvZnJvbnRlbmQvdW5pdC9tYWluL21haW4uanMnKQogIDwvc2NyaXB0PgoKICA8c2NyaXB0PgogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9mcm9udGVuZC91bml0L3VuaXQuanMnKQogIDwvc2NyaXB0PgoKICA8L2JvZHk+CjwvaHRtbD4=
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.9.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '33'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      Last-Modified:
      - Tue, 24 Mar 2020 22:10:52 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.8.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '33'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:42 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Expires:
      - Fri, 08 Jul 2022 16:25:42 GMT
      Last-Modified:
      - Thu, 03 Oct 2019 16:43:24 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:42 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.6.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '33'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:43 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Expires:
      - Fri, 08 Jul 2022 16:25:43 GMT
      Last-Modified:
      - Sat, 20 Jul 2019 04:59:55 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:43 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.4.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '33'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:43 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Expires:
      - Fri, 08 Jul 2022 16:25:43 GMT
      Last-Modified:
      - Sat, 20 Jul 2019 04:59:44 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:43 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.7.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '33'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:25:43 GMT
      Expires:
      - Fri, 08 Jul 2022 16:25:43 GMT
      Cache-Control:
      - public, max-age=10800
      Last-Modified:
      - Tue, 16 Jul 2019 13:43:42 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Content-Type:
      - text/plain; charset=UTF-8
      Age:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:43 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.5.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '33'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:43 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Expires:
      - Fri, 08 Jul 2022 16:25:43 GMT
      Last-Modified:
      - Sat, 20 Jul 2019 04:59:50 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:43 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@v/v0.3.3.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '33'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 13:25:43 GMT
      Etag:
      - '"645c56907f624983308f7021187e6900761ef1403d446df5b47ecb60f17f6aca"'
      Expires:
      - Fri, 08 Jul 2022 16:25:43 GMT
      Last-Modified:
      - Sat, 20 Jul 2019 04:59:39 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module gopkg.in/imdario/mergo.v0

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 13:25:43 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 08 Jul 2022 14:08:55 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:08:55 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '21'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 14:08:55 GMT
      Expires:
      - Fri, 08 Jul 2022 14:09:55 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: |
        v1.0.0
        v1.2.0
        v1.1.0
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:08:55 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.0.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=10800
      Content-Length:
      - '30'
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Fri, 08 Jul 2022 14:08:55 GMT
      Etag:
      - '"38c3512f0207856125c29e96d7919ed25e0c2c5aa18f09208e5bc227e580f584"'
      Expires:
      - Fri, 08 Jul 2022 17:08:55 GMT
      Last-Modified:
      - Tue, 04 Jun 2019 11:05:10 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/robfig/cron

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:08:55 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.2.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '30'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 13:17:16 GMT
      Expires:
      - Fri, 08 Jul 2022 16:17:16 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '3099'
      Last-Modified:
      - Mon, 17 Jun 2019 12:19:42 GMT
      Etag:
      - '"38c3512f0207856125c29e96d7919ed25e0c2c5aa18f09208e5bc227e580f584"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/robfig/cron

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:08:55 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.1.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '30'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 11:25:10 GMT
      Expires:
      - Fri, 08 Jul 2022 14:25:10 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '9825'
      Last-Modified:
      - Sun, 05 May 2019 12:19:27 GMT
      Etag:
      - '"38c3512f0207856125c29e96d7919ed25e0c2c5aa18f09208e5bc227e580f584"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'module github.com/robfig/cron

        '
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:08:55 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/v3/@v/v3.0.0-rc1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 410
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 14:09:40 GMT
      Content-Length:
      - '178'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/v3":
        malformed module path "GITHUB.COM/ROBFIG/CRON/v3": invalid char ''G'' in first
        path element'
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:09:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/v3/@v/v3.0.1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 410
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 14:09:40 GMT
      Content-Length:
      - '178'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/v3":
        malformed module path "GITHUB.COM/ROBFIG/CRON/v3": invalid char ''G'' in first
        path element'
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:09:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/v3/@v/v3.0.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 410
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Fri, 08 Jul 2022 14:09:40 GMT
      Content-Length:
      - '178'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/v3":
        malformed module path "GITHUB.COM/ROBFIG/CRON/v3": invalid char ''G'' in first
        path element'
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:09:40 GMT
- request:
    method: get
    uri: https://pkg.go.dev/GITHUB.COM/ROBFIG/CRON
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      X-Cloud-Trace-Context:
      - c40a13d5bb1abdbc74cdc6be3d3e20e7
      Date:
      - Fri, 08 Jul 2022 14:09:40 GMT
      Server:
      - Google Frontend
      Content-Length:
      - '15652'
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 08 Jul 2022 14:09:40 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v3.0.0-rc1.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3351411116726945237'
      X-Datadog-Parent-Id:
      - '4175271839372999825'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=1797
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 10 Jan 2023 13:37:22 GMT
      Expires:
      - Tue, 10 Jan 2023 14:07:19 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Content-Length:
      - '144'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'not found: github.com/robfig/cron@v3.0.0-rc1: invalid version: go.mod
        has post-v3 module path "github.com/robfig/cron/v3" at revision v3.0.0-rc1'
    http_version:
  recorded_at: Tue, 10 Jan 2023 13:37:22 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v3.0.0-rc1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3460558498787738336'
      X-Datadog-Parent-Id:
      - '2577084151431616529'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=1797
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 10 Jan 2023 13:37:22 GMT
      Expires:
      - Tue, 10 Jan 2023 14:07:19 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Content-Length:
      - '144'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'not found: github.com/robfig/cron@v3.0.0-rc1: invalid version: go.mod
        has post-v3 module path "github.com/robfig/cron/v3" at revision v3.0.0-rc1'
    http_version:
  recorded_at: Tue, 10 Jan 2023 13:37:22 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2075286333048427821'
      X-Datadog-Parent-Id:
      - '799566848295543117'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8='' ''sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=''
        ''sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE='' ''sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=''
        ''sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw='' ''sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=''
        ''sha256-bL+cN9GtUg5dqjPwDiPJq4yfiEvOyEJ3rfw/YkNIAWc='' ''sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=''
        ''sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w='' ''sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=''
        ''sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Tue, 10 Jan 2023 13:37:22 GMT
      Server:
      - Google Frontend
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 10 Jan 2023 13:37:22 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/@v/v1.0.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1290904281651268994'
      X-Datadog-Parent-Id:
      - '2748139857781202749'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 10 Jan 2023 13:37:24 GMT
      Content-Length:
      - '172'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n":
        malformed module path "GITHUB.COM/ROBFIG/CRON": invalid char ''G'' in first
        path element'
    http_version:
  recorded_at: Tue, 10 Jan 2023 13:37:24 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/@v/v1.2.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3061682982119482391'
      X-Datadog-Parent-Id:
      - '78644823277684284'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 10 Jan 2023 13:37:24 GMT
      Content-Length:
      - '172'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n":
        malformed module path "GITHUB.COM/ROBFIG/CRON": invalid char ''G'' in first
        path element'
    http_version:
  recorded_at: Tue, 10 Jan 2023 13:37:24 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n/@v/v1.1.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '4182159464953095211'
      X-Datadog-Parent-Id:
      - '1218380547515799264'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 10 Jan 2023 13:37:24 GMT
      Content-Length:
      - '172'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!g!i!t!h!u!b.!c!o!m/!r!o!b!f!i!g/!c!r!o!n":
        malformed module path "GITHUB.COM/ROBFIG/CRON": invalid char ''G'' in first
        path element'
    http_version:
  recorded_at: Tue, 10 Jan 2023 13:37:24 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!package!manager::!go/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3933507030256662448'
      X-Datadog-Parent-Id:
      - '1946474562591463781'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 21:40:52 GMT
      Content-Length:
      - '126'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!package!manager::!go": malformed
        module path "PackageManager::Go": invalid char '':'''
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:40:52 GMT
- request:
    method: get
    uri: https://proxy.golang.org/!package!manager::!go/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '3058127278821141905'
      X-Datadog-Parent-Id:
      - '441482498311082498'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/plain; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 21:42:03 GMT
      Content-Length:
      - '126'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'bad request: invalid escaped module path "!package!manager::!go": malformed
        module path "PackageManager::Go": invalid char '':'''
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:42:02 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '537966912326472335'
      X-Datadog-Parent-Id:
      - '3687615551021489001'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '189'
      Content-Type:
      - application/json
      Date:
      - Tue, 18 Jul 2023 21:55:17 GMT
      Expires:
      - Tue, 18 Jul 2023 21:56:17 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v1.0.0","Time":"2023-06-20T06:39:01Z","Origin":{"VCS":"git","URL":"https://github.com/imdario/mergo","Ref":"refs/tags/v1.0.0","Hash":"131de815afc35a77c41ae99da6c8f4288b6cb513"}}'
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:17 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/imdario/mergo/@v/v1.0.0.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '1088904094381400917'
      X-Datadog-Parent-Id:
      - '1069748770165807303'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '65'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 21:13:25 GMT
      Expires:
      - Wed, 19 Jul 2023 00:13:25 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '2513'
      Last-Modified:
      - Tue, 20 Jun 2023 06:45:50 GMT
      Etag:
      - '"e23c4b803a6c6e6e45747946e87d24704cd77756cc484bdfd17b57223bf320d6"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        module dario.cat/mergo

        go 1.13

        require gopkg.in/yaml.v3 v3.0.1
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:17 GMT
- request:
    method: get
    uri: https://proxy.golang.org/gopkg.in/imdario/mergo.v0/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2407852344072184949'
      X-Datadog-Parent-Id:
      - '1506693298898836181'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Type:
      - text/plain; charset=UTF-8
      Date:
      - Tue, 18 Jul 2023 21:55:25 GMT
      Expires:
      - Tue, 18 Jul 2023 21:56:25 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Content-Length:
      - '143'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: 'not found: gopkg.in/imdario/mergo.v0@v0.3.16: invalid version: go.mod
        has non-....v0 module path "github.com/imdario/mergo" at revision v0.3.16'
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:26 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '921186308291765564'
      X-Datadog-Parent-Id:
      - '3012569859483249671'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 18 Jul 2023 21:55:26 GMT
      Expires:
      - Tue, 18 Jul 2023 21:56:26 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v3.0.1","Time":"2020-01-04T01:05:08Z"}'
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:26 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/v3/@v/v3.0.1.mod
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2196464319884812724'
      X-Datadog-Parent-Id:
      - '2780766668258259434'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '42'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Date:
      - Tue, 18 Jul 2023 19:35:26 GMT
      Expires:
      - Tue, 18 Jul 2023 22:35:26 GMT
      Cache-Control:
      - public, max-age=10800
      Age:
      - '8400'
      Last-Modified:
      - Sat, 04 Jan 2020 01:34:27 GMT
      Etag:
      - '"f895601ed42554966d2979f56420f655966b079254d92205b53828422298244f"'
      Content-Type:
      - text/plain; charset=UTF-8
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        module github.com/robfig/cron/v3

        go 1.12
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:26 GMT
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@latest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept:
      - application/json
      Accept-Encoding:
      - gzip,deflate,br
      X-Datadog-Trace-Id:
      - '2571490440243594168'
      X-Datadog-Parent-Id:
      - '4420127889235444617'
      X-Datadog-Sampling-Priority:
      - '1'
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=60
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 18 Jul 2023 21:55:26 GMT
      Expires:
      - Tue, 18 Jul 2023 21:56:26 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: '{"Version":"v1.2.0","Time":"2018-05-05T20:34:41Z"}'
    http_version:
  recorded_at: Tue, 18 Jul 2023 21:55:26 GMT
recorded_with: VCR 4.0.0
